{"version":3,"sources":["components/Header/SearchBar.tsx","components/Header/MobileHeader.tsx","components/Header/BottomBar.tsx","components/Header/BrowserHeader.tsx","components/Drawer/UserInfo.tsx","components/Drawer/Drawer.tsx","components/Header/Header.tsx","components/ScrollTopArrow/ScrollTopArrow.tsx","containers/Page/Page.tsx","index.tsx","requests.ts","hooks/useLocalStorage.ts","hooks/useAuth.tsx","components/Avatar/Avatar.tsx","components/UserStrip/UserStrip.tsx","hooks/APIClient.ts","components/Loading/Loading.tsx"],"names":["useStyles","makeStyles","theme","root","position","background","borderRadius","padding","spacing","display","alignItems","results","width","top","listItem","SearchBar","React","memo","callback","useState","setResults","query","setQuery","debouncedQuery","setDebouncedQuery","history","useHistory","classes","useEffect","handler","setTimeout","clearTimeout","get","then","response","data","catch","handleClose","handleNavigate","index","username","push","SearchResults","ClickAwayListener","onClickAway","Paper","className","List","map","result","key","_id","ListItem","button","onClick","UserStrip","user","length","Divider","InputBase","placeholder","value","onChange","event","target","trim","justifyContent","MobileHeader","props","trigger","useScrollTrigger","isSearchOpen","setIsSearchOpen","menu","logo","handleToggle","Slide","appear","direction","in","AppBar","Toolbar","IconButton","Clear","Search","bottom","toolbar","BottomBar","profile","feed","notifications","margin","group","BrowserHeader","textAlign","avatar","height","UserInfo","Avatar","Typography","variant","item","icon","marginRight","Drawer","isOpen","setIsOpen","useAuth","logout","handleOpen","useCallback","listen","handleLogout","handleAbout","iOS","useMemo","test","navigator","userAgent","SwipeableDrawer","anchor","open","onOpen","onClose","disableBackdropTransition","disableDiscovery","Info","fontWeight","cursor","color","Header","useTheme","isMobile","useMediaQuery","breakpoints","down","isDrawerOpen","setIsDrawerOpen","Home","Notifications","Menu","AccountCircle","left","zIndex","opacity","palette","primary","main","fontSize","ScrollTopArrow","showScroll","setShowScroll","window","addEventListener","pageYOffset","scrollTo","Profile","lazy","Feed","Login","Registration","up","Page","preventDuplicate","maxSnack","anchorOrigin","vertical","horizontal","fallback","Loading","exact","path","component","createMuiTheme","teal","light","App","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById","requests","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","_","set","error","message","removeItem","location","reload","Promise","reject","post","patch","put","state","setState","setItem","authContext","createContext","undefined","login","a","isAuthenticated","AuthProvider","children","auth","useLocalStorage","remember","setRemember","setUsername","setToken","useUser","Boolean","name","password","shouldRemember","strategy","accessToken","useProvideAuth","Provider","useContext","avatarUrl","handleClick","src","alt","toUpperCase","style","verified","marginLeft","info","title","subheader","fetcher","endpoint","arrayOptions","initialData","revalidateOnMount","useSWR","url","useProfile","id","useFeed","revalidateOnFocus","useFeedback","loader","marginTop"],"mappings":"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","file":"static/js/main.b206fbea.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {\n  InputBase,\n  List,\n  ListItem,\n  Paper,\n  Divider,\n  ClickAwayListener\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { User } from 'which-types';\n\nimport { get } from '../../requests';\nimport UserStrip from '../UserStrip/UserStrip';\n\ninterface PropTypes {\n  callback?: () => void;\n}\n\nconst INTERVAL = 300;\nconst LIMIT = 7;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    background: 'rgba(255, 255, 255, 0.5)',\n    borderRadius: '2px',\n    padding: theme.spacing(0.5),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  results: {\n    position: 'absolute',\n    width: '100%',\n    top: theme.spacing(5)\n  },\n  listItem: {\n    padding: 0\n  }\n}));\n\nconst SearchBar: React.FC<PropTypes> = React.memo(({ callback }) => {\n  const [results, setResults] = useState<User[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [debouncedQuery, setDebouncedQuery] = useState<string>(query);\n  const history = useHistory();\n  const classes = useStyles();\n\n  useEffect(() => {\n    const handler = setTimeout(() => setDebouncedQuery(query), INTERVAL);\n    return () => clearTimeout(handler);\n  }, [query]);\n\n  useEffect(() => {\n    const fetchPolls = () => {\n      get(`/users?username[$regex]=${debouncedQuery}&$limit=${LIMIT}`)\n        .then(response => setResults(response.data))\n        .catch(() => setResults([]));\n    };\n    if (debouncedQuery) fetchPolls();\n    else setResults([]);\n  }, [debouncedQuery]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setQuery(event.target.value.trim());\n  };\n\n  const handleClose = () => {\n    setDebouncedQuery('');\n    setQuery('');\n  };\n\n  const handleNavigate = (index: number) => () => {\n    const { username } = results[index];\n    history.push(`/profile/${username}`);\n    handleClose();\n    if (callback) callback();\n  };\n\n  const SearchResults = (\n    <ClickAwayListener onClickAway={handleClose}>\n      <Paper className={classes.results}>\n        <List>\n          {\n          results.map((result, index) => (\n            <div key={result._id}>\n              <ListItem button onClick={handleNavigate(index)} className={classes.listItem}>\n                <UserStrip user={result} />\n              </ListItem>\n              {(index < results.length - 1) && <Divider />}\n            </div>\n          ))\n        }\n        </List>\n      </Paper>\n    </ClickAwayListener>\n  );\n\n  return (\n    <div className={classes.root}>\n      <SearchIcon />\n      <InputBase\n        placeholder=\"Search...\"\n        value={query}\n        onChange={handleChange}\n      />\n      {results.length > 0 && SearchResults}\n    </div>\n  );\n});\n\n\nexport default SearchBar;\n\n","import React, { useState } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  useScrollTrigger,\n  Slide\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Search, Clear } from '@material-ui/icons';\nimport SearchBar from './SearchBar';\n\ninterface PropTypes {\n  menu: JSX.Element;\n  logo: JSX.Element;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n});\n\n\nconst MobileHeader: React.FC<PropTypes> = React.memo(props => {\n  const classes = useStyles();\n  const trigger = useScrollTrigger();\n  const [isSearchOpen, setIsSearchOpen] = useState<boolean>(false);\n\n  const { menu, logo } = props;\n\n  const handleToggle = () => {\n    setIsSearchOpen(value => !value);\n  };\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      <AppBar position=\"fixed\">\n        <Toolbar className={classes.root}>\n          {menu}\n          {isSearchOpen ? <SearchBar callback={handleToggle} /> : logo}\n          <IconButton onClick={handleToggle}>\n            {isSearchOpen ? <Clear /> : <Search />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </Slide>\n  );\n});\n\nexport default MobileHeader;\n\n","import React from 'react';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface PropTypes {\n  profile: JSX.Element;\n  feed: JSX.Element;\n  notifications: JSX.Element;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    top: 'auto',\n    bottom: 0\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-around'\n  }\n});\n\n\nconst BottomBar: React.FC<PropTypes> = React.memo(props => {\n  const classes = useStyles();\n  const { profile, feed, notifications } = props;\n\n  return (\n    <AppBar position=\"fixed\" className={classes.root}>\n      <Toolbar className={classes.toolbar}>\n        {notifications}\n        {feed}\n        {profile}\n      </Toolbar>\n    </AppBar>\n  );\n});\n\nexport default BottomBar;\n\n","import React from 'react';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchBar from './SearchBar';\n\ninterface PropTypes {\n  logo: JSX.Element;\n  feed: JSX.Element;\n  notifications: JSX.Element;\n  profile: JSX.Element;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '60%',\n    margin: 'auto',\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  group: {\n    display: 'flex'\n  }\n});\n\n\nconst BrowserHeader: React.FC<PropTypes> = React.memo(props => {\n  const classes = useStyles();\n  const {\n    logo,\n    feed,\n    notifications,\n    profile\n  } = props;\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar className={classes.root}>\n        {logo}\n        <SearchBar />\n        <div className={classes.group}>\n          {feed}\n          {notifications}\n          {profile}\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n});\n\nexport default BrowserHeader;\n\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { User } from 'which-types';\n\nimport Avatar from '../Avatar/Avatar';\n\ninterface PropTypes {\n  user: User;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4, 10),\n    textAlign: 'center'\n  },\n  avatar: {\n    width: theme.spacing(14),\n    height: theme.spacing(14)\n  }\n}));\n\n\nconst UserInfo: React.FC<PropTypes> = React.memo(({ user }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Avatar user={user} className={classes.avatar} />\n      <Typography variant=\"h5\">\n        {user.username}\n      </Typography>\n    </div>\n  );\n});\n\nexport default UserInfo;\n\n","import React, { useMemo, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  SwipeableDrawer,\n  List,\n  ListItem,\n  Typography,\n  Divider\n} from '@material-ui/core';\nimport { ExitToApp as LogoutIcon, Info } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport UserInfo from './UserInfo';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes {\n  isOpen: boolean;\n  setIsOpen: (value: boolean) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    padding: theme.spacing(2, 14, 2, 2)\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\n\nconst Drawer: React.FC<PropTypes> = React.memo(({ isOpen, setIsOpen }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { user, logout } = useAuth();\n\n  const handleOpen = useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  useEffect(() => {\n    // Close drawer on navigations\n    return history.listen(() => handleClose());\n  }, [history, handleClose]);\n\n  const handleLogout = useCallback(() => {\n    logout();\n    history.push('/login');\n  }, [logout, history]);\n\n  const handleAbout = useCallback(() => {\n    history.push('/');\n  }, [history]);\n\n  const iOS = useMemo(() => {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent);\n  }, []);\n\n  return (\n    <SwipeableDrawer\n      anchor=\"left\"\n      open={isOpen}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      disableBackdropTransition={!iOS}\n      disableDiscovery={iOS}\n    >\n      {user && <UserInfo user={user} />}\n      <Divider />\n      <List>\n        {user && (\n          <ListItem button className={classes.item} onClick={handleLogout}>\n            <LogoutIcon className={classes.icon} />\n            <Typography>Logout</Typography>\n          </ListItem>\n        )}\n        <ListItem button className={classes.item} onClick={handleAbout}>\n          <Info className={classes.icon} />\n          <Typography>About</Typography>\n        </ListItem>\n      </List>\n    </SwipeableDrawer>\n  );\n});\n\nexport default Drawer;\n\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  IconButton,\n  Typography,\n  useMediaQuery\n} from '@material-ui/core';\nimport {\n  AccountCircle,\n  Notifications,\n  Home,\n  Menu\n} from '@material-ui/icons';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useAuth } from '../../hooks/useAuth';\nimport MobileHeader from './MobileHeader';\nimport BottomBar from './BottomBar';\nimport BrowserHeader from './BrowserHeader';\nimport Avatar from '../Avatar/Avatar';\nimport Drawer from '../Drawer/Drawer';\n\n\nconst useStyles = makeStyles(theme => ({\n  logo: {\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    color: 'white'\n  },\n  avatar: {\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  }\n}));\n\nconst Header: React.FC = React.memo(() => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const theme = useTheme();\n  const history = useHistory();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const [isDrawerOpen, setIsDrawerOpen] = useState<boolean>(false);\n\n  const handleHome = (): void => {\n    history.push('/');\n  };\n\n  const handleFeed = (): void => {\n    history.push('/feed');\n  };\n\n  const handleProfile = (): void => {\n    if (user) history.push(`/profile/${user.username}`);\n    else history.push('/login');\n  };\n\n  const handleNotifications = (): void => {\n    history.push('/notifications');\n  };\n\n  const handleMenu = (): void => {\n    setIsDrawerOpen(true);\n  };\n\n  const feed = (\n    <IconButton onClick={handleFeed}>\n      <Home />\n    </IconButton>\n  );\n\n  const notifications = (\n    <IconButton onClick={handleNotifications}>\n      <Notifications />\n    </IconButton>\n  );\n\n  const menu = (\n    <IconButton onClick={handleMenu}>\n      <Menu />\n    </IconButton>\n  );\n\n  const logo = (\n    <Typography variant=\"h5\" className={classes.logo} onClick={handleHome}>\n      Which\n    </Typography>\n  );\n\n  const profile = (\n    <IconButton onClick={handleProfile}>\n      {\n        user\n          ? <Avatar className={classes.avatar} user={user} />\n          : <AccountCircle className={classes.avatar} />\n      }\n    </IconButton>\n  );\n\n  return isMobile ? (\n    <>\n      <MobileHeader logo={logo} menu={menu} />\n      <BottomBar feed={feed} profile={profile} notifications={notifications} />\n      <Drawer isOpen={isDrawerOpen} setIsOpen={setIsDrawerOpen} />\n    </>\n  ) : (\n    <BrowserHeader logo={logo} profile={profile} notifications={notifications} feed={feed} />\n  );\n});\n\nexport default Header;\n\n","import React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(10),\n    left: theme.spacing(10),\n    zIndex: 1000,\n    cursor: 'pointer',\n    opacity: 0.4,\n    '&:hover': {\n      opacity: 1\n    },\n    background: theme.palette.primary.main,\n    borderRadius: '50%'\n  },\n  icon: {\n    fontSize: 80,\n    color: 'white'\n  }\n}));\n\nconst ScrollTopArrow: React.FC = React.memo(() => {\n  const [showScroll, setShowScroll] = useState(false);\n  const theme = useTheme();\n  const classes = useStyles();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const checkScrollTop = () => {\n    if (!showScroll && window.pageYOffset > 400) {\n      setShowScroll(true);\n    } else if (showScroll && window.pageYOffset <= 400) {\n      setShowScroll(false);\n    }\n  };\n\n  const scrollTop = () => {\n    window.scrollTo({ top: 0 });\n  };\n\n  window.addEventListener('scroll', checkScrollTop);\n\n  return (\n    <div className={classes.root}>\n      {\n        showScroll\n        && !isMobile\n        && <ArrowUpwardIcon className={classes.icon} color=\"primary\" onClick={scrollTop} />\n      }\n    </div>\n  );\n});\n\nexport default ScrollTopArrow;\n","import React, { Suspense } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport { SnackbarProvider } from 'notistack';\nimport { Switch, Route } from 'react-router-dom';\nimport Loading from '../../components/Loading/Loading';\n\nconst Profile = React.lazy(() => import('../Profile/Profile'));\nconst Feed = React.lazy(() => import('../Feed/Feed'));\nconst Login = React.lazy(() => import('../Login/Login'));\nconst Registration = React.lazy(() => import('../Registration/Registration'));\nconst Home = React.lazy(() => import('../Home/Home'));\nconst Notifications = React.lazy(() => import('../Notifications/Notifications'));\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(12, 0, 12, 0)\n    },\n    [theme.breakpoints.up('md')]: {\n      margin: theme.spacing(15, 5, 8, 5)\n    }\n  }\n}));\n\n\nconst Page: React.FC = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <SnackbarProvider\n      preventDuplicate\n      maxSnack={isMobile ? 1 : 3}\n      anchorOrigin={{\n        vertical: isMobile ? 'top' : 'bottom',\n        horizontal: 'right'\n      }}\n    >\n      <div className={classes.root}>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/registration\" component={Registration} />\n            <Route exact path=\"/feed\" component={Feed} />\n            <Route exact path=\"/notifications\" component={Notifications} />\n            <Route path=\"/profile/:username\" component={Profile} />\n          </Switch>\n        </Suspense>\n      </div>\n    </SnackbarProvider>\n  );\n};\n\n\nexport default Page;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport { BrowserRouter } from 'react-router-dom';\nimport teal from '@material-ui/core/colors/teal';\nimport 'typeface-roboto';\n\nimport Header from './components/Header/Header';\nimport ScrollTopArrow from './components/ScrollTopArrow/ScrollTopArrow';\nimport Page from './containers/Page/Page';\nimport { AuthProvider } from './hooks/useAuth';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: teal[700],\n      light: teal[100]\n    }\n  }\n});\n\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <AuthProvider>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Header />\n          <Page />\n          <ScrollTopArrow />\n        </ThemeProvider>\n      </AuthProvider>\n    </BrowserRouter>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","import axios from 'axios';\nimport _ from 'lodash';\n\nconst baseURL = process.env.NODE_ENV === 'production'\n  ? 'https://which-api.herokuapp.com'\n  : 'http://localhost:3030';\n\nconst requests = axios.create({ baseURL });\n\nrequests.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  return _.set(config, 'headers.Authorization', token);\n});\n\nrequests.interceptors.response.use(response => response, error => {\n  if (error.message === 'Request failed with status code 401' && localStorage.getItem('token')) {\n    localStorage.removeItem('remember');\n    window.location.reload();\n  }\n  return Promise.reject(error);\n});\n\nexport const {\n  get, post, put, patch\n} = requests;\nexport default requests;\n\n","import { useState, useCallback } from 'react';\n\ntype Value = string | null;\ntype Setter = (value: Value) => void;\n\nexport default (key: string): [Value, Setter] => {\n  const [state, setState] = useState<Value>(() => localStorage.getItem(key) || null);\n\n  const update: Setter = useCallback(value => {\n    if (value) localStorage.setItem(key, value);\n    else localStorage.removeItem(key);\n    setState(value);\n  }, [key]);\n\n  return [state, update];\n};\n","import React, {\n  useEffect, useCallback, useMemo, useContext, createContext\n} from 'react';\nimport { User } from 'which-types';\nimport { post } from '../requests';\nimport { useUser } from './APIClient';\nimport useLocalStorage from './useLocalStorage';\n\n\ninterface ContextType {\n  user: User | undefined,\n  login: (username: string, password: string, remember?: boolean) => Promise<boolean>;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\nconst authContext = createContext<ContextType>({\n  user: undefined,\n  login: async () => false,\n  logout: () => {},\n  isAuthenticated: false\n});\n\nconst useProvideAuth = () => {\n  const [remember, setRemember] = useLocalStorage('remember');\n  const [username, setUsername] = useLocalStorage('username');\n  const [token, setToken] = useLocalStorage('token');\n  const { data: user } = useUser(username);\n\n  const isAuthenticated = useMemo(() => Boolean(username), [username]);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUsername(null);\n  }, [setToken, setUsername]);\n\n  useEffect(() => {\n    // If should not remember, logout\n    if (!remember) logout();\n  }, [remember, logout]);\n\n\n  const login: ContextType['login'] = (name, password, shouldRemember = true) => {\n    return post('/authentication', {\n      strategy: 'local',\n      username: name,\n      password\n    }).then(response => {\n      setToken(response.data.accessToken);\n      setUsername(name);\n      setRemember(shouldRemember ? 'true' : null);\n      return true;\n    }).catch(() => false);\n  };\n\n  return {\n    user, login, logout, token, isAuthenticated\n  };\n};\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const auth = useProvideAuth();\n  const { Provider } = authContext;\n  return <Provider value={auth}>{children}</Provider>;\n};\n\nexport const useAuth = (): ContextType => {\n  return useContext(authContext);\n};\n\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Avatar as AvatarBase } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { User } from 'which-types';\n\ninterface PropTypes {\n  user: User;\n  className?: string;\n}\n\nconst Avatar: React.FC<PropTypes> = ({ user, className }) => {\n  const history = useHistory();\n  const { username, avatarUrl } = user;\n\n  const handleClick = () => {\n    history.push(`/profile/${username}`);\n  };\n\n  return avatarUrl ? (\n    <AvatarBase\n      src={avatarUrl}\n      alt={username[0].toUpperCase()}\n      onClick={handleClick}\n      className={className}\n      style={{ cursor: 'pointer' }}\n    />\n  ) : (\n    <AccountCircle\n      className={className}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VerifiedIcon from '@material-ui/icons/CheckCircleOutline';\nimport { CardHeader } from '@material-ui/core/';\nimport { User } from 'which-types';\n\nimport Avatar from '../Avatar/Avatar';\n\n\ninterface PropTypes {\n  user: User;\n  info?: string | JSX.Element\n}\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  verified: {\n    marginLeft: theme.spacing(0.5),\n    width: theme.spacing(2),\n    height: theme.spacing(2)\n  }\n}));\n\n\nconst UserStrip: React.FC<PropTypes> = ({ user, info }) => {\n  const classes = useStyles();\n  const { username, verified } = user;\n\n  const avatar = <Avatar user={user} />;\n\n  const title = (\n    <div className={classes.root}>\n      {username}\n      {verified && <VerifiedIcon color=\"primary\" className={classes.verified} />}\n    </div>\n  );\n\n  return <CardHeader avatar={avatar} title={title} subheader={info} />;\n};\n\nexport default UserStrip;\n","import useSWR, { responseInterface } from 'swr';\nimport { User, Poll, Feedback } from 'which-types';\nimport { get } from '../requests';\n\n\ninterface Response<T> extends responseInterface<T, Error> {\n  data: T;\n}\n\nconst fetcher = (endpoint: string) => get(endpoint).then(response => response.data);\n\nconst arrayOptions = {\n  initialData: [],\n  revalidateOnMount: true\n};\n\nexport const useUser = (username: string | null): Response<User> => {\n  return useSWR(\n    username && `/users?username=${username}`,\n    (url: string) => get(url).then(response => response.data[0])\n  ) as Response<User>;\n};\n\nexport const useProfile = (id: string): Response<Poll[]> => {\n  return useSWR(id && `/profiles/${id}`, fetcher, arrayOptions) as Response<Poll[]>;\n};\n\nexport const useFeed = (): Response<Poll[]> => {\n  return useSWR('/feed', fetcher, { ...arrayOptions, revalidateOnFocus: false }) as Response<Poll[]>;\n};\n\nexport const useFeedback = (): Response<Feedback[]> => {\n  return useSWR('/feedback', fetcher, arrayOptions) as Response<Feedback[]>;\n};\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  loader: {\n    width: '100%',\n    textAlign: 'center',\n    marginTop: theme.spacing(10)\n  }\n}));\n\nconst Loading: React.FC = React.memo(() => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.loader}>\n      <CircularProgress color=\"primary\" style={{ margin: '0 auto' }} />\n    </div>\n  );\n});\n\nexport default Loading;\n\n"],"sourceRoot":""}