{"version":3,"sources":["components/Fab/Fab.tsx","components/PollCard/PercentageBar.tsx","components/DateString/compactDateString.ts","components/DateString/DateString.tsx","components/PollCard/PollCard.tsx","components/PollsList/RenderItem.tsx","components/PollsList/PollsList.tsx","containers/Profile/Highlight.tsx","containers/AvatarCropModal/canvasUtils.js","components/ImageCropAreaSelect/ImageCropAreaSelect.tsx","containers/AvatarCropModal/AvatarCropModal.tsx","containers/Profile/ProfileInfo.tsx","containers/Profile/Profile.tsx"],"names":["useStyles","makeStyles","theme","root","zIndex","position","breakpoints","down","right","spacing","bottom","up","Fab","hideOnScroll","classes","location","useLocation","trigger","useScrollTrigger","appear","direction","in","to","pathname","state","background","className","color","top","fontSize","textShadow","display","alignItems","left","PercentageBar","value","which","like","metrics","name","ratio","compactDateString","date","diff","Date","valueOf","resolve","metricIndex","metric","nextMetric","newValue","rounded","Math","round","isPlural","count","ending","cursor","DATE_FORMAT","month","day","year","hour","minute","DateString","useState","isCompact","setIsCompact","toggleScompact","useCallback","v","useMemo","formatted","toLocaleString","compact","role","onClick","media","height","rateLine","width","backgroundColor","palette","primary","light","transitionDuration","highlight","main","fillRateLine","description","padding","wordWrap","whiteSpace","PollCard","React","memo","leftPercentage","rightPercentage","poll","setPoll","author","contents","vote","enqueueSnackbar","useSnackbar","isAuthenticated","useAuth","handleVote","variant","newVote","pollId","_id","newPoll","votes","authorId","createdAt","post","dominant","Card","elevation","UserStrip","user","info","Typography","CardActionArea","onDoubleClick","BackgroundImage","src","url","style","paddingBottom","RenderItem","polls","mutate","index","cache","parent","_key","newPolls","columnIndex","rowIndex","key","oldProps","newProps","CellMeasurerCache","fixedWidth","PollsList","displayCount","setDisplayCount","useEffect","clearAll","rowRenderer","loadMoreRows","a","previousCount","isRowLoaded","length","rowCount","_","min","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","ref","threshold","onRowsRendered","autoHeight","onScroll","rowHeight","containerStyle","pointerEvents","overscanRowCount","deferredMeasurementCache","menuButton","textAlign","menuNumber","fontWeight","menuText","Highlight","text","createImage","Promise","reject","image","Image","addEventListener","error","setAttribute","getCroppedImg","imageSrc","pixelCrop","canvas","document","createElement","ctx","getContext","maxSize","max","safeArea","sqrt","translate","drawImage","data","getImageData","putImageData","x","y","toBlob","file","cropperArea","sliderContainer","ImageCropAreaSelect","setArea","crop","setCrop","zoom","setZoom","onCropComplete","areaPercentage","areaPixels","aspect","cropShape","showGrid","onCropChange","onZoomChange","Slider","step","aria-labelledby","onChange","cropContainer","AvatarCropModal","avatar","callback","area","handleAction","then","croppedImage","ModalScreen","title","actionIcon","isActionDisabled","marginBottom","margin","darken","filter","justifyContent","verified","marginLeft","profileMenu","marginTop","borderBottom","badge","borderRadius","avatarContainer","skeleton","progress","ProfileInfo","savedPolls","totalVotes","setUserInfo","userInfo","setProgress","avatarToCrop","setAvatarToCrop","dateSince","getDate","slice","getMonth","getFullYear","formatDate","handleUpdateAvatar","uploadFileToS3","avatarUrl","patch","response","handleCropAvatar","URL","createObjectURL","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","FileUpload","CameraAlt","Avatar","join","CircularProgress","Skeleton","animation","username","CheckCircleOutline","Profile","history","useHistory","useParams","useUser","useProfile","mutatePolls","isValidating","push","isOwnProfile","message","reduce","total","current","Container","maxWidth","disableGutters","EmptyState","Loading"],"mappings":"iMAUMA,EAAYC,aAAW,SAAAC,GAAK,YAAK,CACrCC,MAAI,GACFC,OAAQ,IACRC,SAAU,SAFR,cAIDH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BC,MAAON,EAAMO,QAAQ,GACrBC,OAAQR,EAAMO,QAAQ,KANtB,cAQDP,EAAMI,YAAYK,GAAG,MAAQ,CAC5BH,MAAON,EAAMO,QAAQ,GACrBC,OAAQR,EAAMO,QAAQ,KAVtB,OAkCSG,IAnBkB,SAAC,GAA8B,IAAD,IAA3BC,oBAA2B,SACvDC,EAAUd,IACVe,EAAWC,cACXC,EAAUC,cAEhB,OACE,kBAAC,IAAD,CAAOC,QAAQ,EAAOC,UAAU,KAAKC,IAAMR,IAAkBI,GAC3D,kBAAC,IAAD,CAAMK,GAAI,CAAEC,SAAU,OAAQC,MAAO,CAAEC,WAAYV,KACjD,kBAAC,IAAD,CACEW,UAAWZ,EAAQX,KACnBwB,MAAM,aAEN,kBAAC,IAAD,W,6LC5BJ3B,EAAYC,YAAW,CAC3BE,KAAM,CACJE,SAAU,WACVsB,MAAO,QACPC,IAAK,MACLC,SAAU,GACVC,WAAY,gBACZC,QAAS,OACTC,WAAY,UAEdC,KAAM,CACJA,KAAM,IAERzB,MAAO,CACLA,MAAO,MAgBI0B,EAZ4B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACpDvB,EAAUd,IAEhB,OACE,yBAAK0B,UAAS,UAAKZ,EAAQX,KAAb,YAAqBW,EAAQsB,KACxCC,GAAQ,kBAAC,IAAD,MADX,UAEMF,EAFN,O,QChCEG,EAAU,CACd,CAAEC,KAAM,SAAUC,MAAO,IACzB,CAAED,KAAM,OAAQC,MAAO,IACvB,CAAED,KAAM,MAAOC,MAAO,IACtB,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,QAASC,MAAO,GACxB,CAAED,KAAM,OAAQC,MAAO,KA8BVC,EAPW,SAACC,GACzB,IACMC,IADM,IAAIC,MACEC,UAAYH,EAAKG,WAAa,IAChD,OAAIF,EAAO,GAAW,WArBR,SAAVG,EAAWX,GAA4C,IAA7BY,EAA4B,uDAAd,EAEtCC,EAASV,EAAQS,GACjBE,EAAaX,EAAQS,EAAc,GACnCG,EAAWf,EAAQa,EAAOR,MAEhC,GAAIU,EARY,IAQDD,EAAWT,MAAmB,CAC3C,IAAMW,EAAUC,KAAKC,MAAMH,GACrBI,EAAWH,EAAU,EACrBI,EAAQD,EAAWH,EAAU,IAC7BK,EAASF,EAAW,IAAM,GAChC,MAAM,GAAN,OAAUC,EAAV,YAAmBP,EAAOT,MAA1B,OAAiCiB,EAAjC,QAGF,MAAoB,SAAhBR,EAAOT,KAAwB,aAC5BO,EAAQI,EAAUH,EAAc,GAOhCD,CAAQH,ICzBX3C,EAAYC,YAAW,CAC3BE,KAAM,CACJ4B,QAAS,QACT0B,OAAQ,aAINC,EAAc,CAClBC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,OAAQ,WAoBKC,EAjByB,SAAC,GAAe,IAAb7B,EAAY,EAAZA,MAAY,EACnB8B,oBAAkB,GADC,mBAC9CC,EAD8C,KACnCC,EADmC,KAE/CrD,EAAUd,IAEVoE,EAAiBC,uBAAY,kBAAMF,GAAa,SAAAG,GAAC,OAAKA,OAAI,CAACH,IAE3DzB,EAAO6B,mBAAQ,kBAAM,IAAI3B,KAAKT,KAAQ,CAACA,IACvCqC,EAAYD,mBAAQ,kBAAM7B,EAAK+B,eAAe,UAAWf,KAAc,CAAChB,IACxEgC,EAAUH,mBAAQ,kBAAM9B,EAAkBC,KAAO,CAACA,IAExD,OACE,yBAAKiC,KAAK,eAAejD,UAAWZ,EAAQX,KAAMyE,QAASR,GACxDF,EAAYQ,EAAUF,I,wBCjBvBxE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC2E,MAAO,CACL9C,QAAS,OACT+C,OAAQ5E,EAAMO,QAAQ,KAExBsE,SAAU,CACR1E,SAAU,WACV2E,MAAO,OACPF,OAAQ5E,EAAMO,QAAQ,GACtBwE,gBAAiB/E,EAAMgF,QAAQC,QAAQC,MACvCC,mBAAoB,QAEtBC,UAAW,CACTL,gBAAgB,GAAD,OAAK/E,EAAMgF,QAAQC,QAAQI,KAA3B,gBAEjBC,aAAc,CACZV,OAAQ5E,EAAMO,QAAQ,GACtBwE,gBAAiB/E,EAAMgF,QAAQC,QAAQC,MACvCC,mBAAoB,QAEtBI,YAAa,CACX5D,SAAU,GACV6D,QAASxF,EAAMO,QAAQ,EAAG,EAAG,MAC7BkF,SAAU,aACVC,WAAY,gBA4EDC,EAxEuBC,IAAMC,MAAK,YAAwB,IA+BnEC,EACAC,EAhC8CC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClDrF,EAAUd,IACRoG,EAA4CF,EAA5CE,OAF8D,EAElBF,EAApCG,SAAYpE,EAF0C,EAE1CA,KAAMzB,EAFoC,EAEpCA,MAAS8F,EAASJ,EAATI,KACnCC,EAAoBC,cAApBD,gBACAE,EAAoBC,cAApBD,gBAEFE,EAAa,SAACvE,GAAD,OAAkB,WACnC,GAAKqE,EAIE,GAAIH,EACTC,EAAgB,sCAAuC,CACrDK,QAAS,cAEN,CACL,IAAMC,EAAW,CAAEzE,QAAO0E,OAAQZ,EAAKa,KACjCC,EAAO,eAAQd,GACrBc,EAAQX,SAASjE,GAAO6E,OAAS,EACjCD,EAAQV,KAAR,aACES,IAAK,GACLG,SAAU,GACVC,UAAW,IAAIvE,MACZiE,GAELV,EAAQa,GAERI,YAAK,SAAUP,QAnBfN,EAAgB,2CAA4C,CAC1DK,QAAS,YAyBX3E,EAAKgF,OAASzG,EAAMyG,MAEtBhB,EAAkB,KADlBD,EAAiB5C,KAAKC,MAAapB,EAAKgF,OAAShF,EAAKgF,MAAQzG,EAAMyG,OAAxC,OAG5BjB,EAAiB,EACjBC,EAAkB,GAGpB,IAAMoB,EAAkBpF,EAAKgF,OAASzG,EAAMyG,MAAQ,OAAS,QAE7D,OACE,kBAACK,EAAA,EAAD,CAAMC,UAAW,GACf,kBAACC,EAAA,EAAD,CAAWC,KAAMrB,EAAQsB,KAAM,kBAAC,EAAD,CAAYvF,MAAO+D,EAAKiB,cACtDjB,EAAKT,aACJ,kBAACkC,EAAA,EAAD,CAAYjG,UAAWZ,EAAQ2E,aAC5BS,EAAKT,aAGV,yBAAK/D,UAAWZ,EAAQ+D,OACtB,kBAAC+C,EAAA,EAAD,CAAgBC,cAAelB,EAAW,QAASjF,UAAWZ,EAAQ+D,OACpE,kBAACiD,EAAA,EAAD,CAAiBC,IAAK9F,EAAK+F,MAC3B,kBAAC,EAAD,CAAe7F,MAAO6D,EAAgB5D,MAAM,OAAOC,KAAsB,UAAZ,OAAJiE,QAAI,IAAJA,OAAA,EAAAA,EAAMlE,UAEjE,kBAACwF,EAAA,EAAD,CAAgBC,cAAelB,EAAW,SAAUjF,UAAWZ,EAAQ+D,OACrE,kBAACiD,EAAA,EAAD,CAAiBC,IAAKvH,EAAMwH,MAC5B,kBAAC,EAAD,CAAe7F,MAAO8D,EAAiB7D,MAAM,QAAQC,KAAsB,WAAZ,OAAJiE,QAAI,IAAJA,OAAA,EAAAA,EAAMlE,WAGrE,yBAAKV,UAAS,UAAKZ,EAAQiE,SAAb,YAAsC,UAAbsC,EAAuBvG,EAAQwE,UAAY,KAChF,yBACE5D,UAAS,UAAKZ,EAAQ0E,aAAb,YAA0C,SAAb6B,EAAsBvG,EAAQwE,UAAY,IAChF2C,MAAO,CAAEjD,MAAM,GAAD,OAAKgB,EAAL,aC9FlBhG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ+H,cAAehI,EAAMO,QAAQ,QA0ClB0H,EA7ByBrC,IAAMC,MAAK,YAE5C,IADLqC,EACI,EADJA,MAAOC,EACH,EADGA,OAAQC,EACX,EADWA,MAAOL,EAClB,EADkBA,MAAOM,EACzB,EADyBA,MAAOC,EAChC,EADgCA,OAAQC,EACxC,EADwCA,KAEtC3H,EAAUd,IACVkG,EAAOkC,EAAME,GACbnC,EAAU9B,uBAAY,SAAC2C,GAC3B,IAAM0B,EAAQ,YAAON,GACrBM,EAASJ,GAAStB,EAGlBqB,EAAO,IAAI,GACXA,EAAOK,GAAU,KAChB,CAACL,EAAQC,EAAOF,IAEnB,OACE,kBAAC,IAAD,CACEG,MAAOA,EACPI,YAAa,EACbC,SAAUN,EACVE,OAAQA,GAER,yBAAKK,IAAG,UAAKJ,EAAL,YAAavC,EAAKa,KAAOrF,UAAWZ,EAAQX,KAAM8H,MAAOA,GAC/D,kBAAC,EAAD,CAAU/B,KAAMA,EAAMC,QAASA,SA/BlB,SAAC2C,EAAqBC,GACzC,OAAID,EAASL,OAASM,EAASN,OAC3BK,EAASR,QAAUS,EAAST,QAC5BQ,EAASV,QAAUW,EAASX,OAE5BU,EAASb,MAAMnD,SAAWiE,EAASd,MAAMnD,YCVzCyD,EAAQ,IAAIS,IAAkB,CAClCC,YAAY,IAkFCC,IA7EwB,SAAC,GAAuB,IAArBd,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAAa,EACpBpE,mBAHxB,IAE4C,mBACrDkF,EADqD,KACvCC,EADuC,KAG5DC,qBAAU,WACRd,EAAMe,aACL,CAAClB,IAEJ,IAAMmB,EAAclF,uBAAY,gBAAGiE,EAAH,EAAGA,MAAOL,EAAV,EAAUA,MAAOY,EAAjB,EAAiBA,IAAKL,EAAtB,EAAsBA,OAAtB,OAC9B,kBAAC,EAAD,CACEJ,MAAOA,EACPC,OAAQA,EACRC,MAAOA,EACPL,MAAOA,EACPM,MAAOA,EACPC,OAAQA,EACRK,IAAKA,EACLJ,KAAMI,MAEP,CAACT,EAAOC,IAELmB,EAAenF,sBAAW,sBAAC,sBAAAoF,EAAA,sDAC/BL,GAAgB,SAAAM,GAAa,OAAIA,EAvBnB,MAsBiB,2CAE9B,IAEGC,EAActF,uBAAY,YAC9B,OAD6C,EAAZiE,MAClBa,EAAe,GAAKA,IAAiBf,EAAMwB,SACzD,CAACT,EAAcf,IAEZyB,EAAWtF,mBAAQ,WACvB,OAAOuF,IAAEC,IAAI,CAACZ,EAAcf,EAAMwB,UAAYxB,EAAMwB,SACnD,CAACT,EAAcf,EAAMwB,SAExB,OACE,kBAAC,IAAD,MACG,gBACC9E,EADD,EACCA,OACAkF,EAFD,EAECA,YACAC,EAHD,EAGCA,cACAC,EAJD,EAICA,cACAC,EALD,EAKCA,UALD,OAOC,kBAAC,IAAD,CAAWC,eAAa,IACrB,gBAAGpF,EAAH,EAAGA,MAAH,OACC,yBAAKqF,IAAKJ,GACR,kBAAC,IAAD,CACEN,YAAaA,EACbH,aAAcA,EACdK,SAAUA,EACVS,UAAW,IAEV,gBAAGC,EAAH,EAAGA,eAA+BF,EAAlC,EAAmBJ,cAAnB,OACC,kBAAC,IAAD,CACEO,YAAU,EACV1F,OAAQA,EACRkF,YAAaA,EACbS,SAAUP,EACVL,SAAUA,EACVa,UAAWnC,EAAMmC,UACjBnB,YAAaA,EACbY,UAAWA,EACXnF,MAAOA,EACP2F,eAAgB,CAAEC,cAAe,QACjCC,iBAAkB,EAClBN,eAAgBA,EAChBF,IAAKA,EACLS,yBAA0BvC,gB,0KCjFxCvI,EAAYC,YAAW,CAC3BE,KAAM,CACJE,SAAU,YAEZ0K,WAAY,CACV/F,MAAO,IACPF,OAAQ,GACRkG,UAAW,UAEbC,WAAY,CACVC,WAAY,IACZvJ,MAAO,SAETwJ,SAAU,CACRxJ,MAAO,cAgBIyJ,EAXwB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMlJ,EAAY,EAAZA,MACxCrB,EAAUd,IAEhB,OACE,yBAAK0B,UAAWZ,EAAQiK,YACtB,yBAAKrJ,UAAWZ,EAAQmK,YAAa9I,GACrC,yBAAKT,UAAWZ,EAAQqK,UAAWE,K,oECjCnCC,EAAc,SAAAtD,GAAG,OACrB,IAAIuD,SAAQ,SAACzI,EAAS0I,GACpB,IAAMC,EAAQ,IAAIC,MAClBD,EAAME,iBAAiB,QAAQ,kBAAM7I,EAAQ2I,MAC7CA,EAAME,iBAAiB,SAAS,SAAAC,GAAK,OAAIJ,EAAOI,MAChDH,EAAMI,aAAa,cAAe,aAClCJ,EAAM1D,IAAMC,MAGT,SAAe8D,EAAtB,oC,4CAAO,WAA6BC,EAAUC,GAAvC,yBAAAvC,EAAA,sEACe6B,EAAYS,GAD3B,cACCN,EADD,OAECQ,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MAExBC,EAAUlJ,KAAKmJ,IAAId,EAAMzG,MAAOyG,EAAM3G,QACtC0H,EAAiBF,EAAU,EAAKlJ,KAAKqJ,KAAK,GAA/B,EAIjBR,EAAOjH,MAAQwH,EACfP,EAAOnH,OAAS0H,EAGhBJ,EAAIM,UAAUF,EAAW,EAAGA,EAAW,GACvCJ,EAAIM,WAAWF,EAAW,GAAIA,EAAW,GAGzCJ,EAAIO,UACFlB,EACAe,EAAW,EAAkB,GAAdf,EAAMzG,MACrBwH,EAAW,EAAmB,GAAff,EAAM3G,QAEjB8H,EAAOR,EAAIS,aAAa,EAAG,EAAGL,EAAUA,GAG9CP,EAAOjH,MAAQgH,EAAUhH,MACzBiH,EAAOnH,OAASkH,EAAUlH,OAG1BsH,EAAIU,aACFF,EACAxJ,KAAKC,MAAM,EAAImJ,EAAW,EAAkB,GAAdf,EAAMzG,MAAcgH,EAAUe,GAC5D3J,KAAKC,MAAM,EAAImJ,EAAW,EAAmB,GAAff,EAAM3G,OAAekH,EAAUgB,IAjC1D,kBAyCE,IAAIzB,SAAQ,SAAAzI,GACjBmJ,EAAOgB,QAAO,SAAAC,GAAI,OAAIpK,EAAQoK,UA1C3B,6C,4CCQDlN,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiN,YAAY,aACV9M,SAAU,WACV2E,MAAO,OACPF,OAAQ,sBACRrD,WAAY,QACXvB,EAAMI,YAAYK,GAAG,MAAQ,CAC5BmE,OAAQ,MAGZsI,gBAAiB,CACf1H,QAAS,QA4CE2H,EAxCkC,SAAC,GAAwB,IAAtB5B,EAAqB,EAArBA,MAAO6B,EAAc,EAAdA,QACnDxM,EAAUd,IADuD,EAE/CiE,mBAAS,CAAE8I,EAAG,EAAGC,EAAG,IAF2B,mBAEhEO,EAFgE,KAE1DC,EAF0D,OAI/CvJ,mBAAc,GAJiC,mBAIhEwJ,EAJgE,KAI1DC,EAJ0D,KAMjEC,EAAiBtJ,uBAAY,SAACuJ,EAAsBC,GACxDP,EAAQO,KACP,CAACP,IAGJ,OACE,6BACE,yBAAK5L,UAAWZ,EAAQqM,aACtB,kBAAC,IAAD,CACE1B,MAAOA,EACP8B,KAAMA,EACNE,KAAMA,EACNK,OAAQ,EACRC,UAAU,QACVC,UAAU,EACVC,aAAcT,EACdG,eAAgBA,EAChBO,aAAcR,KAGlB,yBAAKhM,UAAWZ,EAAQsM,iBACtB,kBAACe,EAAA,EAAD,CACEhM,MAAOsL,EACP1D,IAAK,EACLwC,IAAK,EACL6B,KAAM,IACNC,kBAAgB,OAChBC,SAAU,kBAAMZ,EAAQD,S,SC7C5BzN,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCqO,cAAc,aACZlO,SAAU,WACV2E,MAAO,QAGN9E,EAAMI,YAAYK,GAAG,MAAQ,QA8BnB6N,EAxB8B,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAChD5N,EAAUd,IADqD,EAE7CiE,mBAAe,CAAE8I,EAAG,EAAGC,EAAG,IAFmB,mBAE9D2B,EAF8D,KAExDrB,EAFwD,KAI/DsB,EAAY,uCAAG,sBAAAnF,EAAA,+EAAYqC,EAAc2C,EAAQE,GACpDE,MAAK,SAAAC,GAAY,OAAIJ,EAASI,OADZ,2CAAH,qDAGlB,OACE,kBAACC,EAAA,EAAD,CACEC,MAAM,cACNC,WAAY,kBAAC,IAAD,MACZL,aAAcA,EACdM,kBAAkB,GAElB,yBAAKxN,UAAWZ,EAAQyN,eACtB,kBAAC,EAAD,CACE9C,MAAOgD,EACPnB,QAASA,OC3BbtN,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJE,SAAU,WACV8O,aAAcjP,EAAMO,QAAQ,IAE9BgO,OAAQ,CACNzJ,MAAO,IACPF,OAAQ,IACRzE,SAAU,WACV+O,OAAQ,UAEVC,OAAQ,CACNC,OAAQ,mBAEV/M,KAAM,CACJ6M,OAAQlP,EAAMO,QAAQ,EAAG,GACzBsB,QAAS,OACTC,WAAY,SACZuN,eAAgB,UAElBC,SAAU,CACRC,WAAYvP,EAAMO,QAAQ,IAC1BuE,MAAO9E,EAAMO,QAAQ,GACrBqE,OAAQ5E,EAAMO,QAAQ,IAExBiP,YAAa,CACX3N,QAAS,OACTiD,MAAO,OACPF,OAAQ,GACR6K,UAAWzP,EAAMO,QAAQ,GACzBmP,aAAc,uBAEhB7E,WAAY,CACV/F,MAAO,IACPF,OAAQ,GACRkG,UAAW,UAEb6E,MAAO,CACL7K,MAAO9E,EAAMO,QAAQ,GACrBqE,OAAQ5E,EAAMO,QAAQ,GACtBqP,aAAc,MACdrM,OAAQ,UACRhC,WAAY,UACZM,QAAS,OACTC,WAAY,SACZ,QAAS,CACPoN,OAAQ,WAGZW,gBAAiB,CACf1P,SAAU,WACV0B,QAAS,OACTwN,eAAgB,SAChBvN,WAAY,UAEdiJ,WAAY,CACVC,WAAY,IACZvJ,MAAO,SAETwJ,SAAU,CACRxJ,MAAO,YAETqO,SAAU,CACRZ,OAAQ,YACRU,aAAc,GAEhBG,SAAU,CACR5P,SAAU,WACVsB,MAAO,aAyGIuO,EA3F0B,SAAC,GAEnC,IADLC,EACI,EADJA,WAAYC,EACR,EADQA,WAAYC,EACpB,EADoBA,YAAaC,EACjC,EADiCA,SAE/BxP,EAAUd,IACRyH,EAASf,cAATe,KAFJ,EAG4BxD,mBAAiB,GAH7C,mBAGGgM,EAHH,KAGaM,EAHb,OAIoCtM,mBAAiB,IAJrD,mBAIGuM,EAJH,KAIiBC,EAJjB,KAKEC,EAAYnM,mBAAQ,kBAhBT,WAAwC,IAAvCpC,EAAsC,uDAAf,GACnCO,EAAO,IAAIE,KAAKT,GAChByB,EAAM,WAAKlB,EAAKiO,WAAaC,OAAO,GACpCjN,EAAQ,WAAKjB,EAAKmO,YAAcD,OAAO,GACvC/M,EAAOnB,EAAKoO,cAClB,MAAM,GAAN,OAAUjN,EAAV,YAAkBF,EAAlB,YAA2BC,GAWKmN,CAAU,OAACT,QAAD,IAACA,OAAD,EAACA,EAAUnJ,aAAY,CAACmJ,IAE5DU,EAAqB3M,sBAAW,uCAAC,WAAO6I,GAAP,SAAAzD,EAAA,sDACjChC,GACFwJ,YAAe/D,EAAM,GAAKqD,GACvB1B,MAAK,SAAAqC,GAAS,OAAIC,YAAM,UAAD,OAAW1J,EAAKV,KAAO,CAAEmK,iBAChDrC,MAAK,SAAAuC,GAAQ,OAAIf,EAAYe,EAASxE,SACtCiC,MAAK,kBAAM0B,EAAY,MALS,2CAAD,sDAOnC,CAAC9I,EAAM4I,IAEJgB,EAAmBhN,sBAAW,uCAAC,WAAO6I,GAAP,eAAAzD,EAAA,sDAC7BsC,EAAWuF,IAAIC,gBAAgBrE,GACrCuD,EAAgB1E,GAFmB,2CAAD,sDAGjC,IAEH,OACE,yBAAKrK,UAAWZ,EAAQX,MAEpBqQ,GAAgB,kBAAC,EAAD,CAAiB/B,OAAQ+B,EAAc9B,SAAUsC,IAGhEV,GAEW,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUvJ,QAAV,OAAkBU,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMV,KAEtB,yBAAKrF,UAAWZ,EAAQiP,iBACtB,kBAACyB,EAAA,EAAD,CACEC,QAAQ,SACRC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdlQ,UAAWZ,EAAQiP,gBACnB8B,aACE,kBAACC,EAAA,EAAD,CAAYpD,SAAU2C,GACpB,yBAAK3P,UAAWZ,EAAQ+O,OACtB,kBAACkC,EAAA,EAAD,SAKN,kBAACC,EAAA,EAAD,CAAQtQ,UAAW,CAACZ,EAAQ2N,OAAQwB,GAAYnP,EAAQuO,QAAQ4C,KAAK,KAAMxK,KAAM6I,IAChFL,EAAW,GACV,kBAACiC,EAAA,EAAD,CAAkBtL,QAAQ,SAASzE,MAAO8N,EAAUvO,UAAWZ,EAAQmP,aAK7E,kBAAC+B,EAAA,EAAD,CAAQtQ,UAAWZ,EAAQ2N,OAAQhH,KAAM6I,IA1B3C,kBAAC6B,EAAA,EAAD,CAAUC,UAAU,OAAOxL,QAAQ,SAAS5B,MAAO,IAAKF,OAAQ,IAAKpD,UAAWZ,EAAQ2N,SA6B3F6B,EAGG,kBAAC3I,EAAA,EAAD,CAAYf,QAAQ,KAAKlF,UAAWZ,EAAQyB,MAA5C,OACG+N,QADH,IACGA,OADH,EACGA,EAAU+B,UACF,OAAR/B,QAAQ,IAARA,OAAA,EAAAA,EAAUd,WAAY,kBAAC8C,EAAA,EAAD,CAAoB5Q,UAAWZ,EAAQ0O,SAAU7N,MAAM,aAJhF,kBAACwQ,EAAA,EAAD,CAAUC,UAAU,OAAOxL,QAAQ,OAAO5B,MAAO,IAAKF,OAAQ,GAAIpD,UAAWZ,EAAQkP,WAQ3F,yBAAKtO,UAAWZ,EAAQ4O,aAEnBY,EASG,oCACE,kBAAC,EAAD,CAAWjF,KAAK,QAAQlJ,MAAOgO,IAC/B,kBAAC,EAAD,CAAW9E,KAAK,QAAQlJ,MAAOuO,IAC/B,kBAAC,EAAD,CAAWrF,KAAK,cAAclJ,MAAOiO,KAVvC,oCACE,kBAAC+B,EAAA,EAAD,CAAUC,UAAU,OAAOxL,QAAQ,OAAO5B,MAAO,IAAKF,OAAQ,GAAIpD,UAAWZ,EAAQkP,WACrF,kBAACmC,EAAA,EAAD,CAAUC,UAAU,OAAOxL,QAAQ,OAAO5B,MAAO,IAAKF,OAAQ,GAAIpD,UAAWZ,EAAQkP,WACrF,kBAACmC,EAAA,EAAD,CAAUC,UAAU,OAAOxL,QAAQ,OAAO5B,MAAO,IAAKF,OAAQ,GAAIpD,UAAWZ,EAAQkP,e,0CCpHtFuC,UAjDW,WACxB,IAAMC,EAAUC,cACRJ,EAAaK,cAAbL,SACA5K,EAASf,cAATe,KAHsB,EAKkBkL,YAAQN,GAA1C/B,EALgB,EAKtB1D,KAAwByD,EALF,EAKNhI,OALM,EAM6BuK,YAAWP,GAAxDjK,EANgB,EAMtBwE,KAAqBiG,EANC,EAMTxK,OAAqByK,EANZ,EAMYA,aAE1CzJ,qBAAU,WACHgJ,IACC5K,EAAM+K,EAAQO,KAAR,mBAAyBtL,EAAK4K,WACnCG,EAAQO,KAAK,aAEnB,CAACV,EAAUG,EAAS/K,IAEvB,IAAMuL,EAAezO,mBAAQ,kBAAU,OAAJkD,QAAI,IAAJA,OAAA,EAAAA,EAAM4K,YAAaA,IAAU,CAAC5K,EAAM4K,IACjEY,EAAU1O,mBAAQ,WACtB,OAAOyO,EACH,0CACA,6CACH,CAACA,IAEE5C,EAAa7L,mBAAQ,kBAAW,OAAL6D,QAAK,IAALA,OAAA,EAAAA,EAAO8K,QACtC,SAACC,EAAeC,GAAmB,IAAD,EACRA,EAAQ/M,SAAxBpE,EADwB,EACxBA,KAAMzB,EADkB,EAClBA,MACd,OAAO2S,EAAQlR,EAAKgF,MAAQzG,EAAMyG,QACjC,KACA,IAAG,CAACmB,IAET,OACE,kBAACiL,EAAA,EAAD,CAAWC,SAAS,KAAKC,gBAAc,GACrC,kBAAC,EAAD,CACEjD,SAAUA,EACVD,YAAaA,EACbF,YAAiB,OAAL/H,QAAK,IAALA,OAAA,EAAAA,EAAOwB,SAAU,EAC7BwG,WAAYA,IAGZhI,EACIA,EAAMwB,OACJ,kBAACV,EAAA,EAAD,CAAWd,MAAOA,EAAOC,OAAQwK,IACjC,kBAACW,EAAA,EAAD,CAAYP,QAASA,IACvBH,GAAgB,kBAACW,EAAA,EAAD,MAErBT,GAAgB,kBAACpS,EAAA,EAAD","file":"static/js/9.dbbe6101.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { Fab as FabBase, Slide, useScrollTrigger } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlusIcon from '@material-ui/icons/Add';\n\ninterface PropTypes {\n  hideOnScroll?: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: 1000,\n    position: 'fixed',\n\n    [theme.breakpoints.down('sm')]: {\n      right: theme.spacing(2),\n      bottom: theme.spacing(8)\n    },\n    [theme.breakpoints.up('md')]: {\n      right: theme.spacing(5),\n      bottom: theme.spacing(5)\n    }\n  }\n}));\n\nconst Fab: React.FC<PropTypes> = ({ hideOnScroll = false }) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"up\" in={(!hideOnScroll) || !trigger}>\n      <Link to={{ pathname: '/new', state: { background: location } }}>\n        <FabBase\n          className={classes.root}\n          color=\"secondary\"\n        >\n          <PlusIcon />\n        </FabBase>\n      </Link>\n    </Slide>\n  );\n};\n\nexport default Fab;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LikeIcon from '@material-ui/icons/Favorite';\n\ninterface PropTypes {\n  value: number;\n  which: 'left' | 'right';\n  like: boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    color: 'white',\n    top: '86%',\n    fontSize: 20,\n    textShadow: '0 0 3px black',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  left: {\n    left: 30\n  },\n  right: {\n    right: 30\n  }\n});\n\nconst PercentageBar: React.FC<PropTypes> = ({ value, which, like }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={`${classes.root} ${classes[which]}`}>\n      {like && <LikeIcon />}\n      {`${value}%`}\n    </div>\n  );\n};\n\n\nexport default PercentageBar;\n\n","const metrics = [\n  { name: 'minute', ratio: 60 },\n  { name: 'hour', ratio: 60 },\n  { name: 'day', ratio: 24 },\n  { name: 'week', ratio: 7 },\n  { name: 'month', ratio: 4 },\n  { name: 'year', ratio: 12 }\n];\n\nconst PRECISION = 0.85;\n\nconst resolve = (value: number, metricIndex = 0): string => {\n  // Recursively divide value until it's ready to be presented as a string\n  const metric = metrics[metricIndex];\n  const nextMetric = metrics[metricIndex + 1];\n  const newValue = value / metric.ratio;\n\n  if (newValue < nextMetric.ratio * PRECISION) {\n    const rounded = Math.round(newValue);\n    const isPlural = rounded > 1;\n    const count = isPlural ? rounded : 'a';\n    const ending = isPlural ? 's' : '';\n    return `${count} ${metric.name}${ending} ago`;\n  }\n\n  if (metric.name === 'year') return 'A year ago';\n  return resolve(newValue, metricIndex + 1);\n};\n\nconst compactDateString = (date: Date): string => {\n  const now = new Date();\n  const diff = (now.valueOf() - date.valueOf()) / 1000;\n  if (diff < 60) return 'just now';\n  return resolve(diff);\n};\n\nexport default compactDateString;\n","import React, { useState, useMemo, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport compactDateString from './compactDateString';\n\ninterface PropTypes {\n  value: Date | string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'block',\n    cursor: 'pointer'\n  }\n});\n\nconst DATE_FORMAT = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nconst DateString: React.FC<PropTypes> = ({ value }) => {\n  const [isCompact, setIsCompact] = useState<boolean>(true);\n  const classes = useStyles();\n\n  const toggleScompact = useCallback(() => setIsCompact(v => !v), [setIsCompact]);\n\n  const date = useMemo(() => new Date(value), [value]);\n  const formatted = useMemo(() => date.toLocaleString('default', DATE_FORMAT), [date]);\n  const compact = useMemo(() => compactDateString(date), [date]);\n\n  return (\n    <div role=\"presentation\" className={classes.root} onClick={toggleScompact}>\n      {isCompact ? compact : formatted}\n    </div>\n  );\n};\n\nexport default DateString;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea, Typography } from '@material-ui/core/';\nimport { Which, Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\n\nimport PercentageBar from './PercentageBar';\nimport UserStrip from '../UserStrip/UserStrip';\nimport DateString from '../DateString/DateString';\nimport BackgroundImage from '../Image/BackgroundImage';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes {\n  poll: Poll;\n  setPoll: (poll: Poll) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  media: {\n    display: 'flex',\n    height: theme.spacing(50)\n  },\n  rateLine: {\n    position: 'relative',\n    width: '100%',\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  highlight: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  fillRateLine: {\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  description: {\n    fontSize: 14,\n    padding: theme.spacing(0, 2, 1.25),\n    wordWrap: 'break-word',\n    whiteSpace: 'pre-wrap'\n  }\n}));\n\nconst PollCard: React.FC<PropTypes> = React.memo(({ poll, setPoll }) => {\n  const classes = useStyles();\n  const { author, contents: { left, right }, vote } = poll;\n  const { enqueueSnackbar } = useSnackbar();\n  const { isAuthenticated } = useAuth();\n\n  const handleVote = (which: Which) => () => {\n    if (!isAuthenticated) {\n      enqueueSnackbar('Unauthorized users can not vote in polls', {\n        variant: 'error'\n      });\n    } else if (vote) {\n      enqueueSnackbar('You have already voted in this poll', {\n        variant: 'error'\n      });\n    } else {\n      const newVote = ({ which, pollId: poll._id });\n      const newPoll = { ...poll };\n      newPoll.contents[which].votes += 1;\n      newPoll.vote = {\n        _id: '',\n        authorId: '',\n        createdAt: new Date(),\n        ...newVote\n      };\n      setPoll(newPoll);\n\n      post('votes/', newVote);\n    }\n  };\n\n  let leftPercentage;\n  let rightPercentage;\n\n  if (left.votes || right.votes) {\n    leftPercentage = Math.round(100 * (left.votes / (left.votes + right.votes)));\n    rightPercentage = 100 - leftPercentage;\n  } else {\n    leftPercentage = 0;\n    rightPercentage = 0;\n  }\n\n  const dominant: Which = left.votes >= right.votes ? 'left' : 'right';\n\n  return (\n    <Card elevation={3}>\n      <UserStrip user={author} info={<DateString value={poll.createdAt} />} />\n      {poll.description && (\n        <Typography className={classes.description}>\n          {poll.description}\n        </Typography>\n      )}\n      <div className={classes.media}>\n        <CardActionArea onDoubleClick={handleVote('left')} className={classes.media}>\n          <BackgroundImage src={left.url} />\n          <PercentageBar value={leftPercentage} which=\"left\" like={vote?.which === 'left'} />\n        </CardActionArea>\n        <CardActionArea onDoubleClick={handleVote('right')} className={classes.media}>\n          <BackgroundImage src={right.url} />\n          <PercentageBar value={rightPercentage} which=\"right\" like={vote?.which === 'right'} />\n        </CardActionArea>\n      </div>\n      <div className={`${classes.rateLine} ${dominant === 'right' ? classes.highlight : ''}`}>\n        <div\n          className={`${classes.fillRateLine} ${dominant === 'left' ? classes.highlight : ''}`}\n          style={{ width: `${leftPercentage}%` }}\n        />\n      </div>\n    </Card>\n  );\n});\n\nexport default PollCard;\n","import React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Poll } from 'which-types';\nimport { CellMeasurer, CellMeasurerCache, List } from 'react-virtualized';\nimport PollCard from '../PollCard/PollCard';\n\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n  index: number;\n  style: React.CSSProperties;\n  cache: CellMeasurerCache;\n  parent: List;\n  _key: string; // https://reactjs.org/warnings/special-props.html\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingBottom: theme.spacing(8)\n  }\n}));\n\nconst compareProps = (oldProps: PropTypes, newProps: PropTypes) => {\n  if (oldProps._key !== newProps._key) return false;\n  if (oldProps.index !== newProps.index) return false;\n  if (oldProps.polls !== newProps.polls) return false;\n  // Only listen for height changes in style\n  if (oldProps.style.height !== newProps.style.height) return false;\n  return true;\n};\n\nconst RenderItem: React.FC<PropTypes> = React.memo(({\n  polls, mutate, index, style, cache, parent, _key\n}) => {\n  const classes = useStyles();\n  const poll = polls[index];\n  const setPoll = useCallback((newPoll: Poll) => {\n    const newPolls = [...polls];\n    newPolls[index] = newPoll;\n\n    // Force-update list-size so everything re-renders\n    mutate([], false);\n    mutate(newPolls, false);\n  }, [mutate, index, polls]);\n\n  return (\n    <CellMeasurer\n      cache={cache}\n      columnIndex={0}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div key={`${_key}-${poll._id}`} className={classes.root} style={style}>\n        <PollCard poll={poll} setPoll={setPoll} />\n      </div>\n    </CellMeasurer>\n  );\n}, compareProps);\n\n\nexport default RenderItem;\n\n","import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport {\n  WindowScroller,\n  AutoSizer,\n  List,\n  InfiniteLoader,\n  CellMeasurerCache\n} from 'react-virtualized';\nimport _ from 'lodash';\nimport { Poll } from 'which-types';\n\nimport RenderItem from './RenderItem';\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n}\n\nconst cache = new CellMeasurerCache({\n  fixedWidth: true\n});\n\nconst PAGE_SIZE = 10;\n\nconst PollsList: React.FC<PropTypes> = ({ polls, mutate }) => {\n  const [displayCount, setDisplayCount] = useState<number>(PAGE_SIZE);\n\n  useEffect(() => {\n    cache.clearAll();\n  }, [polls]);\n\n  const rowRenderer = useCallback(({ index, style, key, parent }) => (\n    <RenderItem\n      polls={polls}\n      mutate={mutate}\n      index={index}\n      style={style}\n      cache={cache}\n      parent={parent}\n      key={key}\n      _key={key}\n    />\n  ), [polls, mutate]);\n\n  const loadMoreRows = useCallback(async () => {\n    setDisplayCount(previousCount => previousCount + PAGE_SIZE);\n  }, []);\n\n  const isRowLoaded = useCallback(({ index }) => {\n    return index < displayCount - 1 || displayCount === polls.length;\n  }, [displayCount, polls]);\n\n  const rowCount = useMemo(() => {\n    return _.min([displayCount, polls.length]) || polls.length;\n  }, [displayCount, polls.length]);\n\n  return (\n    <WindowScroller>\n      {({\n        height,\n        isScrolling,\n        registerChild,\n        onChildScroll,\n        scrollTop\n      }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <div ref={registerChild}>\n              <InfiniteLoader\n                isRowLoaded={isRowLoaded}\n                loadMoreRows={loadMoreRows}\n                rowCount={rowCount}\n                threshold={1}\n              >\n                {({ onRowsRendered, registerChild: ref }) => (\n                  <List\n                    autoHeight\n                    height={height}\n                    isScrolling={isScrolling}\n                    onScroll={onChildScroll}\n                    rowCount={rowCount}\n                    rowHeight={cache.rowHeight}\n                    rowRenderer={rowRenderer}\n                    scrollTop={scrollTop}\n                    width={width}\n                    containerStyle={{ pointerEvents: 'auto' }}\n                    overscanRowCount={2}\n                    onRowsRendered={onRowsRendered}\n                    ref={ref}\n                    deferredMeasurementCache={cache}\n                  />\n                )}\n              </InfiniteLoader>\n            </div>\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  );\n};\n\nexport default PollsList;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface PropTypes {\n  text: string;\n  value: string | number;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative'\n  },\n  menuButton: {\n    width: 200,\n    height: 50,\n    textAlign: 'center'\n  },\n  menuNumber: {\n    fontWeight: 800,\n    color: 'black'\n  },\n  menuText: {\n    color: 'darkgray'\n  }\n});\n\n\nconst Highlight: React.FC<PropTypes> = ({ text, value }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.menuButton}>\n      <div className={classes.menuNumber}>{value}</div>\n      <div className={classes.menuText}>{text}</div>\n    </div>\n  );\n};\n\nexport default Highlight;\n","const createImage = url =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    image.addEventListener('load', () => resolve(image));\r\n    image.addEventListener('error', error => reject(error));\r\n    image.setAttribute('crossOrigin', 'anonymous') ;// needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url\r\n  });\r\n\r\nexport async function getCroppedImg(imageSrc, pixelCrop) {\r\n  const image = await createImage(imageSrc);\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  const maxSize = Math.max(image.width, image.height);\r\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\r\n\r\n  // set each dimensions to double largest dimension to allow for a safe area for the\r\n  // image to rotate in without being clipped by canvas context\r\n  canvas.width = safeArea;\r\n  canvas.height = safeArea;\r\n\r\n  // translate canvas context to a central location on image to allow rotating around the center.\r\n  ctx.translate(safeArea / 2, safeArea / 2);\r\n  ctx.translate(-safeArea / 2, -safeArea / 2);\r\n\r\n  // draw rotated image and store data.\r\n  ctx.drawImage(\r\n    image,\r\n    safeArea / 2 - image.width * 0.5,\r\n    safeArea / 2 - image.height * 0.5\r\n  );\r\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\r\n\r\n  // set canvas width to final desired crop size - this will clear existing context\r\n  canvas.width = pixelCrop.width;\r\n  canvas.height = pixelCrop.height;\r\n\r\n  // paste generated rotate image with correct offsets for x,y crop values.\r\n  ctx.putImageData(\r\n    data,\r\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\r\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\r\n  );\r\n\r\n  // As Base64 string\r\n  // return canvas.toDataURL('image/jpeg');\r\n\r\n  // As a blob\r\n\r\n  return new Promise(resolve => {\r\n    canvas.toBlob(file => resolve(file))\r\n  })\r\n}\r\n","import React, { useCallback, useState } from 'react';\nimport Cropper from 'react-easy-crop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Slider } from '@material-ui/core';\n\ninterface Area {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\ninterface PropTypes {\n  image: string;\n  setArea: (area: Area) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  cropperArea: {\n    position: 'relative',\n    width: '100%',\n    height: 'calc(100vh - 130px)',\n    background: '#333',\n    [theme.breakpoints.up('sm')]: {\n      height: 400\n    }\n  },\n  sliderContainer: {\n    padding: 20\n  }\n}));\n\nconst ImageCropAreaSelect: React.FC<PropTypes> = ({ image, setArea }) => {\n  const classes = useStyles();\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  // eslint-disable-next-line\n  const [zoom, setZoom] = useState<any>(1);\n\n  const onCropComplete = useCallback((areaPercentage: Area, areaPixels: Area): void => {\n    setArea(areaPixels);\n  }, [setArea]);\n\n\n  return (\n    <div>\n      <div className={classes.cropperArea}>\n        <Cropper\n          image={image}\n          crop={crop}\n          zoom={zoom}\n          aspect={1}\n          cropShape=\"round\"\n          showGrid={false}\n          onCropChange={setCrop}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </div>\n      <div className={classes.sliderContainer}>\n        <Slider\n          value={zoom}\n          min={1}\n          max={3}\n          step={0.01}\n          aria-labelledby=\"Zoom\"\n          onChange={() => setZoom(zoom)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ImageCropAreaSelect;\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { getCroppedImg } from './canvasUtils';\r\n\r\nimport ImageCropAreaSelect from '../../components/ImageCropAreaSelect/ImageCropAreaSelect';\r\nimport ModalScreen from '../../components/ModalScreen/ModalScreen';\r\n\r\ninterface Area {\r\n  x: number;\r\n  y: number;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\ninterface PropTypes {\r\n  avatar: string;\r\n  callback: (file: File) => void;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cropContainer: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    // height: '100vh',\r\n    // background: '#333',\r\n    [theme.breakpoints.up('sm')]: {\r\n      // height: 400,\r\n    }\r\n  }\r\n}));\r\n\r\nconst AvatarCropModal: React.FC<PropTypes> = ({ avatar, callback }) => {\r\n  const classes = useStyles();\r\n  const [area, setArea] = useState<Area>({ x: 0, y: 0 });\r\n\r\n  const handleAction = async () => getCroppedImg(avatar, area)\r\n    .then(croppedImage => callback(croppedImage));\r\n\r\n  return (\r\n    <ModalScreen\r\n      title=\"Choose area\"\r\n      actionIcon={<SendIcon />}\r\n      handleAction={handleAction}\r\n      isActionDisabled={false}\r\n    >\r\n      <div className={classes.cropContainer}>\r\n        <ImageCropAreaSelect\r\n          image={avatar}\r\n          setArea={setArea}\r\n        />\r\n      </div>\r\n    </ModalScreen>\r\n  );\r\n};\r\n\r\nexport default AvatarCropModal;\r\n","import React, { useState, useCallback, useMemo } from 'react';\nimport { Badge, Typography, CircularProgress } from '@material-ui/core/';\nimport { CameraAlt, CheckCircleOutline } from '@material-ui/icons/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { User } from 'which-types';\n\nimport Highlight from './Highlight';\nimport FileUpload from '../../components/FileUpload/FileUpload';\nimport Avatar from '../../components/Avatar/Avatar';\nimport { patch } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\nimport uploadFileToS3 from '../../utils/uploadFileToS3';\nimport AvatarCropModal from '../AvatarCropModal/AvatarCropModal';\n\ninterface PropTypes {\n  savedPolls: number;\n  totalVotes: number;\n  userInfo: User | undefined;\n  setUserInfo: (userInfo: User) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(4)\n  },\n  avatar: {\n    width: 150,\n    height: 150,\n    position: 'relative',\n    margin: '0 auto'\n  },\n  darken: {\n    filter: 'brightness(50%)'\n  },\n  name: {\n    margin: theme.spacing(1, 0),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  verified: {\n    marginLeft: theme.spacing(0.5),\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  },\n  profileMenu: {\n    display: 'flex',\n    width: '100%',\n    height: 50,\n    marginTop: theme.spacing(6),\n    borderBottom: '1px solid lightgray'\n  },\n  menuButton: {\n    width: 200,\n    height: 50,\n    textAlign: 'center'\n  },\n  badge: {\n    width: theme.spacing(5),\n    height: theme.spacing(5),\n    borderRadius: '50%',\n    cursor: 'pointer',\n    background: '#d3d3d3',\n    display: 'flex',\n    alignItems: 'center',\n    '& svg': {\n      margin: '0 auto'\n    }\n  },\n  avatarContainer: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  menuNumber: {\n    fontWeight: 800,\n    color: 'black'\n  },\n  menuText: {\n    color: 'darkgray'\n  },\n  skeleton: {\n    margin: '10px auto',\n    borderRadius: 2\n  },\n  progress: {\n    position: 'absolute',\n    color: 'white'\n  }\n}));\n\n\nconst formatDate = (value: Date | string = ''): string => {\n  const date = new Date(value);\n  const day = (`0${date.getDate()}`).slice(-2);\n  const month = (`0${date.getMonth()}`).slice(-2);\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n\n\nconst ProfileInfo: React.FC<PropTypes> = ({\n  savedPolls, totalVotes, setUserInfo, userInfo\n}) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [progress, setProgress] = useState<number>(0);\n  const [avatarToCrop, setAvatarToCrop] = useState<string>('');\n  const dateSince = useMemo(() => formatDate(userInfo?.createdAt), [userInfo]);\n\n  const handleUpdateAvatar = useCallback(async (file: File) => {\n    if (user) {\n      uploadFileToS3(file, 0.8, setProgress)\n        .then(avatarUrl => patch(`/users/${user._id}`, { avatarUrl }))\n        .then(response => setUserInfo(response.data))\n        .then(() => setProgress(0));\n    }\n  }, [user, setUserInfo]);\n\n  const handleCropAvatar = useCallback(async (file: File) => {\n    const imageSrc = URL.createObjectURL(file);\n    setAvatarToCrop(imageSrc);\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      {\n        avatarToCrop && <AvatarCropModal avatar={avatarToCrop} callback={handleUpdateAvatar} />\n      }\n      {\n        !userInfo\n          ? <Skeleton animation=\"wave\" variant=\"circle\" width={150} height={150} className={classes.avatar} />\n          : userInfo?._id === user?._id\n            ? (\n              <div className={classes.avatarContainer}>\n                <Badge\n                  overlap=\"circle\"\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  }}\n                  className={classes.avatarContainer}\n                  badgeContent={(\n                    <FileUpload callback={handleCropAvatar}>\n                      <div className={classes.badge}>\n                        <CameraAlt />\n                      </div>\n                    </FileUpload>\n                  )}\n                >\n                  <Avatar className={[classes.avatar, progress && classes.darken].join(' ')} user={userInfo} />\n                  {progress > 0 && (\n                    <CircularProgress variant=\"static\" value={progress} className={classes.progress} />\n                  )}\n                </Badge>\n              </div>\n            )\n            : <Avatar className={classes.avatar} user={userInfo} />\n      }\n      {\n        !userInfo\n          ? <Skeleton animation=\"wave\" variant=\"rect\" width={100} height={20} className={classes.skeleton} />\n          : (\n            <Typography variant=\"h5\" className={classes.name}>\n              {userInfo?.username}\n              {userInfo?.verified && <CheckCircleOutline className={classes.verified} color=\"primary\" />}\n            </Typography>\n          )\n      }\n      <div className={classes.profileMenu}>\n        {\n          !userInfo\n            ? (\n              <>\n                <Skeleton animation=\"wave\" variant=\"rect\" width={170} height={20} className={classes.skeleton} />\n                <Skeleton animation=\"wave\" variant=\"rect\" width={170} height={20} className={classes.skeleton} />\n                <Skeleton animation=\"wave\" variant=\"rect\" width={170} height={20} className={classes.skeleton} />\n              </>\n            )\n            : (\n              <>\n                <Highlight text=\"Polls\" value={savedPolls} />\n                <Highlight text=\"Since\" value={dateSince} />\n                <Highlight text=\"Total votes\" value={totalVotes} />\n              </>\n            )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React, { useEffect, useMemo } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Poll } from 'which-types';\nimport { Container } from '@material-ui/core';\n\nimport ProfileInfo from './ProfileInfo';\nimport PollsList from '../../components/PollsList/PollsList';\nimport Loading from '../../components/Loading/Loading';\nimport Fab from '../../components/Fab/Fab';\nimport EmptyState from '../../components/EmptyState/EmptyState';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useUser, useProfile } from '../../hooks/APIClient';\n\n\nconst Profile: React.FC = () => {\n  const history = useHistory();\n  const { username } = useParams();\n  const { user } = useAuth();\n\n  const { data: userInfo, mutate: setUserInfo } = useUser(username);\n  const { data: polls, mutate: mutatePolls, isValidating } = useProfile(username);\n\n  useEffect(() => {\n    if (!username) {\n      if (user) history.push(`/profile/${user.username}`);\n      else history.push('/login');\n    }\n  }, [username, history, user]);\n\n  const isOwnProfile = useMemo(() => user?.username === username, [user, username]);\n  const message = useMemo(() => {\n    return isOwnProfile\n      ? 'Create a poll and it will show up here.'\n      : 'This user has not uploaded anything yet.';\n  }, [isOwnProfile]);\n\n  const totalVotes = useMemo(() => polls?.reduce(\n    (total: number, current: Poll) => {\n      const { left, right } = current.contents;\n      return total + left.votes + right.votes;\n    }, 0\n  ) || 0, [polls]);\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      <ProfileInfo\n        userInfo={userInfo}\n        setUserInfo={setUserInfo}\n        savedPolls={polls?.length || 0}\n        totalVotes={totalVotes}\n      />\n      {\n        polls\n          ? polls.length\n            ? <PollsList polls={polls} mutate={mutatePolls} />\n            : <EmptyState message={message} />\n          : isValidating && <Loading />\n      }\n      {isOwnProfile && <Fab />}\n    </Container>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}