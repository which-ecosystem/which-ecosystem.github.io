{"version":3,"sources":["components/Image/BackgroundImage.tsx","components/Fab/Fab.tsx","components/PollCard/PercentageBar.tsx","components/PollCard/PollCard.tsx","components/PollsList/RenderItem.tsx","components/PollsList/PollsList.tsx","containers/Feed/Feed.tsx"],"names":["useStyles","makeStyles","root","position","width","height","image","objectFit","pointerEvents","BackgroundImage","src","alt","classes","className","theme","zIndex","breakpoints","down","right","spacing","bottom","up","Fab","hideOnScroll","history","useHistory","trigger","useScrollTrigger","appear","direction","in","onClick","push","color","top","fontSize","textShadow","display","alignItems","left","PercentageBar","value","which","like","DATE_FORMAT","month","day","year","hour","minute","media","rateLine","backgroundColor","palette","primary","light","transitionDuration","highlight","main","fillRateLine","PollCard","React","memo","leftPercentage","rightPercentage","poll","setPoll","author","contents","vote","enqueueSnackbar","useSnackbar","isAuthenticated","useAuth","date","Date","createdAt","toLocaleString","handleVote","variant","newVote","pollId","_id","newPoll","votes","authorId","post","Math","round","dominant","Card","elevation","UserStrip","user","info","CardActionArea","onDoubleClick","url","style","RenderItem","polls","mutate","index","_key","useCallback","newPolls","key","oldProps","newProps","PollsList","useState","displayCount","setDisplayCount","rowRenderer","loadMoreRows","a","previousCount","isRowLoaded","length","rowCount","useMemo","_","min","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","ref","threshold","onRowsRendered","autoHeight","onScroll","rowHeight","containerStyle","overscanRowCount","Feed","useFeed","data","isValidating","maxWidth","disableGutters"],"mappings":"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","file":"static/js/9.93936a35.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Image from './Image';\n\ninterface PropTypes {\n  src?: string;\n  alt?: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  },\n  image: {\n    objectFit: 'cover',\n    pointerEvents: 'none',\n    width: '100%',\n    height: '100%'\n  }\n});\n\nconst BackgroundImage: React.FC<PropTypes> = ({ src, alt }) => {\n  const classes = useStyles();\n\n  return (\n    <picture className={classes.root}>\n      <Image src={src} alt={alt} className={classes.image} />\n    </picture>\n  );\n};\n\nexport default BackgroundImage;\n\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Fab as FabBase, Slide, useScrollTrigger } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlusIcon from '@material-ui/icons/Add';\n\ninterface PropTypes {\n  hideOnScroll?: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: 1000,\n    position: 'fixed',\n\n    [theme.breakpoints.down('sm')]: {\n      right: theme.spacing(2),\n      bottom: theme.spacing(8)\n    },\n    [theme.breakpoints.up('md')]: {\n      right: theme.spacing(5),\n      bottom: theme.spacing(5)\n    }\n  }\n}));\n\nconst Fab: React.FC<PropTypes> = ({ hideOnScroll = false }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const trigger = useScrollTrigger();\n\n  const handleClick = () => {\n    history.push('/new');\n  };\n\n  return (\n    <Slide appear={false} direction=\"up\" in={(!hideOnScroll) || !trigger}>\n      <FabBase\n        onClick={handleClick}\n        className={classes.root}\n        color=\"secondary\"\n      >\n        <PlusIcon />\n      </FabBase>\n    </Slide>\n  );\n};\n\nexport default Fab;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LikeIcon from '@material-ui/icons/Favorite';\n\ninterface PropTypes {\n  value: number;\n  which: 'left' | 'right';\n  like: boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    color: 'white',\n    top: '86%',\n    fontSize: 20,\n    textShadow: '0 0 3px black',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  left: {\n    left: 30\n  },\n  right: {\n    right: 30\n  }\n});\n\nconst PercentageBar: React.FC<PropTypes> = ({ value, which, like }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={`${classes.root} ${classes[which]}`}>\n      {like && <LikeIcon />}\n      {`${value}%`}\n    </div>\n  );\n};\n\n\nexport default PercentageBar;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea } from '@material-ui/core/';\nimport { Which, Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\n\nimport PercentageBar from './PercentageBar';\nimport UserStrip from '../UserStrip/UserStrip';\nimport BackgroundImage from '../Image/BackgroundImage';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes {\n  poll: Poll;\n  setPoll: (poll: Poll) => void;\n}\n\nconst DATE_FORMAT = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nconst useStyles = makeStyles(theme => ({\n  media: {\n    display: 'flex',\n    height: theme.spacing(50)\n  },\n  rateLine: {\n    position: 'relative',\n    width: '100%',\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  highlight: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  fillRateLine: {\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  }\n}));\n\nconst PollCard: React.FC<PropTypes> = React.memo(({ poll, setPoll }) => {\n  const classes = useStyles();\n  const { author, contents: { left, right }, vote } = poll;\n  const { enqueueSnackbar } = useSnackbar();\n  const { isAuthenticated } = useAuth();\n  const date: string = new Date(poll.createdAt).toLocaleString('default', DATE_FORMAT);\n\n  const handleVote = (which: Which) => {\n    if (!isAuthenticated) {\n      enqueueSnackbar('Unauthorized users can not vote in polls', {\n        variant: 'error'\n      });\n    } else if (vote) {\n      enqueueSnackbar('You have already voted in this poll', {\n        variant: 'error'\n      });\n    } else {\n      const newVote = ({ which, pollId: poll._id });\n      const newPoll = { ...poll };\n      newPoll.contents[which].votes += 1;\n      newPoll.vote = {\n        _id: '',\n        authorId: '',\n        createdAt: new Date(),\n        ...newVote\n      };\n      setPoll(newPoll);\n\n      post('votes/', newVote);\n    }\n  };\n\n  const handleLeft = () => handleVote('left');\n  const handleRight = () => handleVote('right');\n\n  let leftPercentage;\n  let rightPercentage;\n\n  if (left.votes || right.votes) {\n    leftPercentage = Math.round(100 * (left.votes / (left.votes + right.votes)));\n    rightPercentage = 100 - leftPercentage;\n  } else {\n    leftPercentage = 0;\n    rightPercentage = 0;\n  }\n\n  const dominant: Which = left.votes >= right.votes ? 'left' : 'right';\n\n  return (\n    <Card elevation={3}>\n      <UserStrip user={author} info={date} />\n      <div className={classes.media}>\n        <CardActionArea onDoubleClick={handleLeft} className={classes.media}>\n          <BackgroundImage src={left.url} />\n          <PercentageBar value={leftPercentage} which=\"left\" like={vote?.which === 'left'} />\n        </CardActionArea>\n        <CardActionArea onDoubleClick={handleRight} className={classes.media}>\n          <BackgroundImage src={right.url} />\n          <PercentageBar value={rightPercentage} which=\"right\" like={vote?.which === 'right'} />\n        </CardActionArea>\n      </div>\n      <div className={`${classes.rateLine} ${dominant === 'right' ? classes.highlight : ''}`}>\n        <div\n          className={`${classes.fillRateLine} ${dominant === 'left' ? classes.highlight : ''}`}\n          style={{ width: `${leftPercentage}%` }}\n        />\n      </div>\n    </Card>\n  );\n});\n\nexport default PollCard;\n","import React, { useCallback } from 'react';\nimport { Poll } from 'which-types';\nimport PollCard from '../PollCard/PollCard';\n\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n  index: number;\n  style: React.CSSProperties;\n  _key: string; // https://reactjs.org/warnings/special-props.html\n}\n\nconst compareProps = (oldProps: PropTypes, newProps: PropTypes) => {\n  if (oldProps._key !== newProps._key) return false;\n  if (oldProps.index !== newProps.index) return false;\n  if (oldProps.polls !== newProps.polls) return false;\n  // TODO: uncomment line below to listen to style updates\n  // if (JSON.stringify(oldProps.style)!== JSON.stringify(newProps.style)) return false;\n  return true;\n};\n\nconst RenderItem: React.FC<PropTypes> = React.memo(({\n  polls, mutate, index, style, _key\n}) => {\n  const poll = polls[index];\n\n  const setPoll = useCallback((newPoll: Poll) => {\n    const newPolls = [...polls];\n    newPolls[index] = newPoll;\n\n    // Force-update list-size so everything re-renders\n    mutate([], false);\n    mutate(newPolls, false);\n  }, [mutate, index, polls]);\n\n  return (\n    <div key={`${_key}-${poll._id}`} style={style}>\n      <PollCard poll={poll} setPoll={setPoll} />\n    </div>\n  );\n}, compareProps);\n\n\nexport default RenderItem;\n\n","import React, { useCallback, useState, useMemo } from 'react';\nimport {\n  WindowScroller,\n  AutoSizer,\n  List,\n  InfiniteLoader\n} from 'react-virtualized';\nimport _ from 'lodash';\nimport { Poll } from 'which-types';\n\nimport RenderItem from './RenderItem';\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n}\n\nconst PAGE_SIZE = 10;\n\nconst PollsList: React.FC<PropTypes> = ({ polls, mutate }) => {\n  const [displayCount, setDisplayCount] = useState<number>(PAGE_SIZE);\n\n  const rowRenderer = useCallback(({ index, style, key }) => (\n    <RenderItem\n      polls={polls}\n      mutate={mutate}\n      index={index}\n      style={style}\n      key={key}\n      _key={key}\n    />\n  ), [polls, mutate]);\n\n  const loadMoreRows = useCallback(async () => {\n    setDisplayCount(previousCount => previousCount + PAGE_SIZE);\n  }, []);\n\n  const isRowLoaded = useCallback(({ index }) => {\n    return index < displayCount - 1 || displayCount === polls.length;\n  }, [displayCount, polls]);\n\n  const rowCount = useMemo(() => {\n    return _.min([displayCount, polls.length]) || polls.length;\n  }, [displayCount, polls.length]);\n\n  return (\n    <WindowScroller>\n      {({\n        height,\n        isScrolling,\n        registerChild,\n        onChildScroll,\n        scrollTop\n      }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <div ref={registerChild}>\n              <InfiniteLoader\n                isRowLoaded={isRowLoaded}\n                loadMoreRows={loadMoreRows}\n                rowCount={rowCount}\n                threshold={1}\n              >\n                {({ onRowsRendered, registerChild: ref }) => (\n                  <List\n                    autoHeight\n                    height={height}\n                    isScrolling={isScrolling}\n                    onScroll={onChildScroll}\n                    rowCount={rowCount}\n                    rowHeight={550}\n                    rowRenderer={rowRenderer}\n                    scrollTop={scrollTop}\n                    width={width}\n                    containerStyle={{ pointerEvents: 'auto' }}\n                    overscanRowCount={2}\n                    onRowsRendered={onRowsRendered}\n                    ref={ref}\n                  />\n                )}\n              </InfiniteLoader>\n            </div>\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  );\n};\n\nexport default PollsList;\n\n","import React from 'react';\nimport { Container } from '@material-ui/core/';\n\nimport PollsList from '../../components/PollsList/PollsList';\nimport Fab from '../../components/Fab/Fab';\nimport Loading from '../../components/Loading/Loading';\nimport EmptyState from '../../components/EmptyState/EmptyState';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useFeed } from '../../hooks/APIClient';\n\n\nconst Feed: React.FC = () => {\n  const { data: polls, isValidating, mutate } = useFeed();\n  const { isAuthenticated } = useAuth();\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      {isAuthenticated && <Fab hideOnScroll />}\n      {\n        polls\n          ? polls.length\n            ? <PollsList polls={polls} mutate={mutate} />\n            : <EmptyState />\n          : isValidating && <Loading />\n      }\n    </Container>\n  );\n};\n\nexport default Feed;\n\n"],"sourceRoot":""}