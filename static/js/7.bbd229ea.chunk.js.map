{"version":3,"sources":["components/EmptyState/EmptyState.tsx","assets/noContent.svg","assets/construction.svg","components/Fab/Fab.tsx","components/PollCard/PercentageBar.tsx","components/PollCard/PollCard.tsx","components/PollsList/PollsList.tsx","components/AttachLink/Modal.tsx","components/AttachLink/AttachLink.tsx","containers/Profile/Highlight.tsx","containers/Profile/ProfileInfo.tsx","containers/Profile/Profile.tsx"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","justifyContent","alignItems","img","margin","spacing","width","CONTEXT","default","icon","noContentIcon","tagline","construction","constructionIcon","EmptyState","variant","message","classes","className","src","alt","color","module","exports","zIndex","position","breakpoints","down","right","bottom","up","Fab","hideOnScroll","history","useHistory","trigger","useScrollTrigger","appear","direction","in","onClick","push","top","fontSize","textShadow","left","PercentageBar","value","which","like","DATE_FORMAT","month","day","year","hour","minute","images","height","imagesBlock","rateLine","backgroundColor","palette","primary","light","transitionDuration","highlight","main","fillRateLine","PollCard","leftPercentage","rightPercentage","poll","setPoll","author","contents","vote","enqueueSnackbar","useSnackbar","isAuthenticated","useAuth","date","Date","createdAt","toLocaleString","handleVote","newVote","pollId","_id","newPoll","votes","authorId","post","Math","round","dominant","Card","UserStrip","user","info","CardActionArea","onDoubleClick","CardMedia","image","url","style","PollsList","polls","mutate","RenderItem","index","key","length","newPolls","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","ref","autoHeight","onScroll","rowCount","rowHeight","rowRenderer","containerStyle","pointerEvents","overscanRowCount","Modal","setIsOpen","isOpen","callback","useState","setUrl","handleClose","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","id","label","type","fullWidth","autoComplete","onChange","event","target","DialogActions","Button","result","startsWith","match","fileId","disabled","AttachLink","children","handleOpen","defaultButton","startIcon","child","React","Children","toArray","isValidElement","cloneElement","menuButton","textAlign","menuNumber","fontWeight","menuText","Highlight","text","marginBottom","avatar","name","verified","marginLeft","profileMenu","marginTop","borderBottom","badge","borderRadius","cursor","background","avatarContainer","skeleton","ProfileInfo","savedPolls","totalVotes","setUserInfo","userInfo","dateSince","toLocaleDateString","patch","avatarUrl","then","res","data","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","Avatar","Skeleton","animation","Typography","username","Profile","useParams","useUser","useProfile","mutatePolls","isValidating","useEffect","isOwnProfile","useMemo","reduce","total","current","Container","maxWidth","disableGutters","Loading"],"mappings":"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","file":"static/js/7.bbd229ea.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport noContentIcon from '../../assets/noContent.svg';\nimport constructionIcon from '../../assets/construction.svg';\n\n\ninterface PropTypes {\n  variant?: 'default' | 'construction';\n  message?: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  img: {\n    margin: theme.spacing(2),\n    width: theme.spacing(24)\n  }\n\n}));\n\nconst CONTEXT = {\n  default: {\n    icon: noContentIcon,\n    tagline: 'No content'\n  },\n  construction: {\n    icon: constructionIcon,\n    tagline: 'Coming soon'\n  }\n};\n\nconst EmptyState: React.FC<PropTypes> = ({ variant = 'default', message }) => {\n  const classes = useStyles();\n\n  const { icon, tagline } = CONTEXT[variant];\n\n  return (\n    <div className={classes.root}>\n      <img src={icon} className={classes.img} alt=\"No content\" />\n      <Typography variant=\"h5\">\n        {tagline}\n      </Typography>\n      <Typography color=\"textSecondary\">\n        <p>\n          {message}\n        </p>\n      </Typography>\n    </div>\n  );\n};\n\nexport default EmptyState;\n","module.exports = __webpack_public_path__ + \"static/media/noContent.527b7724.svg\";","module.exports = __webpack_public_path__ + \"static/media/construction.07ebb9e5.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Fab as FabBase, Slide, useScrollTrigger } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlusIcon from '@material-ui/icons/Add';\n\ninterface PropTypes {\n  hideOnScroll?: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: 1000,\n    position: 'fixed',\n\n    [theme.breakpoints.down('sm')]: {\n      right: theme.spacing(2),\n      bottom: theme.spacing(8)\n    },\n    [theme.breakpoints.up('md')]: {\n      right: theme.spacing(5),\n      bottom: theme.spacing(5)\n    }\n  }\n}));\n\nconst Fab: React.FC<PropTypes> = ({ hideOnScroll = false }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const trigger = useScrollTrigger();\n\n  const handleClick = () => {\n    history.push('/new');\n  };\n\n  return (\n    <Slide appear={false} direction=\"up\" in={(!hideOnScroll) || !trigger}>\n      <FabBase\n        onClick={handleClick}\n        className={classes.root}\n        color=\"secondary\"\n      >\n        <PlusIcon />\n      </FabBase>\n    </Slide>\n  );\n};\n\nexport default Fab;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LikeIcon from '@material-ui/icons/Favorite';\n\ninterface PropTypes {\n  value: number;\n  which: 'left' | 'right';\n  like: boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    color: 'white',\n    top: '86%',\n    fontSize: 20,\n    textShadow: '0 0 3px black',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  left: {\n    left: 30\n  },\n  right: {\n    right: 30\n  }\n});\n\nconst PercentageBar: React.FC<PropTypes> = ({ value, which, like }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={`${classes.root} ${classes[which]}`}>\n      {like && <LikeIcon />}\n      {`${value}%`}\n    </div>\n  );\n};\n\n\nexport default PercentageBar;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardActionArea,\n  CardMedia\n} from '@material-ui/core/';\nimport { Which, Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\n\nimport PercentageBar from './PercentageBar';\nimport UserStrip from '../UserStrip/UserStrip';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes {\n  poll: Poll;\n  setPoll: (poll: Poll) => void;\n}\n\nconst DATE_FORMAT = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nconst useStyles = makeStyles(theme => ({\n  images: {\n    height: theme.spacing(50)\n  },\n  imagesBlock: {\n    display: 'flex'\n  },\n  rateLine: {\n    position: 'relative',\n    width: '100%',\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  highlight: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  fillRateLine: {\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  }\n}));\n\nconst PollCard: React.FC<PropTypes> = ({ poll, setPoll }) => {\n  const classes = useStyles();\n  const { author, contents: { left, right }, vote } = poll;\n  const { enqueueSnackbar } = useSnackbar();\n  const { isAuthenticated } = useAuth();\n  const date: string = new Date(poll.createdAt).toLocaleString('default', DATE_FORMAT);\n\n  const handleVote = (which: Which) => {\n    if (!isAuthenticated) {\n      enqueueSnackbar('Unauthorized users can not vote in polls', {\n        variant: 'error'\n      });\n    } else if (vote) {\n      enqueueSnackbar('You have already voted in this poll', {\n        variant: 'error'\n      });\n    } else {\n      const newVote = ({ which, pollId: poll._id });\n      const newPoll = { ...poll };\n      newPoll.contents[which].votes += 1;\n      newPoll.vote = {\n        _id: '',\n        authorId: '',\n        createdAt: new Date(),\n        ...newVote\n      };\n      setPoll(newPoll);\n\n      post('votes/', newVote);\n    }\n  };\n\n  const handleLeft = () => handleVote('left');\n  const handleRight = () => handleVote('right');\n\n  let leftPercentage;\n  let rightPercentage;\n\n  if (left.votes || right.votes) {\n    leftPercentage = Math.round(100 * (left.votes / (left.votes + right.votes)));\n    rightPercentage = 100 - leftPercentage;\n  } else {\n    leftPercentage = 0;\n    rightPercentage = 0;\n  }\n\n  const dominant: Which = left.votes >= right.votes ? 'left' : 'right';\n\n  return (\n    <Card>\n      <UserStrip user={author} info={date} />\n      <div className={classes.imagesBlock}>\n        <CardActionArea onDoubleClick={handleLeft}>\n          <CardMedia\n            className={classes.images}\n            image={left.url}\n          />\n          <PercentageBar value={leftPercentage} which=\"left\" like={vote?.which === 'left'} />\n        </CardActionArea>\n        <CardActionArea onDoubleClick={handleRight}>\n          <CardMedia\n            className={classes.images}\n            image={right.url}\n          />\n          <PercentageBar value={rightPercentage} which=\"right\" like={vote?.which === 'right'} />\n        </CardActionArea>\n      </div>\n      <div className={`${classes.rateLine} ${dominant === 'right' ? classes.highlight : ''}`}>\n        <div\n          className={`${classes.fillRateLine} ${dominant === 'left' ? classes.highlight : ''}`}\n          style={{ width: `${leftPercentage}%` }}\n        />\n      </div>\n    </Card>\n  );\n};\n\nexport default PollCard;\n","import React from 'react';\nimport { Poll } from 'which-types';\nimport { WindowScroller, AutoSizer, List } from 'react-virtualized';\nimport PollCard from '../PollCard/PollCard';\n\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n}\n\ninterface RenderPropTypes {\n  index: number;\n  key: string;\n  style: React.CSSProperties;\n}\n\n\nconst PollsList: React.FC<PropTypes> = ({ polls, mutate }) => {\n  const RenderItem: React.FC<RenderPropTypes> = ({ index, style, key }) => {\n    const poll = polls[index];\n\n    const setPoll = (newPoll: Poll) => {\n      const newPolls = [...polls];\n      newPolls[index] = newPoll;\n\n      // Force-update list-size so everything re-renders\n      mutate([], false);\n      mutate(newPolls, false);\n    };\n\n    return (\n      // To re-render on list resize, add this info to key\n      <div key={`${key}-${poll._id}-${polls.length}`} style={style}>\n        <PollCard poll={poll} setPoll={setPoll} />\n      </div>\n    );\n  };\n\n  return (\n    <WindowScroller>\n      {({\n        height,\n        isScrolling,\n        registerChild,\n        onChildScroll,\n        scrollTop\n      }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <div ref={registerChild}>\n              <List\n                autoHeight\n                height={height}\n                isScrolling={isScrolling}\n                onScroll={onChildScroll}\n                rowCount={polls.length}\n                rowHeight={550}\n                rowRenderer={RenderItem}\n                scrollTop={scrollTop}\n                width={width}\n                containerStyle={{ pointerEvents: 'auto' }}\n                overscanRowCount={1}\n              />\n            </div>\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  );\n};\n\nexport default PollsList;\n\n","import React, { useState } from 'react';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\n\ninterface PropTypes {\n  isOpen: boolean;\n  setIsOpen: (value: boolean) => void;\n  callback: (url: string) => void;\n}\n\nconst Modal: React.FC<PropTypes> = ({ setIsOpen, isOpen, callback }) => {\n  const [url, setUrl] = useState<string>('');\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  const handleSubmit = () => {\n    let result = url;\n    if (url.startsWith('https://www.instagram.com/')) {\n      const match = url.match('/p/(.*)/');\n      const id = match && match[1];\n      result = `https://www.instagram.com/p/${id}/media/?size=l`;\n    } else if (url.startsWith('https://drive.google.com/')) {\n      const match = url.match('/d/(.*)/');\n      const fileId = match && match[1];\n      result = `https://drive.google.com/uc?export=view&id=${fileId}`;\n    }\n    callback(result || '');\n    handleClose();\n  };\n\n  const handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setUrl(event.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog open={isOpen} onClose={handleClose}>\n        <DialogTitle>Upload via link</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Provide a valid URL to your image:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Image URL\"\n            type=\"text\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={handleChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\" disabled={!url.length}>\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport LinkIcon from '@material-ui/icons/Link';\nimport Modal from './Modal';\n\ninterface PropTypes {\n  callback: (url: string) => void;\n}\n\nconst AttachLink: React.FC<PropTypes> = ({ callback, children }) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const handleOpen = (): void => {\n    setIsOpen(true);\n  };\n\n  const defaultButton = (\n    <Button\n      onClick={handleOpen}\n      variant=\"outlined\"\n      color=\"primary\"\n      startIcon={<LinkIcon />}\n    >\n      Attach a link\n    </Button>\n  );\n\n  const child = children && React.Children.toArray(children)[0];\n\n  return (\n    <>\n      <Modal callback={callback} isOpen={isOpen} setIsOpen={setIsOpen} />\n      {\n        React.isValidElement(child)\n          ? React.cloneElement(child, { onClick: handleOpen })\n          : defaultButton\n      }\n    </>\n  );\n};\n\nexport default AttachLink;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface PropTypes {\n  text: string;\n  value: string | number;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative'\n  },\n  menuButton: {\n    width: 200,\n    height: 50,\n    textAlign: 'center'\n  },\n  menuNumber: {\n    fontWeight: 800,\n    color: 'black'\n  },\n  menuText: {\n    color: 'darkgray'\n  }\n});\n\n\nconst Highlight: React.FC<PropTypes> = ({ text, value }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.menuButton}>\n      <div className={classes.menuNumber}>{value}</div>\n      <div className={classes.menuText}>{text}</div>\n    </div>\n  );\n};\n\nexport default Highlight;\n","import React from 'react';\nimport { Badge, Typography } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { User } from 'which-types';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport VerifiedIcon from '@material-ui/icons/CheckCircleOutline';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Highlight from './Highlight';\nimport AttachLink from '../../components/AttachLink/AttachLink';\nimport Avatar from '../../components/Avatar/Avatar';\nimport { patch } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\n\ninterface PropTypes {\n  savedPolls: number;\n  totalVotes: number;\n  userInfo: User | undefined;\n  setUserInfo: (userInfo: User) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(4)\n  },\n  avatar: {\n    width: 150,\n    height: 150,\n    margin: '0 auto'\n  },\n  name: {\n    margin: theme.spacing(1, 0),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  verified: {\n    marginLeft: theme.spacing(0.5),\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  },\n  profileMenu: {\n    display: 'flex',\n    width: '100%',\n    height: 50,\n    marginTop: theme.spacing(6),\n    borderBottom: '1px solid lightgray'\n  },\n  menuButton: {\n    width: 200,\n    height: 50,\n    textAlign: 'center'\n  },\n  badge: {\n    width: theme.spacing(5),\n    height: theme.spacing(5),\n    borderRadius: '50%',\n    cursor: 'pointer',\n    background: '#d3d3d3',\n    display: 'flex',\n    alignItems: 'center',\n    '& svg': {\n      margin: '0 auto'\n    }\n  },\n  avatarContainer: {\n    position: 'relative',\n    textAlign: 'center'\n  },\n  menuNumber: {\n    fontWeight: 800,\n    color: 'black'\n  },\n  menuText: {\n    color: 'darkgray'\n  },\n  skeleton: {\n    margin: '10px auto',\n    borderRadius: 2\n  }\n\n}));\n\n\nconst ProfileInfo: React.FC<PropTypes> = ({\n  savedPolls, totalVotes, setUserInfo, userInfo\n}) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const dateSince = new Date(userInfo?.createdAt || '').toLocaleDateString();\n\n  const patchAvatar = (url: string) => {\n    const id = user?._id;\n    patch(`/users/${id}`, { avatarUrl: url }).then(res => {\n      setUserInfo(res.data);\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      {\n        !userInfo\n          ? <Skeleton animation=\"wave\" variant=\"circle\" width={150} height={150} className={classes.avatar} />\n          : userInfo?._id === user?._id\n            ? (\n              <AttachLink callback={patchAvatar}>\n                <div className={classes.avatarContainer}>\n                  <Badge\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                      vertical: 'bottom',\n                      horizontal: 'right'\n                    }}\n                    badgeContent={(\n                      <div className={classes.badge}>\n                        <CameraAltIcon />\n                      </div>\n                    )}\n                  >\n                    <Avatar className={classes.avatar} user={userInfo} />\n                  </Badge>\n                </div>\n              </AttachLink>\n            )\n            : <Avatar className={classes.avatar} user={userInfo} />\n      }\n      {\n        !userInfo\n          ? <Skeleton animation=\"wave\" variant=\"rect\" width={100} height={20} className={classes.skeleton} />\n          : (\n            <Typography variant=\"h5\" className={classes.name}>\n              {userInfo?.username}\n              {userInfo?.verified && <VerifiedIcon className={classes.verified} color=\"primary\" />}\n            </Typography>\n          )\n      }\n      <div className={classes.profileMenu}>\n        {\n          !userInfo\n            ? (\n              <>\n                <Skeleton animation=\"wave\" variant=\"rect\" width={170} height={20} className={classes.skeleton} />\n                <Skeleton animation=\"wave\" variant=\"rect\" width={170} height={20} className={classes.skeleton} />\n                <Skeleton animation=\"wave\" variant=\"rect\" width={170} height={20} className={classes.skeleton} />\n              </>\n            )\n            : (\n              <>\n                <Highlight text=\"Polls\" value={savedPolls} />\n                <Highlight text=\"Since\" value={dateSince} />\n                <Highlight text=\"Total votes\" value={totalVotes} />\n              </>\n            )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React, { useEffect, useMemo } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Poll } from 'which-types';\nimport { Container } from '@material-ui/core';\n\nimport ProfileInfo from './ProfileInfo';\nimport PollsList from '../../components/PollsList/PollsList';\nimport Loading from '../../components/Loading/Loading';\nimport Fab from '../../components/Fab/Fab';\nimport EmptyState from '../../components/EmptyState/EmptyState';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useUser, useProfile } from '../../hooks/APIClient';\n\n\nconst Profile: React.FC = () => {\n  const history = useHistory();\n  const { username } = useParams();\n  const { user } = useAuth();\n\n  const { data: userInfo, mutate: setUserInfo } = useUser(username);\n  const { data: polls, mutate: mutatePolls, isValidating } = useProfile(username);\n\n  useEffect(() => {\n    if (!username) {\n      if (user) history.push(`/profile/${user.username}`);\n      else history.push('/login');\n    }\n  }, [username, history, user]);\n\n  const isOwnProfile = useMemo(() => user?.username === username, [user, username]);\n\n  const totalVotes = useMemo(() => polls?.reduce(\n    (total: number, current: Poll) => {\n      const { left, right } = current.contents;\n      return total + left.votes + right.votes;\n    }, 0\n  ) || 0, [polls]);\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      <ProfileInfo\n        userInfo={userInfo}\n        setUserInfo={setUserInfo}\n        savedPolls={polls?.length || 0}\n        totalVotes={totalVotes}\n      />\n      {\n        polls\n          ? polls.length\n            ? <PollsList polls={polls} mutate={mutatePolls} />\n            : <EmptyState message={isOwnProfile ? 'Create a poll and it will show up here.' : ''} />\n          : isValidating && <Loading />\n      }\n      {isOwnProfile && <Fab />}\n    </Container>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}