{"version":3,"sources":["components/Fab/Fab.tsx","components/PollCard/PercentageBar.tsx","components/PollCard/PollCard.tsx","components/PollsList/RenderItem.tsx","components/PollsList/PollsList.tsx","containers/Feed/Feed.tsx"],"names":["useStyles","makeStyles","theme","root","zIndex","position","breakpoints","down","right","spacing","bottom","up","Fab","hideOnScroll","classes","location","useLocation","trigger","useScrollTrigger","appear","direction","in","to","pathname","state","background","className","color","top","fontSize","textShadow","display","alignItems","left","PercentageBar","value","which","like","DATE_FORMAT","month","day","year","hour","minute","media","height","rateLine","width","backgroundColor","palette","primary","light","transitionDuration","highlight","main","fillRateLine","description","padding","wordWrap","whiteSpace","PollCard","React","memo","leftPercentage","rightPercentage","poll","setPoll","author","contents","vote","enqueueSnackbar","useSnackbar","isAuthenticated","useAuth","date","Date","createdAt","toLocaleString","handleVote","variant","newVote","pollId","_id","newPoll","votes","authorId","post","Math","round","dominant","Card","elevation","UserStrip","user","info","Typography","CardActionArea","onDoubleClick","BackgroundImage","src","url","style","paddingBottom","RenderItem","polls","mutate","index","cache","parent","_key","useCallback","newPolls","columnIndex","rowIndex","key","oldProps","newProps","CellMeasurerCache","fixedWidth","PollsList","useState","displayCount","setDisplayCount","useEffect","clearAll","rowRenderer","loadMoreRows","a","previousCount","isRowLoaded","length","rowCount","useMemo","_","min","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","ref","threshold","onRowsRendered","autoHeight","onScroll","rowHeight","containerStyle","pointerEvents","overscanRowCount","deferredMeasurementCache","Feed","useFeed","data","isValidating","maxWidth","disableGutters"],"mappings":"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","file":"static/js/7.9e2bc421.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { Fab as FabBase, Slide, useScrollTrigger } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlusIcon from '@material-ui/icons/Add';\n\ninterface PropTypes {\n  hideOnScroll?: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: 1000,\n    position: 'fixed',\n\n    [theme.breakpoints.down('sm')]: {\n      right: theme.spacing(2),\n      bottom: theme.spacing(8)\n    },\n    [theme.breakpoints.up('md')]: {\n      right: theme.spacing(5),\n      bottom: theme.spacing(5)\n    }\n  }\n}));\n\nconst Fab: React.FC<PropTypes> = ({ hideOnScroll = false }) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"up\" in={(!hideOnScroll) || !trigger}>\n      <Link to={{ pathname: '/new', state: { background: location } }}>\n        <FabBase\n          className={classes.root}\n          color=\"secondary\"\n        >\n          <PlusIcon />\n        </FabBase>\n      </Link>\n    </Slide>\n  );\n};\n\nexport default Fab;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LikeIcon from '@material-ui/icons/Favorite';\n\ninterface PropTypes {\n  value: number;\n  which: 'left' | 'right';\n  like: boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    color: 'white',\n    top: '86%',\n    fontSize: 20,\n    textShadow: '0 0 3px black',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  left: {\n    left: 30\n  },\n  right: {\n    right: 30\n  }\n});\n\nconst PercentageBar: React.FC<PropTypes> = ({ value, which, like }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={`${classes.root} ${classes[which]}`}>\n      {like && <LikeIcon />}\n      {`${value}%`}\n    </div>\n  );\n};\n\n\nexport default PercentageBar;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea, Typography } from '@material-ui/core/';\nimport { Which, Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\n\nimport PercentageBar from './PercentageBar';\nimport UserStrip from '../UserStrip/UserStrip';\nimport BackgroundImage from '../Image/BackgroundImage';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes {\n  poll: Poll;\n  setPoll: (poll: Poll) => void;\n}\n\nconst DATE_FORMAT = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nconst useStyles = makeStyles(theme => ({\n  media: {\n    display: 'flex',\n    height: theme.spacing(50)\n  },\n  rateLine: {\n    position: 'relative',\n    width: '100%',\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  highlight: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  fillRateLine: {\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  description: {\n    padding: theme.spacing(1, 2),\n    wordWrap: 'break-word',\n    whiteSpace: 'pre-wrap'\n  }\n}));\n\nconst PollCard: React.FC<PropTypes> = React.memo(({ poll, setPoll }) => {\n  const classes = useStyles();\n  const { author, contents: { left, right }, vote } = poll;\n  const { enqueueSnackbar } = useSnackbar();\n  const { isAuthenticated } = useAuth();\n  const date: string = new Date(poll.createdAt).toLocaleString('default', DATE_FORMAT);\n\n  const handleVote = (which: Which) => () => {\n    if (!isAuthenticated) {\n      enqueueSnackbar('Unauthorized users can not vote in polls', {\n        variant: 'error'\n      });\n    } else if (vote) {\n      enqueueSnackbar('You have already voted in this poll', {\n        variant: 'error'\n      });\n    } else {\n      const newVote = ({ which, pollId: poll._id });\n      const newPoll = { ...poll };\n      newPoll.contents[which].votes += 1;\n      newPoll.vote = {\n        _id: '',\n        authorId: '',\n        createdAt: new Date(),\n        ...newVote\n      };\n      setPoll(newPoll);\n\n      post('votes/', newVote);\n    }\n  };\n\n  let leftPercentage;\n  let rightPercentage;\n\n  if (left.votes || right.votes) {\n    leftPercentage = Math.round(100 * (left.votes / (left.votes + right.votes)));\n    rightPercentage = 100 - leftPercentage;\n  } else {\n    leftPercentage = 0;\n    rightPercentage = 0;\n  }\n\n  const dominant: Which = left.votes >= right.votes ? 'left' : 'right';\n\n  return (\n    <Card elevation={3}>\n      <UserStrip user={author} info={date} />\n      {poll.description && (\n        <Typography className={classes.description}>\n          {poll.description}\n        </Typography>\n      )}\n      <div className={classes.media}>\n        <CardActionArea onDoubleClick={handleVote('left')} className={classes.media}>\n          <BackgroundImage src={left.url} />\n          <PercentageBar value={leftPercentage} which=\"left\" like={vote?.which === 'left'} />\n        </CardActionArea>\n        <CardActionArea onDoubleClick={handleVote('right')} className={classes.media}>\n          <BackgroundImage src={right.url} />\n          <PercentageBar value={rightPercentage} which=\"right\" like={vote?.which === 'right'} />\n        </CardActionArea>\n      </div>\n      <div className={`${classes.rateLine} ${dominant === 'right' ? classes.highlight : ''}`}>\n        <div\n          className={`${classes.fillRateLine} ${dominant === 'left' ? classes.highlight : ''}`}\n          style={{ width: `${leftPercentage}%` }}\n        />\n      </div>\n    </Card>\n  );\n});\n\nexport default PollCard;\n","import React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Poll } from 'which-types';\nimport { CellMeasurer, CellMeasurerCache, List } from 'react-virtualized';\nimport PollCard from '../PollCard/PollCard';\n\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n  index: number;\n  style: React.CSSProperties;\n  cache: CellMeasurerCache;\n  parent: List;\n  _key: string; // https://reactjs.org/warnings/special-props.html\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingBottom: theme.spacing(8)\n  }\n}));\n\nconst compareProps = (oldProps: PropTypes, newProps: PropTypes) => {\n  if (oldProps._key !== newProps._key) return false;\n  if (oldProps.index !== newProps.index) return false;\n  if (oldProps.polls !== newProps.polls) return false;\n  // Only listen for height changes in style\n  if (oldProps.style.height !== newProps.style.height) return false;\n  return true;\n};\n\nconst RenderItem: React.FC<PropTypes> = React.memo(({\n  polls, mutate, index, style, cache, parent, _key\n}) => {\n  const classes = useStyles();\n  const poll = polls[index];\n  const setPoll = useCallback((newPoll: Poll) => {\n    const newPolls = [...polls];\n    newPolls[index] = newPoll;\n\n    // Force-update list-size so everything re-renders\n    mutate([], false);\n    mutate(newPolls, false);\n  }, [mutate, index, polls]);\n\n  return (\n    <CellMeasurer\n      cache={cache}\n      columnIndex={0}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div key={`${_key}-${poll._id}`} className={classes.root} style={style}>\n        <PollCard poll={poll} setPoll={setPoll} />\n      </div>\n    </CellMeasurer>\n  );\n}, compareProps);\n\n\nexport default RenderItem;\n\n","import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport {\n  WindowScroller,\n  AutoSizer,\n  List,\n  InfiniteLoader,\n  CellMeasurerCache\n} from 'react-virtualized';\nimport _ from 'lodash';\nimport { Poll } from 'which-types';\n\nimport RenderItem from './RenderItem';\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n}\n\nconst cache = new CellMeasurerCache({\n  fixedWidth: true\n});\n\nconst PAGE_SIZE = 10;\n\nconst PollsList: React.FC<PropTypes> = ({ polls, mutate }) => {\n  const [displayCount, setDisplayCount] = useState<number>(PAGE_SIZE);\n\n  useEffect(() => {\n    cache.clearAll();\n  }, [polls]);\n\n  const rowRenderer = useCallback(({ index, style, key, parent }) => (\n    <RenderItem\n      polls={polls}\n      mutate={mutate}\n      index={index}\n      style={style}\n      cache={cache}\n      parent={parent}\n      key={key}\n      _key={key}\n    />\n  ), [polls, mutate]);\n\n  const loadMoreRows = useCallback(async () => {\n    setDisplayCount(previousCount => previousCount + PAGE_SIZE);\n  }, []);\n\n  const isRowLoaded = useCallback(({ index }) => {\n    return index < displayCount - 1 || displayCount === polls.length;\n  }, [displayCount, polls]);\n\n  const rowCount = useMemo(() => {\n    return _.min([displayCount, polls.length]) || polls.length;\n  }, [displayCount, polls.length]);\n\n  return (\n    <WindowScroller>\n      {({\n        height,\n        isScrolling,\n        registerChild,\n        onChildScroll,\n        scrollTop\n      }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <div ref={registerChild}>\n              <InfiniteLoader\n                isRowLoaded={isRowLoaded}\n                loadMoreRows={loadMoreRows}\n                rowCount={rowCount}\n                threshold={1}\n              >\n                {({ onRowsRendered, registerChild: ref }) => (\n                  <List\n                    autoHeight\n                    height={height}\n                    isScrolling={isScrolling}\n                    onScroll={onChildScroll}\n                    rowCount={rowCount}\n                    rowHeight={cache.rowHeight}\n                    rowRenderer={rowRenderer}\n                    scrollTop={scrollTop}\n                    width={width}\n                    containerStyle={{ pointerEvents: 'auto' }}\n                    overscanRowCount={2}\n                    onRowsRendered={onRowsRendered}\n                    ref={ref}\n                    deferredMeasurementCache={cache}\n                  />\n                )}\n              </InfiniteLoader>\n            </div>\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  );\n};\n\nexport default PollsList;\n\n","import React from 'react';\nimport { Container } from '@material-ui/core/';\n\nimport PollsList from '../../components/PollsList/PollsList';\nimport Fab from '../../components/Fab/Fab';\nimport Loading from '../../components/Loading/Loading';\nimport EmptyState from '../../components/EmptyState/EmptyState';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useFeed } from '../../hooks/APIClient';\n\n\nconst Feed: React.FC = () => {\n  const { data: polls, isValidating, mutate } = useFeed();\n  const { isAuthenticated } = useAuth();\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      {isAuthenticated && <Fab hideOnScroll />}\n      {\n        polls\n          ? polls.length\n            ? <PollsList polls={polls} mutate={mutate} />\n            : <EmptyState />\n          : isValidating && <Loading />\n      }\n    </Container>\n  );\n};\n\nexport default Feed;\n\n"],"sourceRoot":""}