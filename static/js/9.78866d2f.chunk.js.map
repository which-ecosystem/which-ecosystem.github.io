{"version":3,"sources":["components/Image/Image.tsx","components/EmptyState/EmptyState.tsx","assets/noContent.svg","assets/construction.svg","components/Fab/Fab.tsx","components/PollCard/PercentageBar.tsx","components/Image/BackgroundImage.tsx","components/PollCard/PollCard.tsx","components/PollsList/PollsList.tsx","containers/Feed/Feed.tsx"],"names":["useStyles","makeStyles","theme","container","width","height","display","alignItems","justifyContent","success","opacity","filterBrightness","filterSaturate","loading","position","error","errorIcon","color","grey","spacing","Image","React","memo","src","alt","className","animationDuration","disableLoading","classes","useState","status","setStatus","handleLoad","useCallback","handleError","transition","useMemo","image","style","onLoad","onError","root","flexDirection","img","margin","CONTEXT","default","icon","noContentIcon","tagline","construction","constructionIcon","EmptyState","variant","message","module","exports","zIndex","breakpoints","down","right","bottom","up","Fab","hideOnScroll","history","useHistory","trigger","useScrollTrigger","appear","direction","in","onClick","push","top","fontSize","textShadow","left","PercentageBar","value","which","like","objectFit","pointerEvents","BackgroundImage","DATE_FORMAT","month","day","year","hour","minute","media","rateLine","backgroundColor","palette","primary","light","transitionDuration","highlight","main","fillRateLine","PollCard","leftPercentage","rightPercentage","poll","setPoll","author","contents","vote","enqueueSnackbar","useSnackbar","isAuthenticated","useAuth","date","Date","createdAt","toLocaleString","handleVote","newVote","pollId","_id","newPoll","votes","authorId","post","Math","round","dominant","Card","UserStrip","user","info","CardActionArea","onDoubleClick","url","PollsList","polls","mutate","RenderItem","index","key","length","newPolls","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","ref","autoHeight","onScroll","rowCount","rowHeight","rowRenderer","containerStyle","overscanRowCount","Feed","useFeed","data","isValidating","maxWidth","disableGutters"],"mappings":"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","file":"static/js/9.78866d2f.chunk.js","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ErrorIcon from '@material-ui/icons/BrokenImage';\nimport grey from '@material-ui/core/colors/grey';\n\ninterface PropTypes {\n  src?: string;\n  alt?: string;\n  className?: string;\n  animationDuration?: number;\n  disableLoading?: boolean;\n}\n\ntype Status = 'success' | 'loading' | 'error';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  success: {\n    opacity: '100%',\n    filterBrightness: '100%',\n    filterSaturate: '100%'\n  },\n  loading: {\n    opacity: 0,\n    filterBrightness: 0,\n    filterSaturate: '20%',\n    position: 'absolute'\n  },\n  error: {\n    display: 'none'\n  },\n  errorIcon: {\n    color: grey[300],\n    width: theme.spacing(6),\n    height: theme.spacing(6)\n  }\n}));\n\nconst Image: React.FC<PropTypes> = React.memo(({\n  src,\n  alt,\n  className,\n  animationDuration = 1000,\n  disableLoading = false\n}) => {\n  const classes = useStyles();\n  const [status, setStatus] = useState<Status>('loading');\n\n  const handleLoad = useCallback((): void => {\n    setStatus('success');\n  }, [setStatus]);\n\n  const handleError = useCallback((): void => {\n    setStatus('error');\n  }, [setStatus]);\n\n  const transition = useMemo(() => `\n    filterBrightness ${animationDuration * 0.75}ms cubic-bezier(0.4, 0.0, 0.2, 1),\n    filterSaturate ${animationDuration}ms cubic-bezier(0.4, 0.0, 0.2, 1),\n    opacity ${animationDuration / 2}ms cubic-bezier(0.4, 0.0, 0.2, 1)\n  `, [animationDuration]);\n\n  const image = (\n    <img\n      src={src}\n      alt={alt}\n      className={`${className} ${classes[status]}`}\n      style={{ transition }}\n      onLoad={handleLoad}\n      onError={handleError}\n    />\n  );\n\n  return (\n    <>\n      {src && image}\n      {\n        status !== 'success' && (\n          <div className={classes.container}>\n            {\n              (status === 'error' || !src)\n                ? <ErrorIcon className={classes.errorIcon} />\n                : (!disableLoading && <CircularProgress color=\"primary\" />)\n            }\n          </div>\n        )\n      }\n    </>\n  );\n});\n\nexport default Image;\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport noContentIcon from '../../assets/noContent.svg';\nimport constructionIcon from '../../assets/construction.svg';\n\n\ninterface PropTypes {\n  variant?: 'default' | 'construction';\n  message?: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  img: {\n    margin: theme.spacing(2),\n    width: theme.spacing(24)\n  }\n\n}));\n\nconst CONTEXT = {\n  default: {\n    icon: noContentIcon,\n    tagline: 'No content'\n  },\n  construction: {\n    icon: constructionIcon,\n    tagline: 'Coming soon'\n  }\n};\n\nconst EmptyState: React.FC<PropTypes> = ({ variant = 'default', message }) => {\n  const classes = useStyles();\n\n  const { icon, tagline } = CONTEXT[variant];\n\n  return (\n    <div className={classes.root}>\n      <img src={icon} className={classes.img} alt=\"No content\" />\n      <Typography variant=\"h5\">\n        {tagline}\n      </Typography>\n      <Typography color=\"textSecondary\">\n        <p>\n          {message}\n        </p>\n      </Typography>\n    </div>\n  );\n};\n\nexport default EmptyState;\n","module.exports = __webpack_public_path__ + \"static/media/noContent.527b7724.svg\";","module.exports = __webpack_public_path__ + \"static/media/construction.07ebb9e5.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Fab as FabBase, Slide, useScrollTrigger } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlusIcon from '@material-ui/icons/Add';\n\ninterface PropTypes {\n  hideOnScroll?: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: 1000,\n    position: 'fixed',\n\n    [theme.breakpoints.down('sm')]: {\n      right: theme.spacing(2),\n      bottom: theme.spacing(8)\n    },\n    [theme.breakpoints.up('md')]: {\n      right: theme.spacing(5),\n      bottom: theme.spacing(5)\n    }\n  }\n}));\n\nconst Fab: React.FC<PropTypes> = ({ hideOnScroll = false }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const trigger = useScrollTrigger();\n\n  const handleClick = () => {\n    history.push('/new');\n  };\n\n  return (\n    <Slide appear={false} direction=\"up\" in={(!hideOnScroll) || !trigger}>\n      <FabBase\n        onClick={handleClick}\n        className={classes.root}\n        color=\"secondary\"\n      >\n        <PlusIcon />\n      </FabBase>\n    </Slide>\n  );\n};\n\nexport default Fab;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LikeIcon from '@material-ui/icons/Favorite';\n\ninterface PropTypes {\n  value: number;\n  which: 'left' | 'right';\n  like: boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    color: 'white',\n    top: '86%',\n    fontSize: 20,\n    textShadow: '0 0 3px black',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  left: {\n    left: 30\n  },\n  right: {\n    right: 30\n  }\n});\n\nconst PercentageBar: React.FC<PropTypes> = ({ value, which, like }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={`${classes.root} ${classes[which]}`}>\n      {like && <LikeIcon />}\n      {`${value}%`}\n    </div>\n  );\n};\n\n\nexport default PercentageBar;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Image from './Image';\n\ninterface PropTypes {\n  src?: string;\n  alt?: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  },\n  image: {\n    objectFit: 'cover',\n    pointerEvents: 'none',\n    width: '100%',\n    height: '100%'\n  }\n});\n\nconst BackgroundImage: React.FC<PropTypes> = ({ src, alt }) => {\n  const classes = useStyles();\n\n  return (\n    <picture className={classes.root}>\n      <Image src={src} alt={alt} className={classes.image} />\n    </picture>\n  );\n};\n\nexport default BackgroundImage;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea } from '@material-ui/core/';\nimport { Which, Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\n\nimport PercentageBar from './PercentageBar';\nimport UserStrip from '../UserStrip/UserStrip';\nimport BackgroundImage from '../Image/BackgroundImage';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes {\n  poll: Poll;\n  setPoll: (poll: Poll) => void;\n}\n\nconst DATE_FORMAT = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nconst useStyles = makeStyles(theme => ({\n  media: {\n    display: 'flex',\n    height: theme.spacing(50)\n  },\n  rateLine: {\n    position: 'relative',\n    width: '100%',\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  highlight: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  fillRateLine: {\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  }\n}));\n\nconst PollCard: React.FC<PropTypes> = ({ poll, setPoll }) => {\n  const classes = useStyles();\n  const { author, contents: { left, right }, vote } = poll;\n  const { enqueueSnackbar } = useSnackbar();\n  const { isAuthenticated } = useAuth();\n  const date: string = new Date(poll.createdAt).toLocaleString('default', DATE_FORMAT);\n\n  const handleVote = (which: Which) => {\n    if (!isAuthenticated) {\n      enqueueSnackbar('Unauthorized users can not vote in polls', {\n        variant: 'error'\n      });\n    } else if (vote) {\n      enqueueSnackbar('You have already voted in this poll', {\n        variant: 'error'\n      });\n    } else {\n      const newVote = ({ which, pollId: poll._id });\n      const newPoll = { ...poll };\n      newPoll.contents[which].votes += 1;\n      newPoll.vote = {\n        _id: '',\n        authorId: '',\n        createdAt: new Date(),\n        ...newVote\n      };\n      setPoll(newPoll);\n\n      post('votes/', newVote);\n    }\n  };\n\n  const handleLeft = () => handleVote('left');\n  const handleRight = () => handleVote('right');\n\n  let leftPercentage;\n  let rightPercentage;\n\n  if (left.votes || right.votes) {\n    leftPercentage = Math.round(100 * (left.votes / (left.votes + right.votes)));\n    rightPercentage = 100 - leftPercentage;\n  } else {\n    leftPercentage = 0;\n    rightPercentage = 0;\n  }\n\n  const dominant: Which = left.votes >= right.votes ? 'left' : 'right';\n\n  return (\n    <Card>\n      <UserStrip user={author} info={date} />\n      <div className={classes.media}>\n        <CardActionArea onDoubleClick={handleLeft} className={classes.media}>\n          <BackgroundImage src={left.url} />\n          <PercentageBar value={leftPercentage} which=\"left\" like={vote?.which === 'left'} />\n        </CardActionArea>\n        <CardActionArea onDoubleClick={handleRight} className={classes.media}>\n          <BackgroundImage src={right.url} />\n          <PercentageBar value={rightPercentage} which=\"right\" like={vote?.which === 'right'} />\n        </CardActionArea>\n      </div>\n      <div className={`${classes.rateLine} ${dominant === 'right' ? classes.highlight : ''}`}>\n        <div\n          className={`${classes.fillRateLine} ${dominant === 'left' ? classes.highlight : ''}`}\n          style={{ width: `${leftPercentage}%` }}\n        />\n      </div>\n    </Card>\n  );\n};\n\nexport default PollCard;\n","import React from 'react';\nimport { Poll } from 'which-types';\nimport { WindowScroller, AutoSizer, List } from 'react-virtualized';\nimport PollCard from '../PollCard/PollCard';\n\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n}\n\ninterface RenderPropTypes {\n  index: number;\n  key: string;\n  style: React.CSSProperties;\n}\n\n\nconst PollsList: React.FC<PropTypes> = ({ polls, mutate }) => {\n  const RenderItem: React.FC<RenderPropTypes> = ({ index, style, key }) => {\n    const poll = polls[index];\n\n    const setPoll = (newPoll: Poll) => {\n      const newPolls = [...polls];\n      newPolls[index] = newPoll;\n\n      // Force-update list-size so everything re-renders\n      mutate([], false);\n      mutate(newPolls, false);\n    };\n\n    return (\n      // To re-render on list resize, add this info to key\n      <div key={`${key}-${poll._id}-${polls.length}`} style={style}>\n        <PollCard poll={poll} setPoll={setPoll} />\n      </div>\n    );\n  };\n\n  return (\n    <WindowScroller>\n      {({\n        height,\n        isScrolling,\n        registerChild,\n        onChildScroll,\n        scrollTop\n      }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <div ref={registerChild}>\n              <List\n                autoHeight\n                height={height}\n                isScrolling={isScrolling}\n                onScroll={onChildScroll}\n                rowCount={polls.length}\n                rowHeight={550}\n                rowRenderer={RenderItem}\n                scrollTop={scrollTop}\n                width={width}\n                containerStyle={{ pointerEvents: 'auto' }}\n                overscanRowCount={1}\n              />\n            </div>\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  );\n};\n\nexport default PollsList;\n\n","import React from 'react';\nimport { Container } from '@material-ui/core/';\n\nimport PollsList from '../../components/PollsList/PollsList';\nimport Fab from '../../components/Fab/Fab';\nimport Loading from '../../components/Loading/Loading';\nimport EmptyState from '../../components/EmptyState/EmptyState';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useFeed } from '../../hooks/APIClient';\n\n\nconst Feed: React.FC = () => {\n  const { data: polls, isValidating, mutate } = useFeed();\n  const { isAuthenticated } = useAuth();\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      {isAuthenticated && <Fab hideOnScroll />}\n      {\n        polls\n          ? polls.length\n            ? <PollsList polls={polls} mutate={mutate} />\n            : <EmptyState />\n          : isValidating && <Loading />\n      }\n    </Container>\n  );\n};\n\nexport default Feed;\n\n"],"sourceRoot":""}