{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","containers/Login/Login.tsx"],"names":["FormControlLabel","React","props","ref","checked","classes","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","value","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","forEach","key","_extends","clsx","root","concat","capitalize","Typography","component","withStyles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","type","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","role","undefined","event","input","newChecked","target","padding","position","opacity","width","height","top","left","margin","zIndex","Switch","_props$color","_props$edge","edge","_props$size","size","thumb","edgeStart","edgeEnd","switchBase","track","overflow","boxSizing","flexShrink","colorAdjust","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","useStyles","makeStyles","spacing","textAlign","formHeader","fontSize","formTransfer","justifyContent","transferButton","Login","useState","error","setError","remember","setRemember","nameRef","useRef","passwordRef","login","useAuth","history","useHistory","handleSubmit","a","current","toLowerCase","password","then","success","push","noValidate","autoComplete","TextField","helperText","onClick","Button","variant"],"mappings":"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","file":"static/js/13.830c86f8.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  TextField,\n  Button,\n  FormControlLabel,\n  Switch\n} from '@material-ui/core';\nimport { useAuth } from '../../hooks/useAuth';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(35)\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  formHeader: {\n    textAlign: 'center',\n    fontSize: 25\n  },\n  formTransfer: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  transferButton: {\n    marginLeft: 10,\n    color: 'green',\n    cursor: 'pointer'\n  }\n}));\n\nconst Login: React.FC = () => {\n  const [error, setError] = useState<boolean>(false);\n  const [remember, setRemember] = useState<boolean>(true);\n  const classes = useStyles();\n  const nameRef = useRef<HTMLInputElement>();\n  const passwordRef = useRef<HTMLInputElement>();\n  const { login } = useAuth();\n  const history = useHistory();\n\n  const handleCheck = () => {\n    setRemember(!remember);\n  };\n\n  const handleSubmit = async () => {\n    const name = nameRef.current?.value?.toLowerCase();\n    const password = passwordRef.current?.value;\n    if (name && password) {\n      login(name, password, remember).then(success => {\n        if (success) history.push(`/profile/${name}`);\n        else setError(true);\n      });\n    }\n  };\n\n  const handleRegistration = () => {\n    history.push('/registration');\n  };\n\n  return (\n    <>\n      <div className={classes.formHeader}>Sign In</div>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          inputRef={nameRef}\n          error={error}\n          label=\"Login\"\n        />\n        <TextField\n          inputRef={passwordRef}\n          error={error}\n          helperText={error && 'Invalid credentials'}\n          label=\"Password\"\n          type=\"password\"\n        />\n        <FormControlLabel\n          control={<Switch color=\"primary\" onClick={handleCheck} checked={remember} size=\"small\" />}\n          label=\"Remember me\"\n        />\n        <Button variant=\"contained\" onClick={handleSubmit}>submit</Button>\n      </form>\n      <div className={classes.formTransfer}>\n        <div>{'Don\\'t have an account?'}</div>\n        <span\n          onClick={handleRegistration}\n          className={classes.transferButton}\n          role=\"presentation\"\n        >\n          Sign up\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n\n"],"sourceRoot":""}