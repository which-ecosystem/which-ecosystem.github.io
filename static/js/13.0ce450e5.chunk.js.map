{"version":3,"sources":["containers/Registration/Registration.tsx"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","display","flexDirection","alignItems","textAlign","formHeader","fontSize","formTransfer","justifyContent","transferButton","marginLeft","color","cursor","Registration","useState","error","setError","classes","usernameRef","useRef","emailRef","passwordRef","login","useAuth","history","useHistory","className","noValidate","autoComplete","inputRef","label","helperText","required","type","variant","onClick","username","current","value","toLowerCase","password","email","post","then","push","role"],"mappings":"sLASMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAOJ,EAAMG,QAAQ,KAEvBE,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,UAAW,UAEbC,WAAY,CACVD,UAAW,SACXE,SAAU,IAEZC,aAAc,CACZN,QAAS,OACTO,eAAgB,UAElBC,eAAgB,CACdC,WAAY,GACZC,MAAO,QACPC,OAAQ,eAgEGC,UA5DgB,WAAO,IAAD,EACTC,oBAAkB,GADT,mBAC5BC,EAD4B,KACrBC,EADqB,KAE7BC,EAAUvB,IACVwB,EAAcC,mBACdC,EAAWD,mBACXE,EAAcF,mBACZG,EAAUC,cAAVD,MACFE,EAAUC,cAiBhB,OACE,oCACE,yBAAKC,UAAWT,EAAQZ,YAAxB,WACA,0BAAMqB,UAAWT,EAAQpB,KAAM8B,YAAU,EAACC,aAAa,OACrD,kBAAC,IAAD,CACEC,SAAUX,EACVY,MAAM,WACNf,MAAOA,EACPgB,WAAYhB,GAAS,0BACrBiB,UAAQ,IAEV,kBAAC,IAAD,CAAWH,SAAUT,EAAUU,MAAM,UACrC,kBAAC,IAAD,CACED,SAAUR,EACVS,MAAM,WACNG,KAAK,WACLD,UAAQ,EACRjB,MAAOA,EACPgB,WAAYhB,GAAS,4BAEvB,kBAAC,IAAD,CAAQmB,QAAQ,YAAYC,QAnCb,WAAO,IAAD,QACnBC,EAAQ,UAAGlB,EAAYmB,eAAf,iBAAG,EAAqBC,aAAxB,aAAG,EAA4BC,cACvCC,EAAQ,UAAGnB,EAAYgB,eAAf,aAAG,EAAqBC,MAChCG,EAAK,UAAGrB,EAASiB,eAAZ,aAAG,EAAkBC,MAC5BF,GAAYI,EACdE,YAAK,SAAU,CAAEN,WAAUI,WAAUC,UAClCE,MAAK,kBAAMrB,EAAMc,EAAUI,MAC3BG,MAAK,kBAAMnB,EAAQoB,KAAR,mBAAyBR,OAClCpB,GAAS,KA2BZ,WAEF,yBAAKU,UAAWT,EAAQV,cACtB,yDACA,0BACE4B,QA7BY,WAClBX,EAAQoB,KAAK,WA6BPlB,UAAWT,EAAQR,eACnBoC,KAAK,gBAHP","file":"static/js/13.0ce450e5.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(35)\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  formHeader: {\n    textAlign: 'center',\n    fontSize: 25\n  },\n  formTransfer: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  transferButton: {\n    marginLeft: 10,\n    color: 'green',\n    cursor: 'pointer'\n  }\n}));\n\nconst Registration: React.FC = () => {\n  const [error, setError] = useState<boolean>(false);\n  const classes = useStyles();\n  const usernameRef = useRef<HTMLInputElement>();\n  const emailRef = useRef<HTMLInputElement>();\n  const passwordRef = useRef<HTMLInputElement>();\n  const { login } = useAuth();\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    const username = usernameRef.current?.value?.toLowerCase();\n    const password = passwordRef.current?.value;\n    const email = emailRef.current?.value;\n    if (username && password) {\n      post('/users', { username, password, email })\n        .then(() => login(username, password))\n        .then(() => history.push(`/profile/${username}`));\n    } else setError(true);\n  };\n\n  const handleLogin = () => {\n    history.push('/login');\n  };\n\n  return (\n    <>\n      <div className={classes.formHeader}>Sign Up</div>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          inputRef={usernameRef}\n          label=\"Username\"\n          error={error}\n          helperText={error && 'This field is required!'}\n          required\n        />\n        <TextField inputRef={emailRef} label=\"Email\" />\n        <TextField\n          inputRef={passwordRef}\n          label=\"Password\"\n          type=\"password\"\n          required\n          error={error}\n          helperText={error && 'This field is required!'}\n        />\n        <Button variant=\"contained\" onClick={handleSubmit}>submit</Button>\n      </form>\n      <div className={classes.formTransfer}>\n        <div>Already have an account?</div>\n        <span\n          onClick={handleLogin}\n          className={classes.transferButton}\n          role=\"presentation\"\n        >\n          Log in\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default Registration;\n"],"sourceRoot":""}