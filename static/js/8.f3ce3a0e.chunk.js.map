{"version":3,"sources":["components/Image/BackgroundImage.tsx","components/EmptyState/EmptyState.tsx","assets/noContent.svg","assets/construction.svg","components/Fab/Fab.tsx","components/PollCard/PercentageBar.tsx","components/PollCard/PollCard.tsx","components/PollsList/RenderItem.tsx","components/PollsList/PollsList.tsx","containers/Feed/Feed.tsx"],"names":["useStyles","makeStyles","root","position","width","height","image","objectFit","pointerEvents","BackgroundImage","src","alt","classes","className","theme","img","spacing","CONTEXT","default","icon","noContentIcon","tagline","construction","constructionIcon","EmptyState","variant","message","module","exports","zIndex","breakpoints","down","right","bottom","up","Fab","hideOnScroll","history","useHistory","trigger","useScrollTrigger","appear","direction","in","onClick","push","color","top","fontSize","textShadow","display","alignItems","left","PercentageBar","value","which","like","DATE_FORMAT","month","day","year","hour","minute","media","rateLine","backgroundColor","palette","primary","light","transitionDuration","highlight","main","fillRateLine","PollCard","React","memo","leftPercentage","rightPercentage","poll","setPoll","author","contents","vote","enqueueSnackbar","useSnackbar","isAuthenticated","useAuth","date","Date","createdAt","toLocaleString","handleVote","newVote","pollId","_id","newPoll","votes","authorId","post","Math","round","dominant","Card","UserStrip","user","info","CardActionArea","onDoubleClick","url","style","RenderItem","polls","mutate","index","_key","useCallback","newPolls","key","oldProps","newProps","PollsList","rowRenderer","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","ref","autoHeight","onScroll","rowCount","length","rowHeight","containerStyle","overscanRowCount","Feed","useFeed","data","isValidating","maxWidth","disableGutters"],"mappings":"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","file":"static/js/8.f3ce3a0e.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Image from './Image';\n\ninterface PropTypes {\n  src?: string;\n  alt?: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  },\n  image: {\n    objectFit: 'cover',\n    pointerEvents: 'none',\n    width: '100%',\n    height: '100%'\n  }\n});\n\nconst BackgroundImage: React.FC<PropTypes> = ({ src, alt }) => {\n  const classes = useStyles();\n\n  return (\n    <picture className={classes.root}>\n      <Image src={src} alt={alt} className={classes.image} />\n    </picture>\n  );\n};\n\nexport default BackgroundImage;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Message from '../Message/Message';\nimport noContentIcon from '../../assets/noContent.svg';\nimport constructionIcon from '../../assets/construction.svg';\n\n\ninterface PropTypes {\n  variant?: 'default' | 'construction';\n  message?: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  img: {\n    width: theme.spacing(24)\n  }\n}));\n\nconst CONTEXT = {\n  default: {\n    icon: noContentIcon,\n    tagline: 'No content'\n  },\n  construction: {\n    icon: constructionIcon,\n    tagline: 'Coming soon'\n  }\n};\n\nconst EmptyState: React.FC<PropTypes> = ({ variant = 'default', message }) => {\n  const classes = useStyles();\n  const { icon, tagline } = CONTEXT[variant];\n\n  return (\n    <Message tagline={tagline} message={message}>\n      <img src={icon} className={classes.img} alt=\"No content\" />\n    </Message>\n  );\n};\n\nexport default EmptyState;\n","module.exports = __webpack_public_path__ + \"static/media/noContent.527b7724.svg\";","module.exports = __webpack_public_path__ + \"static/media/construction.07ebb9e5.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Fab as FabBase, Slide, useScrollTrigger } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlusIcon from '@material-ui/icons/Add';\n\ninterface PropTypes {\n  hideOnScroll?: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: 1000,\n    position: 'fixed',\n\n    [theme.breakpoints.down('sm')]: {\n      right: theme.spacing(2),\n      bottom: theme.spacing(8)\n    },\n    [theme.breakpoints.up('md')]: {\n      right: theme.spacing(5),\n      bottom: theme.spacing(5)\n    }\n  }\n}));\n\nconst Fab: React.FC<PropTypes> = ({ hideOnScroll = false }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const trigger = useScrollTrigger();\n\n  const handleClick = () => {\n    history.push('/new');\n  };\n\n  return (\n    <Slide appear={false} direction=\"up\" in={(!hideOnScroll) || !trigger}>\n      <FabBase\n        onClick={handleClick}\n        className={classes.root}\n        color=\"secondary\"\n      >\n        <PlusIcon />\n      </FabBase>\n    </Slide>\n  );\n};\n\nexport default Fab;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LikeIcon from '@material-ui/icons/Favorite';\n\ninterface PropTypes {\n  value: number;\n  which: 'left' | 'right';\n  like: boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    color: 'white',\n    top: '86%',\n    fontSize: 20,\n    textShadow: '0 0 3px black',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  left: {\n    left: 30\n  },\n  right: {\n    right: 30\n  }\n});\n\nconst PercentageBar: React.FC<PropTypes> = ({ value, which, like }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={`${classes.root} ${classes[which]}`}>\n      {like && <LikeIcon />}\n      {`${value}%`}\n    </div>\n  );\n};\n\n\nexport default PercentageBar;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea } from '@material-ui/core/';\nimport { Which, Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\n\nimport PercentageBar from './PercentageBar';\nimport UserStrip from '../UserStrip/UserStrip';\nimport BackgroundImage from '../Image/BackgroundImage';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes {\n  poll: Poll;\n  setPoll: (poll: Poll) => void;\n}\n\nconst DATE_FORMAT = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nconst useStyles = makeStyles(theme => ({\n  media: {\n    display: 'flex',\n    height: theme.spacing(50)\n  },\n  rateLine: {\n    position: 'relative',\n    width: '100%',\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  highlight: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  fillRateLine: {\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  }\n}));\n\nconst PollCard: React.FC<PropTypes> = React.memo(({ poll, setPoll }) => {\n  const classes = useStyles();\n  const { author, contents: { left, right }, vote } = poll;\n  const { enqueueSnackbar } = useSnackbar();\n  const { isAuthenticated } = useAuth();\n  const date: string = new Date(poll.createdAt).toLocaleString('default', DATE_FORMAT);\n\n  const handleVote = (which: Which) => {\n    if (!isAuthenticated) {\n      enqueueSnackbar('Unauthorized users can not vote in polls', {\n        variant: 'error'\n      });\n    } else if (vote) {\n      enqueueSnackbar('You have already voted in this poll', {\n        variant: 'error'\n      });\n    } else {\n      const newVote = ({ which, pollId: poll._id });\n      const newPoll = { ...poll };\n      newPoll.contents[which].votes += 1;\n      newPoll.vote = {\n        _id: '',\n        authorId: '',\n        createdAt: new Date(),\n        ...newVote\n      };\n      setPoll(newPoll);\n\n      post('votes/', newVote);\n    }\n  };\n\n  const handleLeft = () => handleVote('left');\n  const handleRight = () => handleVote('right');\n\n  let leftPercentage;\n  let rightPercentage;\n\n  if (left.votes || right.votes) {\n    leftPercentage = Math.round(100 * (left.votes / (left.votes + right.votes)));\n    rightPercentage = 100 - leftPercentage;\n  } else {\n    leftPercentage = 0;\n    rightPercentage = 0;\n  }\n\n  const dominant: Which = left.votes >= right.votes ? 'left' : 'right';\n\n  return (\n    <Card>\n      <UserStrip user={author} info={date} />\n      <div className={classes.media}>\n        <CardActionArea onDoubleClick={handleLeft} className={classes.media}>\n          <BackgroundImage src={left.url} />\n          <PercentageBar value={leftPercentage} which=\"left\" like={vote?.which === 'left'} />\n        </CardActionArea>\n        <CardActionArea onDoubleClick={handleRight} className={classes.media}>\n          <BackgroundImage src={right.url} />\n          <PercentageBar value={rightPercentage} which=\"right\" like={vote?.which === 'right'} />\n        </CardActionArea>\n      </div>\n      <div className={`${classes.rateLine} ${dominant === 'right' ? classes.highlight : ''}`}>\n        <div\n          className={`${classes.fillRateLine} ${dominant === 'left' ? classes.highlight : ''}`}\n          style={{ width: `${leftPercentage}%` }}\n        />\n      </div>\n    </Card>\n  );\n});\n\nexport default PollCard;\n","import React, { useCallback } from 'react';\nimport { Poll } from 'which-types';\nimport PollCard from '../PollCard/PollCard';\n\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n  index: number;\n  style: React.CSSProperties;\n  _key: string; // https://reactjs.org/warnings/special-props.html\n}\n\nconst compareProps = (oldProps: PropTypes, newProps: PropTypes) => {\n  if (oldProps._key !== newProps._key) return false;\n  if (oldProps.index !== newProps.index) return false;\n  if (oldProps.polls !== newProps.polls) return false;\n  // TODO: uncomment line below to listen to style updates\n  // if (JSON.stringify(oldProps.style)!== JSON.stringify(newProps.style)) return false;\n  return true;\n};\n\nconst RenderItem: React.FC<PropTypes> = React.memo(({\n  polls, mutate, index, style, _key\n}) => {\n  const poll = polls[index];\n\n  const setPoll = useCallback((newPoll: Poll) => {\n    const newPolls = [...polls];\n    newPolls[index] = newPoll;\n\n    // Force-update list-size so everything re-renders\n    mutate([], false);\n    mutate(newPolls, false);\n  }, [mutate, index, polls]);\n\n  return (\n    <div key={_key} style={style}>\n      <PollCard poll={poll} setPoll={setPoll} />\n    </div>\n  );\n}, compareProps);\n\n\nexport default RenderItem;\n\n","import React, { useCallback } from 'react';\nimport { Poll } from 'which-types';\nimport { WindowScroller, AutoSizer, List } from 'react-virtualized';\nimport RenderItem from './RenderItem';\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n}\n\nconst PollsList: React.FC<PropTypes> = ({ polls, mutate }) => {\n  const rowRenderer = useCallback(({ index, style, key }) => (\n    <RenderItem\n      polls={polls}\n      mutate={mutate}\n      index={index}\n      style={style}\n      key={key}\n      _key={key}\n    />\n  ), [polls, mutate]);\n\n  return (\n    <WindowScroller>\n      {({\n        height,\n        isScrolling,\n        registerChild,\n        onChildScroll,\n        scrollTop\n      }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <div ref={registerChild}>\n              <List\n                autoHeight\n                height={height}\n                isScrolling={isScrolling}\n                onScroll={onChildScroll}\n                rowCount={polls.length}\n                rowHeight={550}\n                rowRenderer={rowRenderer}\n                scrollTop={scrollTop}\n                width={width}\n                containerStyle={{ pointerEvents: 'auto' }}\n                overscanRowCount={2}\n              />\n            </div>\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  );\n};\n\nexport default PollsList;\n\n","import React from 'react';\nimport { Container } from '@material-ui/core/';\n\nimport PollsList from '../../components/PollsList/PollsList';\nimport Fab from '../../components/Fab/Fab';\nimport Loading from '../../components/Loading/Loading';\nimport EmptyState from '../../components/EmptyState/EmptyState';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useFeed } from '../../hooks/APIClient';\n\n\nconst Feed: React.FC = () => {\n  const { data: polls, isValidating, mutate } = useFeed();\n  const { isAuthenticated } = useAuth();\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      {isAuthenticated && <Fab hideOnScroll />}\n      {\n        polls\n          ? polls.length\n            ? <PollsList polls={polls} mutate={mutate} />\n            : <EmptyState />\n          : isValidating && <Loading />\n      }\n    </Container>\n  );\n};\n\nexport default Feed;\n\n"],"sourceRoot":""}