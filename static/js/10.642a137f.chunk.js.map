{"version":3,"sources":["components/Image/BackgroundImage.tsx","components/AttachLink/Modal.tsx","components/AttachLink/AttachLink.tsx","components/FileUpload/FileUpload.tsx","containers/PollCreation/ImageInput.tsx","hooks/useS3Preupload.tsx","containers/PollCreation/PollCreation.tsx"],"names":["useStyles","makeStyles","root","position","width","height","image","objectFit","pointerEvents","BackgroundImage","src","alt","classes","className","Modal","setIsOpen","isOpen","callback","useState","url","setUrl","handleClose","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","id","label","type","fullWidth","autoComplete","onChange","event","target","value","DialogActions","Button","onClick","color","result","startsWith","match","fileId","disabled","length","AttachLink","children","handleOpen","defaultButton","variant","startIcon","child","React","Children","toArray","isValidElement","cloneElement","FileUpload","useFilePicker","files","HiddenFileInput","useEffect","file","utils","loadFile","then","size","accept","multiple","display","justifyContent","flexDirection","alignItems","clearIcon","opacity","fontSize","overlay","backgroundColor","top","left","transitionDuration","invisible","icon","ImageInput","progress","childrenCallback","fileUrl","Upload","Typography","Media","CardActionArea","undefined","Boolean","CircularProgress","Check","CancelOutlined","compressFile","quality","Promise","resolve","reject","Compressor","success","error","err","setFile","setProgress","isReady","useMemo","setValue","useCallback","File","handleUploadProgress","progressEvent","Math","round","loaded","total","a","config","headers","onUploadProgress","Bluebird","all","get","name","response","compressedFile","uploadUrl","data","axios","put","uri","slice","indexOf","theme","marginBottom","spacing","images","PollCreation","history","useHistory","enqueueSnackbar","useSnackbar","user","useAuth","updateFeed","useFeed","mutate","useS3Preupload","setLeft","progressLeft","resolveLeft","isLeftReady","setRight","progressRight","resolveRight","isRightReady","handleClick","leftUrl","rightUrl","console","log","contents","right","push","post","Container","maxWidth","disableGutters","Card","UserStrip","info","Divider","LinearProgress"],"mappings":"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","file":"static/js/10.642a137f.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Image from './Image';\n\ninterface PropTypes {\n  src?: string;\n  alt?: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  },\n  image: {\n    objectFit: 'cover',\n    pointerEvents: 'none',\n    width: '100%',\n    height: '100%'\n  }\n});\n\nconst BackgroundImage: React.FC<PropTypes> = ({ src, alt }) => {\n  const classes = useStyles();\n\n  return (\n    <picture className={classes.root}>\n      <Image src={src} alt={alt} className={classes.image} />\n    </picture>\n  );\n};\n\nexport default BackgroundImage;\n\n","import React, { useState } from 'react';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\n\ninterface PropTypes {\n  isOpen: boolean;\n  setIsOpen: (value: boolean) => void;\n  callback: (url: string) => void;\n}\n\nconst Modal: React.FC<PropTypes> = ({ setIsOpen, isOpen, callback }) => {\n  const [url, setUrl] = useState<string>('');\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  const handleSubmit = () => {\n    let result = url;\n    if (url.startsWith('https://www.instagram.com/')) {\n      const match = url.match('/p/(.*)/');\n      const id = match && match[1];\n      result = `https://www.instagram.com/p/${id}/media/?size=l`;\n    } else if (url.startsWith('https://drive.google.com/')) {\n      const match = url.match('/d/(.*)/');\n      const fileId = match && match[1];\n      result = `https://drive.google.com/uc?export=view&id=${fileId}`;\n    }\n    callback(result || '');\n    handleClose();\n  };\n\n  const handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setUrl(event.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog open={isOpen} onClose={handleClose}>\n        <DialogTitle>Upload via link</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Provide a valid URL to your image:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Image URL\"\n            type=\"text\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={handleChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\" disabled={!url.length}>\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport LinkIcon from '@material-ui/icons/Link';\nimport Modal from './Modal';\n\ninterface PropTypes {\n  callback: (url: string) => void;\n}\n\nconst AttachLink: React.FC<PropTypes> = ({ callback, children }) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const handleOpen = (): void => {\n    setIsOpen(true);\n  };\n\n  const defaultButton = (\n    <Button\n      onClick={handleOpen}\n      variant=\"outlined\"\n      color=\"primary\"\n      startIcon={<LinkIcon />}\n    >\n      Attach a link\n    </Button>\n  );\n\n  const child = children && React.Children.toArray(children)[0];\n\n  return (\n    <>\n      <Modal callback={callback} isOpen={isOpen} setIsOpen={setIsOpen} />\n      {\n        React.isValidElement(child)\n          ? React.cloneElement(child, { onClick: handleOpen })\n          : defaultButton\n      }\n    </>\n  );\n};\n\nexport default AttachLink;\n","import React, { useEffect } from 'react';\nimport { useFilePicker, utils } from 'react-sage';\nimport Button from '@material-ui/core/Button';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\n\ninterface PropTypes {\n  callback: (fileUrl: string, file: File) => void;\n}\n\n\nconst FileUpload: React.FC<PropTypes> = ({ callback, children }) => {\n  const { files, onClick, HiddenFileInput } = useFilePicker();\n\n  useEffect(() => {\n    if (files?.length) {\n      const file = files[0];\n      utils.loadFile(file).then(url => callback(url, file));\n    }\n  }, [files, callback]);\n\n  const child = children && React.Children.toArray(children)[0];\n\n  const defaultButton = (\n    <Button\n      onClick={onClick}\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"large\"\n      startIcon={<CloudUpload />}\n    >\n      Upload\n    </Button>\n  );\n\n  return (\n    <>\n      <HiddenFileInput accept=\".jpg, .jpeg, .png, .gif\" multiple={false} />\n      {\n        React.isValidElement(child)\n          ? React.cloneElement(child, { onClick })\n          : defaultButton\n      }\n    </>\n  );\n};\n\nexport default FileUpload;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  CardActionArea,\n  Typography,\n  CircularProgress\n} from '@material-ui/core';\nimport { Check, CancelOutlined } from '@material-ui/icons';\n\nimport AttachLink from '../../components/AttachLink/AttachLink';\nimport FileUpload from '../../components/FileUpload/FileUpload';\nimport BackgroundImage from '../../components/Image/BackgroundImage';\n\ninterface PropTypes {\n  callback: (file?: File | string) => void;\n  progress?: number;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '50%'\n  },\n  clearIcon: {\n    opacity: '.5',\n    fontSize: 50\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.45)',\n    color: 'white',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    transitionDuration: '0.5s'\n  },\n  invisible: {\n    backgroundColor: 'rgba(0, 0, 0, 0)'\n  },\n  icon: {\n    color: 'white'\n  }\n});\n\n\nconst ImageInput: React.FC<PropTypes> = ({ callback, progress }) => {\n  const classes = useStyles();\n  const [url, setUrl] = useState<string>();\n\n  const handleClear = (): void => {\n    setUrl(undefined);\n    callback(undefined);\n  };\n\n  const childrenCallback = (fileUrl: string, file?: File) => {\n    setUrl(fileUrl);\n    callback(file || fileUrl);\n  };\n\n  const Upload = (\n    <div className={classes.root}>\n      <FileUpload callback={childrenCallback} />\n      <Typography variant=\"h6\"> or </Typography>\n      <AttachLink callback={childrenCallback} />\n    </div>\n  );\n\n  const Media = (\n    <CardActionArea onClick={handleClear} className={classes.root} disabled={Boolean(progress)}>\n      <BackgroundImage src={url} />\n      <div className={`${classes.overlay} ${progress === 100 && classes.invisible}`}>\n        {\n          progress\n            ? progress < 100\n              ? <CircularProgress variant=\"static\" value={progress} className={classes.icon} />\n              : <Check className={classes.icon} fontSize=\"large\" />\n            : <CancelOutlined className={classes.icon} fontSize=\"large\" />\n        }\n      </div>\n    </CardActionArea>\n  );\n\n  return url ? Media : Upload;\n};\n\nexport default ImageInput;\n","import { useState, useCallback, useMemo } from 'react';\nimport axios from 'axios';\nimport Bluebird from 'bluebird';\nimport Compressor from 'compressorjs';\nimport { get } from '../requests';\n\n\ninterface ProgressEvent {\n  loaded: number;\n  total: number;\n}\n\ninterface Hook {\n  setValue: (value: File | string | undefined) => void;\n  isReady: boolean;\n  resolve: () => Promise<string>;\n  progress: number;\n}\n\n\nconst compressFile = (file: File, quality = 0.6): Promise<Blob> => {\n  return new Promise((resolve, reject) => {\n    return new Compressor(file, {\n      success: result => resolve(result),\n      error: err => reject(err),\n      quality\n    });\n  });\n};\n\nexport default (): Hook => {\n  const [url, setUrl] = useState<string>();\n  const [file, setFile] = useState<File>();\n  const [progress, setProgress] = useState<number>(0);\n\n  const isReady = useMemo(() => Boolean(file || url), [file, url]);\n\n  const setValue: Hook['setValue'] = useCallback(value => {\n    if (value instanceof File) {\n      setFile(value);\n      setUrl(undefined);\n    } else {\n      setUrl(value);\n      setFile(undefined);\n    }\n  }, [setUrl, setFile]);\n\n  const handleUploadProgress = useCallback((progressEvent: ProgressEvent): void => {\n    // Only allow upload progress reach 95%, and set 100% when request is resolved\n    setProgress(Math.round((progressEvent.loaded * 95) / progressEvent.total));\n  }, [setProgress]);\n\n  const resolve = useCallback(async (quality?: number): Promise<string> => {\n    if (file) {\n      const config = {\n        headers: { 'Content-Type': 'image/png' },\n        onUploadProgress: handleUploadProgress\n      };\n\n      setProgress(0.01);\n\n      // Add querystring to avoid caching request in some browsers, see\n      // https://stackoverflow.com/questions/59339561/safari-skipping-xmlhttprequests\n      return Bluebird.all([get(`/files?key=${file.name}`), compressFile(file, quality)])\n        .then(([response, compressedFile]) => {\n          const uploadUrl = response.data;\n          return axios.put(uploadUrl, compressedFile, config);\n        })\n        .then(response => {\n          setProgress(100);\n          const uri = response.config.url;\n          return uri ? uri.slice(0, uri.indexOf('?')) : '';\n        });\n    }\n    setProgress(100);\n    return url || '';\n  }, [file, handleUploadProgress, url]);\n\n  return {\n    setValue,\n    isReady,\n    resolve,\n    progress\n  };\n};\n","/* eslint-disable */\nimport React from 'react';\nimport Bluebird from 'bluebird';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Card,\n  Divider,\n  Container,\n  LinearProgress\n} from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\n\nimport ImageInput from './ImageInput';\nimport UserStrip from '../../components/UserStrip/UserStrip';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useFeed } from '../../hooks/APIClient';\nimport useS3Preupload from '../../hooks/useS3Preupload';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(4)\n  },\n  images: {\n    height: theme.spacing(50),\n    display: 'flex'\n  }\n}));\n\n\nconst PollCreation: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n  const { mutate: updateFeed } = useFeed();\n  const {\n    setValue: setLeft,\n    progress: progressLeft,\n    resolve: resolveLeft,\n    isReady: isLeftReady\n  } = useS3Preupload();\n  const {\n    setValue: setRight,\n    progress: progressRight,\n    resolve: resolveRight,\n    isReady: isRightReady\n  } = useS3Preupload();\n\n  const handleClick = async () => {\n    try {\n      const [leftUrl, rightUrl] = await Bluebird.all([resolveLeft(), resolveRight()]);\n      console.log('leftUrl', leftUrl);\n      console.log('rightUrl', rightUrl);\n\n      const contents = {\n        left: { url: leftUrl },\n        right: { url: rightUrl }\n      };\n\n      history.push('/feed');\n\n      post('/polls/', { contents }).then(() => {\n        updateFeed();\n        enqueueSnackbar('Your poll has been successfully created!', { variant: 'success' });\n      });\n    } catch (error) {\n      enqueueSnackbar('Failed to create a poll. Please, try again.', { variant: 'error' });\n      history.push('/feed');\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      <Card className={classes.root}>\n        {user && <UserStrip user={user} info=\"\" />}\n        <Divider />\n        <div className={classes.images}>\n          <ImageInput callback={setLeft} progress={progressLeft} />\n          <ImageInput callback={setRight} progress={progressRight} />\n        </div>\n        {\n          progressLeft || progressRight\n            ? <LinearProgress color=\"primary\" />\n            : (\n              <Button\n                color=\"primary\"\n                disabled={!(isLeftReady && isRightReady)}\n                variant=\"contained\"\n                onClick={handleClick}\n                fullWidth\n              >\n                Submit\n              </Button>\n            )\n        }\n      </Card>\n    </Container>\n  );\n};\n\nexport default PollCreation;\n"],"sourceRoot":""}