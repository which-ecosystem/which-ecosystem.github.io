{"version":3,"sources":["components/Fab/Fab.tsx","components/PollCard/PercentageBar.tsx","components/DateString/compactDateString.ts","components/DateString/DateString.tsx","components/PollCard/PollCard.tsx","components/PollsList/RenderItem.tsx","components/PollsList/PollsList.tsx","containers/Feed/Feed.tsx"],"names":["useStyles","makeStyles","theme","root","zIndex","position","breakpoints","down","right","spacing","bottom","up","Fab","hideOnScroll","classes","location","useLocation","trigger","useScrollTrigger","appear","direction","in","to","pathname","state","background","className","color","top","fontSize","textShadow","display","alignItems","left","PercentageBar","value","which","like","metrics","name","ratio","compactDateString","date","diff","Date","valueOf","resolve","metricIndex","metric","nextMetric","newValue","rounded","Math","round","isPlural","count","ending","cursor","DATE_FORMAT","month","day","year","hour","minute","DateString","useState","isCompact","setIsCompact","toggleScompact","useCallback","v","useMemo","formatted","toLocaleString","compact","role","onClick","media","height","rateLine","width","backgroundColor","palette","primary","light","transitionDuration","highlight","main","fillRateLine","description","padding","wordWrap","whiteSpace","PollCard","React","memo","leftPercentage","rightPercentage","poll","setPoll","author","contents","vote","enqueueSnackbar","useSnackbar","isAuthenticated","useAuth","handleVote","variant","newVote","pollId","_id","newPoll","votes","authorId","createdAt","post","dominant","Card","elevation","UserStrip","user","info","Typography","CardActionArea","onDoubleClick","BackgroundImage","src","url","style","paddingBottom","RenderItem","polls","mutate","index","cache","parent","_key","newPolls","columnIndex","rowIndex","key","oldProps","newProps","CellMeasurerCache","fixedWidth","PollsList","displayCount","setDisplayCount","useEffect","clearAll","rowRenderer","loadMoreRows","a","previousCount","isRowLoaded","length","rowCount","_","min","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","ref","threshold","onRowsRendered","autoHeight","onScroll","rowHeight","containerStyle","pointerEvents","overscanRowCount","deferredMeasurementCache","Feed","useFeed","data","isValidating","maxWidth","disableGutters"],"mappings":"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","file":"static/js/7.1b64bbcf.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { Fab as FabBase, Slide, useScrollTrigger } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlusIcon from '@material-ui/icons/Add';\n\ninterface PropTypes {\n  hideOnScroll?: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: 1000,\n    position: 'fixed',\n\n    [theme.breakpoints.down('sm')]: {\n      right: theme.spacing(2),\n      bottom: theme.spacing(8)\n    },\n    [theme.breakpoints.up('md')]: {\n      right: theme.spacing(5),\n      bottom: theme.spacing(5)\n    }\n  }\n}));\n\nconst Fab: React.FC<PropTypes> = ({ hideOnScroll = false }) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"up\" in={(!hideOnScroll) || !trigger}>\n      <Link to={{ pathname: '/new', state: { background: location } }}>\n        <FabBase\n          className={classes.root}\n          color=\"secondary\"\n        >\n          <PlusIcon />\n        </FabBase>\n      </Link>\n    </Slide>\n  );\n};\n\nexport default Fab;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LikeIcon from '@material-ui/icons/Favorite';\n\ninterface PropTypes {\n  value: number;\n  which: 'left' | 'right';\n  like: boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    color: 'white',\n    top: '86%',\n    fontSize: 20,\n    textShadow: '0 0 3px black',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  left: {\n    left: 30\n  },\n  right: {\n    right: 30\n  }\n});\n\nconst PercentageBar: React.FC<PropTypes> = ({ value, which, like }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={`${classes.root} ${classes[which]}`}>\n      {like && <LikeIcon />}\n      {`${value}%`}\n    </div>\n  );\n};\n\n\nexport default PercentageBar;\n\n","const metrics = [\n  { name: 'minute', ratio: 60 },\n  { name: 'hour', ratio: 60 },\n  { name: 'day', ratio: 24 },\n  { name: 'week', ratio: 7 },\n  { name: 'month', ratio: 4 },\n  { name: 'year', ratio: 12 }\n];\n\nconst PRECISION = 0.85;\n\nconst resolve = (value: number, metricIndex = 0): string => {\n  // Recursively divide value until it's ready to be presented as a string\n  const metric = metrics[metricIndex];\n  const nextMetric = metrics[metricIndex + 1];\n  const newValue = value / metric.ratio;\n\n  if (newValue < nextMetric.ratio * PRECISION) {\n    const rounded = Math.round(newValue);\n    const isPlural = rounded > 1;\n    const count = isPlural ? rounded : 'a';\n    const ending = isPlural ? 's' : '';\n    return `${count} ${metric.name}${ending} ago`;\n  }\n  return resolve(newValue, metricIndex + 1);\n};\n\nconst compactDateString = (date: Date): string => {\n  const now = new Date();\n  const diff = (now.valueOf() - date.valueOf()) / 1000;\n  if (diff < 60) return 'just now';\n  return resolve(diff);\n};\n\nexport default compactDateString;\n","import React, { useState, useMemo, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport compactDateString from './compactDateString';\n\ninterface PropTypes {\n  value: Date | string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'block',\n    cursor: 'pointer'\n  }\n});\n\nconst DATE_FORMAT = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nconst DateString: React.FC<PropTypes> = ({ value }) => {\n  const [isCompact, setIsCompact] = useState<boolean>(true);\n  const classes = useStyles();\n\n  const toggleScompact = useCallback(() => setIsCompact(v => !v), [setIsCompact]);\n\n  const date = useMemo(() => new Date(value), [value]);\n  const formatted = useMemo(() => date.toLocaleString('default', DATE_FORMAT), [date]);\n  const compact = useMemo(() => compactDateString(date), [date]);\n\n  return (\n    <div role=\"presentation\" className={classes.root} onClick={toggleScompact}>\n      {isCompact ? compact : formatted}\n    </div>\n  );\n};\n\nexport default DateString;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea, Typography } from '@material-ui/core/';\nimport { Which, Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\n\nimport PercentageBar from './PercentageBar';\nimport UserStrip from '../UserStrip/UserStrip';\nimport DateString from '../DateString/DateString';\nimport BackgroundImage from '../Image/BackgroundImage';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes {\n  poll: Poll;\n  setPoll: (poll: Poll) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  media: {\n    display: 'flex',\n    height: theme.spacing(50)\n  },\n  rateLine: {\n    position: 'relative',\n    width: '100%',\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  highlight: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  fillRateLine: {\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  description: {\n    fontSize: 14,\n    padding: theme.spacing(0, 2, 1.25),\n    wordWrap: 'break-word',\n    whiteSpace: 'pre-wrap'\n  }\n}));\n\nconst PollCard: React.FC<PropTypes> = React.memo(({ poll, setPoll }) => {\n  const classes = useStyles();\n  const { author, contents: { left, right }, vote } = poll;\n  const { enqueueSnackbar } = useSnackbar();\n  const { isAuthenticated } = useAuth();\n\n  const handleVote = (which: Which) => () => {\n    if (!isAuthenticated) {\n      enqueueSnackbar('Unauthorized users can not vote in polls', {\n        variant: 'error'\n      });\n    } else if (vote) {\n      enqueueSnackbar('You have already voted in this poll', {\n        variant: 'error'\n      });\n    } else {\n      const newVote = ({ which, pollId: poll._id });\n      const newPoll = { ...poll };\n      newPoll.contents[which].votes += 1;\n      newPoll.vote = {\n        _id: '',\n        authorId: '',\n        createdAt: new Date(),\n        ...newVote\n      };\n      setPoll(newPoll);\n\n      post('votes/', newVote);\n    }\n  };\n\n  let leftPercentage;\n  let rightPercentage;\n\n  if (left.votes || right.votes) {\n    leftPercentage = Math.round(100 * (left.votes / (left.votes + right.votes)));\n    rightPercentage = 100 - leftPercentage;\n  } else {\n    leftPercentage = 0;\n    rightPercentage = 0;\n  }\n\n  const dominant: Which = left.votes >= right.votes ? 'left' : 'right';\n\n  return (\n    <Card elevation={3}>\n      <UserStrip user={author} info={<DateString value={poll.createdAt} />} />\n      {poll.description && (\n        <Typography className={classes.description}>\n          {poll.description}\n        </Typography>\n      )}\n      <div className={classes.media}>\n        <CardActionArea onDoubleClick={handleVote('left')} className={classes.media}>\n          <BackgroundImage src={left.url} />\n          <PercentageBar value={leftPercentage} which=\"left\" like={vote?.which === 'left'} />\n        </CardActionArea>\n        <CardActionArea onDoubleClick={handleVote('right')} className={classes.media}>\n          <BackgroundImage src={right.url} />\n          <PercentageBar value={rightPercentage} which=\"right\" like={vote?.which === 'right'} />\n        </CardActionArea>\n      </div>\n      <div className={`${classes.rateLine} ${dominant === 'right' ? classes.highlight : ''}`}>\n        <div\n          className={`${classes.fillRateLine} ${dominant === 'left' ? classes.highlight : ''}`}\n          style={{ width: `${leftPercentage}%` }}\n        />\n      </div>\n    </Card>\n  );\n});\n\nexport default PollCard;\n","import React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Poll } from 'which-types';\nimport { CellMeasurer, CellMeasurerCache, List } from 'react-virtualized';\nimport PollCard from '../PollCard/PollCard';\n\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n  index: number;\n  style: React.CSSProperties;\n  cache: CellMeasurerCache;\n  parent: List;\n  _key: string; // https://reactjs.org/warnings/special-props.html\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingBottom: theme.spacing(8)\n  }\n}));\n\nconst compareProps = (oldProps: PropTypes, newProps: PropTypes) => {\n  if (oldProps._key !== newProps._key) return false;\n  if (oldProps.index !== newProps.index) return false;\n  if (oldProps.polls !== newProps.polls) return false;\n  // Only listen for height changes in style\n  if (oldProps.style.height !== newProps.style.height) return false;\n  return true;\n};\n\nconst RenderItem: React.FC<PropTypes> = React.memo(({\n  polls, mutate, index, style, cache, parent, _key\n}) => {\n  const classes = useStyles();\n  const poll = polls[index];\n  const setPoll = useCallback((newPoll: Poll) => {\n    const newPolls = [...polls];\n    newPolls[index] = newPoll;\n\n    // Force-update list-size so everything re-renders\n    mutate([], false);\n    mutate(newPolls, false);\n  }, [mutate, index, polls]);\n\n  return (\n    <CellMeasurer\n      cache={cache}\n      columnIndex={0}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div key={`${_key}-${poll._id}`} className={classes.root} style={style}>\n        <PollCard poll={poll} setPoll={setPoll} />\n      </div>\n    </CellMeasurer>\n  );\n}, compareProps);\n\n\nexport default RenderItem;\n\n","import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport {\n  WindowScroller,\n  AutoSizer,\n  List,\n  InfiniteLoader,\n  CellMeasurerCache\n} from 'react-virtualized';\nimport _ from 'lodash';\nimport { Poll } from 'which-types';\n\nimport RenderItem from './RenderItem';\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n}\n\nconst cache = new CellMeasurerCache({\n  fixedWidth: true\n});\n\nconst PAGE_SIZE = 10;\n\nconst PollsList: React.FC<PropTypes> = ({ polls, mutate }) => {\n  const [displayCount, setDisplayCount] = useState<number>(PAGE_SIZE);\n\n  useEffect(() => {\n    cache.clearAll();\n  }, [polls]);\n\n  const rowRenderer = useCallback(({ index, style, key, parent }) => (\n    <RenderItem\n      polls={polls}\n      mutate={mutate}\n      index={index}\n      style={style}\n      cache={cache}\n      parent={parent}\n      key={key}\n      _key={key}\n    />\n  ), [polls, mutate]);\n\n  const loadMoreRows = useCallback(async () => {\n    setDisplayCount(previousCount => previousCount + PAGE_SIZE);\n  }, []);\n\n  const isRowLoaded = useCallback(({ index }) => {\n    return index < displayCount - 1 || displayCount === polls.length;\n  }, [displayCount, polls]);\n\n  const rowCount = useMemo(() => {\n    return _.min([displayCount, polls.length]) || polls.length;\n  }, [displayCount, polls.length]);\n\n  return (\n    <WindowScroller>\n      {({\n        height,\n        isScrolling,\n        registerChild,\n        onChildScroll,\n        scrollTop\n      }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <div ref={registerChild}>\n              <InfiniteLoader\n                isRowLoaded={isRowLoaded}\n                loadMoreRows={loadMoreRows}\n                rowCount={rowCount}\n                threshold={1}\n              >\n                {({ onRowsRendered, registerChild: ref }) => (\n                  <List\n                    autoHeight\n                    height={height}\n                    isScrolling={isScrolling}\n                    onScroll={onChildScroll}\n                    rowCount={rowCount}\n                    rowHeight={cache.rowHeight}\n                    rowRenderer={rowRenderer}\n                    scrollTop={scrollTop}\n                    width={width}\n                    containerStyle={{ pointerEvents: 'auto' }}\n                    overscanRowCount={2}\n                    onRowsRendered={onRowsRendered}\n                    ref={ref}\n                    deferredMeasurementCache={cache}\n                  />\n                )}\n              </InfiniteLoader>\n            </div>\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  );\n};\n\nexport default PollsList;\n\n","import React from 'react';\nimport { Container } from '@material-ui/core/';\n\nimport PollsList from '../../components/PollsList/PollsList';\nimport Fab from '../../components/Fab/Fab';\nimport Loading from '../../components/Loading/Loading';\nimport EmptyState from '../../components/EmptyState/EmptyState';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useFeed } from '../../hooks/APIClient';\n\n\nconst Feed: React.FC = () => {\n  const { data: polls, isValidating, mutate } = useFeed();\n  const { isAuthenticated } = useAuth();\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      {isAuthenticated && <Fab hideOnScroll />}\n      {\n        polls\n          ? polls.length\n            ? <PollsList polls={polls} mutate={mutate} />\n            : <EmptyState />\n          : isValidating && <Loading />\n      }\n    </Container>\n  );\n};\n\nexport default Feed;\n\n"],"sourceRoot":""}