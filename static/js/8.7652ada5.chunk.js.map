{"version":3,"sources":["components/EmptyState/EmptyState.tsx","assets/noContent.svg","assets/construction.svg","components/Fab/Fab.tsx","components/PollCard/PercentageBar.tsx","components/PollCard/PollCard.tsx","components/PollsList/PollsList.tsx","containers/Feed/Feed.tsx"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","justifyContent","alignItems","img","margin","spacing","width","CONTEXT","default","icon","noContentIcon","tagline","construction","constructionIcon","EmptyState","variant","message","classes","className","src","alt","color","module","exports","zIndex","position","breakpoints","down","right","bottom","up","Fab","hideOnScroll","history","useHistory","trigger","useScrollTrigger","appear","direction","in","onClick","push","top","fontSize","textShadow","left","PercentageBar","value","which","like","DATE_FORMAT","month","day","year","hour","minute","images","height","imagesBlock","rateLine","backgroundColor","palette","primary","light","transitionDuration","highlight","main","fillRateLine","PollCard","leftPercentage","rightPercentage","poll","setPoll","author","contents","vote","enqueueSnackbar","useSnackbar","isAuthenticated","useAuth","date","Date","createdAt","toLocaleString","handleVote","newVote","pollId","_id","newPoll","votes","authorId","post","Math","round","dominant","Card","UserStrip","user","info","CardActionArea","onDoubleClick","CardMedia","image","url","style","PollsList","polls","mutate","RenderItem","index","key","length","newPolls","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","ref","autoHeight","onScroll","rowCount","rowHeight","rowRenderer","containerStyle","pointerEvents","overscanRowCount","Feed","useFeed","data","isValidating","maxWidth","disableGutters"],"mappings":"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","file":"static/js/8.7652ada5.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport noContentIcon from '../../assets/noContent.svg';\nimport constructionIcon from '../../assets/construction.svg';\n\n\ninterface PropTypes {\n  variant?: 'default' | 'construction';\n  message?: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  img: {\n    margin: theme.spacing(2),\n    width: theme.spacing(24)\n  }\n\n}));\n\nconst CONTEXT = {\n  default: {\n    icon: noContentIcon,\n    tagline: 'No content'\n  },\n  construction: {\n    icon: constructionIcon,\n    tagline: 'Coming soon'\n  }\n};\n\nconst EmptyState: React.FC<PropTypes> = ({ variant = 'default', message }) => {\n  const classes = useStyles();\n\n  const { icon, tagline } = CONTEXT[variant];\n\n  return (\n    <div className={classes.root}>\n      <img src={icon} className={classes.img} alt=\"No content\" />\n      <Typography variant=\"h5\">\n        {tagline}\n      </Typography>\n      <Typography color=\"textSecondary\">\n        <p>\n          {message}\n        </p>\n      </Typography>\n    </div>\n  );\n};\n\nexport default EmptyState;\n","module.exports = __webpack_public_path__ + \"static/media/noContent.527b7724.svg\";","module.exports = __webpack_public_path__ + \"static/media/construction.07ebb9e5.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Fab as FabBase, Slide, useScrollTrigger } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlusIcon from '@material-ui/icons/Add';\n\ninterface PropTypes {\n  hideOnScroll?: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: 1000,\n    position: 'fixed',\n\n    [theme.breakpoints.down('sm')]: {\n      right: theme.spacing(2),\n      bottom: theme.spacing(8)\n    },\n    [theme.breakpoints.up('md')]: {\n      right: theme.spacing(5),\n      bottom: theme.spacing(5)\n    }\n  }\n}));\n\nconst Fab: React.FC<PropTypes> = ({ hideOnScroll = false }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const trigger = useScrollTrigger();\n\n  const handleClick = () => {\n    history.push('/new');\n  };\n\n  return (\n    <Slide appear={false} direction=\"up\" in={(!hideOnScroll) || !trigger}>\n      <FabBase\n        onClick={handleClick}\n        className={classes.root}\n        color=\"secondary\"\n      >\n        <PlusIcon />\n      </FabBase>\n    </Slide>\n  );\n};\n\nexport default Fab;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LikeIcon from '@material-ui/icons/Favorite';\n\ninterface PropTypes {\n  value: number;\n  which: 'left' | 'right';\n  like: boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    color: 'white',\n    top: '86%',\n    fontSize: 20,\n    textShadow: '0 0 3px black',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  left: {\n    left: 30\n  },\n  right: {\n    right: 30\n  }\n});\n\nconst PercentageBar: React.FC<PropTypes> = ({ value, which, like }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={`${classes.root} ${classes[which]}`}>\n      {like && <LikeIcon />}\n      {`${value}%`}\n    </div>\n  );\n};\n\n\nexport default PercentageBar;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardActionArea,\n  CardMedia\n} from '@material-ui/core/';\nimport { Which, Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\n\nimport PercentageBar from './PercentageBar';\nimport UserStrip from '../UserStrip/UserStrip';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes {\n  poll: Poll;\n  setPoll: (poll: Poll) => void;\n}\n\nconst DATE_FORMAT = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nconst useStyles = makeStyles(theme => ({\n  images: {\n    height: theme.spacing(50)\n  },\n  imagesBlock: {\n    display: 'flex'\n  },\n  rateLine: {\n    position: 'relative',\n    width: '100%',\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  highlight: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  fillRateLine: {\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  }\n}));\n\nconst PollCard: React.FC<PropTypes> = ({ poll, setPoll }) => {\n  const classes = useStyles();\n  const { author, contents: { left, right }, vote } = poll;\n  const { enqueueSnackbar } = useSnackbar();\n  const { isAuthenticated } = useAuth();\n  const date: string = new Date(poll.createdAt).toLocaleString('default', DATE_FORMAT);\n\n  const handleVote = (which: Which) => {\n    if (!isAuthenticated) {\n      enqueueSnackbar('Unauthorized users can not vote in polls', {\n        variant: 'error'\n      });\n    } else if (vote) {\n      enqueueSnackbar('You have already voted in this poll', {\n        variant: 'error'\n      });\n    } else {\n      const newVote = ({ which, pollId: poll._id });\n      const newPoll = { ...poll };\n      newPoll.contents[which].votes += 1;\n      newPoll.vote = {\n        _id: '',\n        authorId: '',\n        createdAt: new Date(),\n        ...newVote\n      };\n      setPoll(newPoll);\n\n      post('votes/', newVote);\n    }\n  };\n\n  const handleLeft = () => handleVote('left');\n  const handleRight = () => handleVote('right');\n\n  let leftPercentage;\n  let rightPercentage;\n\n  if (left.votes || right.votes) {\n    leftPercentage = Math.round(100 * (left.votes / (left.votes + right.votes)));\n    rightPercentage = 100 - leftPercentage;\n  } else {\n    leftPercentage = 0;\n    rightPercentage = 0;\n  }\n\n  const dominant: Which = left.votes >= right.votes ? 'left' : 'right';\n\n  return (\n    <Card>\n      <UserStrip user={author} info={date} />\n      <div className={classes.imagesBlock}>\n        <CardActionArea onDoubleClick={handleLeft}>\n          <CardMedia\n            className={classes.images}\n            image={left.url}\n          />\n          <PercentageBar value={leftPercentage} which=\"left\" like={vote?.which === 'left'} />\n        </CardActionArea>\n        <CardActionArea onDoubleClick={handleRight}>\n          <CardMedia\n            className={classes.images}\n            image={right.url}\n          />\n          <PercentageBar value={rightPercentage} which=\"right\" like={vote?.which === 'right'} />\n        </CardActionArea>\n      </div>\n      <div className={`${classes.rateLine} ${dominant === 'right' ? classes.highlight : ''}`}>\n        <div\n          className={`${classes.fillRateLine} ${dominant === 'left' ? classes.highlight : ''}`}\n          style={{ width: `${leftPercentage}%` }}\n        />\n      </div>\n    </Card>\n  );\n};\n\nexport default PollCard;\n","import React from 'react';\nimport { Poll } from 'which-types';\nimport { WindowScroller, AutoSizer, List } from 'react-virtualized';\nimport PollCard from '../PollCard/PollCard';\n\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n}\n\ninterface RenderPropTypes {\n  index: number;\n  key: string;\n  style: React.CSSProperties;\n}\n\n\nconst PollsList: React.FC<PropTypes> = ({ polls, mutate }) => {\n  const RenderItem: React.FC<RenderPropTypes> = ({ index, style, key }) => {\n    const poll = polls[index];\n\n    const setPoll = (newPoll: Poll) => {\n      const newPolls = [...polls];\n      newPolls[index] = newPoll;\n\n      // Force-update list-size so everything re-renders\n      mutate([], false);\n      mutate(newPolls, false);\n    };\n\n    return (\n      // To re-render on list resize, add this info to key\n      <div key={`${key}-${poll._id}-${polls.length}`} style={style}>\n        <PollCard poll={poll} setPoll={setPoll} />\n      </div>\n    );\n  };\n\n  return (\n    <WindowScroller>\n      {({\n        height,\n        isScrolling,\n        registerChild,\n        onChildScroll,\n        scrollTop\n      }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <div ref={registerChild}>\n              <List\n                autoHeight\n                height={height}\n                isScrolling={isScrolling}\n                onScroll={onChildScroll}\n                rowCount={polls.length}\n                rowHeight={550}\n                rowRenderer={RenderItem}\n                scrollTop={scrollTop}\n                width={width}\n                containerStyle={{ pointerEvents: 'auto' }}\n                overscanRowCount={1}\n              />\n            </div>\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  );\n};\n\nexport default PollsList;\n\n","import React from 'react';\nimport { Container } from '@material-ui/core/';\n\nimport PollsList from '../../components/PollsList/PollsList';\nimport Fab from '../../components/Fab/Fab';\nimport Loading from '../../components/Loading/Loading';\nimport EmptyState from '../../components/EmptyState/EmptyState';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useFeed } from '../../hooks/APIClient';\n\n\nconst Feed: React.FC = () => {\n  const { data: polls, isValidating, mutate } = useFeed();\n  const { isAuthenticated } = useAuth();\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      {isAuthenticated && <Fab hideOnScroll />}\n      {\n        polls\n          ? polls.length\n            ? <PollsList polls={polls} mutate={mutate} />\n            : <EmptyState />\n          : isValidating && <Loading />\n      }\n    </Container>\n  );\n};\n\nexport default Feed;\n\n"],"sourceRoot":""}