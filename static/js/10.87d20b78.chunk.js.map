{"version":3,"sources":["components/ReviewCard/ReviewCard.tsx","containers/Home/ReviewForm.tsx","containers/Home/Home.tsx"],"names":["useStyles","makeStyles","theme","root","margin","spacing","position","versionChip","right","top","ReviewCard","feedback","classes","Card","className","elevation","UserStrip","user","author","info","Rating","value","score","readOnly","size","Chip","variant","label","version","contents","Divider","CardContent","Typography","display","flexDirection","textField","ReviewForm","useState","setContents","setScore","updateFeedbacks","useFeedback","mutate","enqueueSnackbar","useSnackbar","onChange","event","newScore","TextField","target","rows","multiline","Button","color","onClick","post","then","overflow","padding","logo","width","height","patchNotes","whiteSpace","fontWeight","signup","marginLeft","reviews","breakpoints","up","Home","feedbacks","data","release","usePatchNotes","history","useHistory","useAuth","isAuthenticated","useTheme","isMobile","useMediaQuery","down","rating","length","reduce","acc","handleSignUp","push","EmailLink","Link","href","Reviews","map","index","key","FeedbackSection","findIndex","_id","Grid","container","item","xs","md","direction","alignItems","Image","src","process","alt","toFixed","component","description","startIcon","url"],"mappings":"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","file":"static/js/10.87d20b78.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Chip\n} from '@material-ui/core/';\nimport { Rating } from '@material-ui/lab';\nimport { Feedback } from 'which-types';\n\nimport UserStrip from '../UserStrip/UserStrip';\n\ninterface PropTypes {\n  feedback: Feedback;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(4, 0, 1, 0),\n    position: 'relative'\n  },\n  versionChip: {\n    position: 'absolute',\n    right: theme.spacing(2),\n    top: theme.spacing(2)\n  }\n}));\n\nconst ReviewCard: React.FC<PropTypes> = ({ feedback }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} elevation={2}>\n      <UserStrip\n        user={feedback.author}\n        info={<Rating value={feedback.score} readOnly size=\"small\" />}\n      />\n      <Chip\n        size=\"small\"\n        variant=\"outlined\"\n        label={feedback.version}\n        className={classes.versionChip}\n      />\n      {feedback.contents && (\n        <>\n          <Divider />\n          <CardContent>\n            <Typography>\n              {feedback.contents}\n            </Typography>\n          </CardContent>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default ReviewCard;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button } from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport { useSnackbar } from 'notistack';\nimport { useFeedback } from '../../hooks/APIClient';\n\nimport { post } from '../../requests';\n\n\ninterface PropTypes {\n  version: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  textField: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst ReviewForm: React.FC<PropTypes> = ({ version }) => {\n  const [contents, setContents] = useState<string>('');\n  const [score, setScore] = useState<number>(0);\n  const { mutate: updateFeedbacks } = useFeedback();\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleSubmit = (): void => {\n    if (score) {\n      post('/feedback', { contents, score, version }).then(() => {\n        enqueueSnackbar('Your feedback has been submitted!', {\n          variant: 'success'\n        });\n        updateFeedbacks();\n      });\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setContents(event.target?.value || '');\n  };\n\n  const handleChangeRating = (event: React.ChangeEvent<Record<string, unknown>>, newScore: number | null): void => {\n    setScore(newScore || 0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Rating value={score} onChange={handleChangeRating} size=\"large\" />\n      <TextField\n        value={contents}\n        onChange={handleChange}\n        label=\"Feedback\"\n        variant=\"outlined\"\n        className={classes.textField}\n        rows={4}\n        multiline\n      />\n      <div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={handleSubmit}\n        >\n          submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewForm;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Typography,\n  Divider,\n  Grid,\n  Button,\n  Link,\n  useMediaQuery\n} from '@material-ui/core/';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Rating } from '@material-ui/lab';\nimport { Feedback } from 'which-types';\n\nimport ReviewCard from '../../components/ReviewCard/ReviewCard';\nimport Image from '../../components/Image/Image';\nimport ReviewForm from './ReviewForm';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useFeedback, usePatchNotes } from '../../hooks/APIClient';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflow: 'hidden',\n    padding: theme.spacing(0, 2)\n  },\n  logo: {\n    width: theme.spacing(20),\n    height: theme.spacing(20)\n  },\n  patchNotes: {\n    whiteSpace: 'pre-wrap'\n  },\n  score: {\n    fontWeight: 'bold'\n  },\n  signup: {\n    marginLeft: theme.spacing(2)\n  },\n  reviews: {\n    margin: 'auto',\n    [theme.breakpoints.up('md')]: {\n      width: '70%'\n    }\n  }\n}));\n\nconst Home: React.FC = () => {\n  const { data: feedbacks } = useFeedback();\n  const { data: release } = usePatchNotes();\n  const classes = useStyles();\n  const history = useHistory();\n  const { isAuthenticated, user } = useAuth();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const rating = feedbacks?.length ? feedbacks.reduce(\n    (acc: number, feedback: Feedback) => acc + feedback.score,\n    0\n  ) / feedbacks.length : 0;\n\n  const handleLetsGo = () => {\n    history.push('/feed');\n  };\n\n  const handleSignUp = () => {\n    history.push('/registration');\n  };\n\n  const EmailLink = <Link href=\"mailto: eug-vs@keemail.me\">eug-vs@keemail.me</Link>;\n\n  const Reviews = (\n    <div className={classes.reviews}>\n      {feedbacks?.map((feedback: Feedback, index) => <ReviewCard key={index} feedback={feedback} />)}\n    </div>\n  );\n\n  const FeedbackSection = feedbacks && feedbacks.findIndex(\n    (feedback: Feedback) => (feedback.author._id === user?._id && feedback.version === release?.version)\n  ) >= 0 ? (\n    <p>\n      You have already left feedback for this version.\n      If you have more to say, please open GitHub issue or contact us directly via email: {EmailLink}.\n      Alternatively, you can just wait for another application patch to come out.\n    </p>\n    ) : (\n      <>\n        <p>\n          Here you can share your thougts about Which with us!\n          Note that you can ony leave feedback once per application version (there will be plenty of them later).\n        </p>\n        {isAuthenticated ? <ReviewForm version={release?.version || 'N/A'} /> : (\n          <>\n            <p> You must be authorized to leave feedback.</p>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={handleSignUp}\n            >\n              sign in\n            </Button>\n          </>\n        )}\n      </>\n    );\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={4}>\n          <Grid container direction=\"column\" spacing={1} alignItems=\"center\">\n            <Grid item>\n              <Image src={`${process.env.PUBLIC_URL}/which-logo-512.png`} alt=\"logo\" className={classes.logo} />\n            </Grid>\n            <Grid item>\n              {rating !== 0 && <Rating value={rating} readOnly size=\"large\" />}\n            </Grid>\n            <Grid item>\n              {rating !== 0 && (\n                <Typography variant=\"h5\" className={classes.score}>\n                  User score: {rating.toFixed(1)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n          {isMobile || Reviews}\n        </Grid>\n        <Grid item xs={12} md={5}>\n          <Grid container direction=\"column\" spacing={6}>\n            <Grid item>\n              <Typography variant=\"h4\"> Which one to choose? </Typography>\n              <Divider />\n              <Typography component=\"span\">\n                <p>\n                  Have you ever found yourself stuck between two options, not being able to choose any?\n                  This is exactly the problem we are going to solve!\n                </p>\n                <p>Share your minor everyday uncertainties with the whole world and see what others think!</p>\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={handleLetsGo}>\n                  {'let\\'s go!'}\n                </Button>\n                {!isAuthenticated && (\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"large\"\n                    className={classes.signup}\n                    onClick={handleSignUp}\n                  >\n                    sign up\n                  </Button>\n                )}\n              </Typography>\n            </Grid>\n            {release && (\n              <Grid item>\n                <Typography variant=\"h4\">{`What's new in ${release?.version}?`}</Typography>\n                <Divider />\n                <Typography component=\"span\" className={classes.patchNotes}>\n                  <p>{release?.description}</p>\n                </Typography>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  startIcon={<GitHubIcon />}\n                  href={release?.url}\n                >\n                  Learn more\n                </Button>\n              </Grid>\n            )}\n            <Grid item>\n              <Typography variant=\"h4\"> Leave feedback </Typography>\n              <Divider />\n              <Typography>\n                {FeedbackSection}\n              </Typography>\n            </Grid>\n            {isMobile && (\n              <Grid item>\n                {Reviews}\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n\n"],"sourceRoot":""}