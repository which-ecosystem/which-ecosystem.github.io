{"version":3,"sources":["../node_modules/@material-ui/icons/CheckCircle.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","containers/Registration/Registration.tsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","InputAdornment","React","props","ref","children","classes","className","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","Provider","_extends","clsx","root","hiddenLabel","filled","positionStart","positionEnd","margin","marginDense","Typography","color","withStyles","display","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","name","useStyles","makeStyles","theme","spacing","width","flexDirection","textAlign","formHeader","fontSize","formTransfer","justifyContent","transferButton","cursor","inputStyle","WebkitBoxShadow","Registration","errorOutputs","useState","errorPassword","setErrorPassword","errorEmail","setErrorEmail","errorUsername","setErrorUsername","usernameRef","useRef","emailRef","passwordRef","login","useAuth","history","useHistory","noValidate","autoComplete","TextField","inputRef","label","error","helperText","required","onChange","e","currentTarget","length","inputProps","style","test","InputProps","endAdornment","type","Button","onClick","username","current","toLowerCase","password","email","post","then","push","role"],"mappings":"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","file":"static/js/11.d3ba518e.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(35)\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  formHeader: {\n    textAlign: 'center',\n    fontSize: 25\n  },\n  formTransfer: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  transferButton: {\n    marginLeft: 10,\n    color: 'green',\n    cursor: 'pointer'\n  }\n}));\n\nconst inputStyle = { WebkitBoxShadow: '0 0 0 1000px snow inset' };\n\n\nconst Registration: React.FC = () => {\n  const errorOutputs = {\n    usernameError: 'Username is required',\n    emailError: 'Invalid email address',\n    passwordError: 'Should be at least 6 characters'\n  };\n  const [errorPassword, setErrorPassword] = useState<boolean>(false);\n  const [errorEmail, setErrorEmail] = useState<boolean>(false);\n  const [errorUsername, setErrorUsername] = useState<boolean>(false);\n\n  const classes = useStyles();\n  const usernameRef = useRef<HTMLInputElement>();\n  const emailRef = useRef<HTMLInputElement>();\n  const passwordRef = useRef<HTMLInputElement>();\n  const { login } = useAuth();\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    const username = usernameRef.current?.value?.toLowerCase();\n    const password = passwordRef.current?.value;\n    const email = emailRef.current?.value;\n    if (username && password) {\n      post('/users', { username, password, email })\n        .then(() => login(username, password))\n        .then(() => history.push(`/profile/${username}`));\n    }\n  };\n\n  const handleLogin = () => {\n    history.push('/login');\n  };\n\n  const handleLoginChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setErrorUsername(e.currentTarget.value.length === 0);\n  };\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setErrorEmail(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(e.currentTarget.value));\n  };\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setErrorPassword(e.currentTarget.value.length < 6);\n  };\n\n  return (\n    <>\n      <div className={classes.formHeader}>Sign Up</div>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          inputRef={usernameRef}\n          label=\"Username\"\n          error={errorUsername}\n          helperText={errorUsername && errorOutputs.usernameError}\n          required\n          onChange={handleLoginChange}\n          inputProps={{ style: inputStyle }}\n        />\n        <TextField\n          inputRef={emailRef}\n          label=\"Email\"\n          error={errorEmail}\n          helperText={errorEmail && errorOutputs.emailError}\n          onChange={handleEmailChange}\n          InputProps={errorEmail ? {} : {\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <CheckCircleIcon color=\"primary\" />\n              </InputAdornment>\n            ),\n            inputProps: {\n              style: inputStyle\n            }\n          }}\n        />\n        <TextField\n          inputRef={passwordRef}\n          label=\"Password\"\n          type=\"password\"\n          required\n          error={errorPassword}\n          helperText={errorPassword && errorOutputs.passwordError}\n          onChange={handlePasswordChange}\n          InputProps={errorPassword ? {} : {\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <CheckCircleIcon color=\"primary\" />\n              </InputAdornment>\n            ),\n            inputProps: {\n              style: inputStyle\n            }\n          }}\n        />\n        <Button variant=\"contained\" onClick={handleSubmit}>submit</Button>\n      </form>\n      <div className={classes.formTransfer}>\n        <div>Already have an account?</div>\n        <span\n          onClick={handleLogin}\n          className={classes.transferButton}\n          role=\"presentation\"\n        >\n          Log in\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default Registration;\n"],"sourceRoot":""}