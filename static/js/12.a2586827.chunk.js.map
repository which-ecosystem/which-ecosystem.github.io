{"version":3,"sources":["components/Image/Image.tsx","components/ReviewCard/ReviewCard.tsx","containers/Home/ReviewForm.tsx","containers/Home/Home.tsx"],"names":["useStyles","makeStyles","theme","container","width","height","display","alignItems","justifyContent","success","opacity","filterBrightness","filterSaturate","loading","position","error","errorIcon","color","grey","spacing","Image","React","memo","src","alt","className","animationDuration","disableLoading","classes","useState","status","setStatus","handleLoad","useCallback","handleError","transition","useMemo","image","style","onLoad","onError","root","margin","ReviewCard","feedback","Card","elevation","UserStrip","user","author","info","Rating","value","score","readOnly","size","contents","Divider","CardContent","Typography","flexDirection","textField","ReviewForm","setContents","setScore","history","useHistory","enqueueSnackbar","useSnackbar","onChange","event","newScore","TextField","target","label","variant","rows","multiline","Button","onClick","post","version","then","push","overflow","padding","logo","fontWeight","signup","marginLeft","reviews","breakpoints","up","Home","feedbacks","useFeedback","data","useAuth","isAuthenticated","useTheme","isMobile","useMediaQuery","down","rating","length","reduce","acc","handleSignUp","GithubLink","Link","href","TypescriptLink","ReactLink","FeathersLink","MUILink","EmailLink","Reviews","map","FeedbackSection","findIndex","_id","Grid","item","xs","md","direction","process","toFixed","startIcon"],"mappings":"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","file":"static/js/12.a2586827.chunk.js","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ErrorIcon from '@material-ui/icons/BrokenImage';\nimport grey from '@material-ui/core/colors/grey';\n\ninterface PropTypes {\n  src?: string;\n  alt?: string;\n  className?: string;\n  animationDuration?: number;\n  disableLoading?: boolean;\n}\n\ntype Status = 'success' | 'loading' | 'error';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  success: {\n    opacity: '100%',\n    filterBrightness: '100%',\n    filterSaturate: '100%'\n  },\n  loading: {\n    opacity: 0,\n    filterBrightness: 0,\n    filterSaturate: '20%',\n    position: 'absolute'\n  },\n  error: {\n    display: 'none'\n  },\n  errorIcon: {\n    color: grey[300],\n    width: theme.spacing(6),\n    height: theme.spacing(6)\n  }\n}));\n\nconst Image: React.FC<PropTypes> = React.memo(({\n  src,\n  alt,\n  className,\n  animationDuration = 1000,\n  disableLoading = false\n}) => {\n  const classes = useStyles();\n  const [status, setStatus] = useState<Status>('loading');\n\n  const handleLoad = useCallback((): void => {\n    setStatus('success');\n  }, [setStatus]);\n\n  const handleError = useCallback((): void => {\n    setStatus('error');\n  }, [setStatus]);\n\n  const transition = useMemo(() => `\n    filterBrightness ${animationDuration * 0.75}ms cubic-bezier(0.4, 0.0, 0.2, 1),\n    filterSaturate ${animationDuration}ms cubic-bezier(0.4, 0.0, 0.2, 1),\n    opacity ${animationDuration / 2}ms cubic-bezier(0.4, 0.0, 0.2, 1)\n  `, [animationDuration]);\n\n  const image = (\n    <img\n      src={src}\n      alt={alt}\n      className={`${className} ${classes[status]}`}\n      style={{ transition }}\n      onLoad={handleLoad}\n      onError={handleError}\n    />\n  );\n\n  return (\n    <>\n      {src && image}\n      {\n        status !== 'success' && (\n          <div className={classes.container}>\n            {\n              (status === 'error' || !src)\n                ? <ErrorIcon className={classes.errorIcon} />\n                : (!disableLoading && <CircularProgress color=\"primary\" />)\n            }\n          </div>\n        )\n      }\n    </>\n  );\n});\n\nexport default Image;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Divider\n} from '@material-ui/core/';\nimport { Rating } from '@material-ui/lab';\nimport { Feedback } from 'which-types';\n\nimport UserStrip from '../UserStrip/UserStrip';\n\ninterface PropTypes {\n  feedback: Feedback;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(4, 0, 1, 0)\n  }\n}));\n\nconst ReviewCard: React.FC<PropTypes> = ({ feedback }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} elevation={2}>\n      <UserStrip\n        user={feedback.author}\n        info={<Rating value={feedback.score} readOnly size=\"small\" />}\n      />\n      {feedback.contents && (\n        <>\n          <Divider />\n          <CardContent>\n            <Typography>\n              {feedback.contents}\n            </Typography>\n          </CardContent>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default ReviewCard;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button } from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport { useSnackbar } from 'notistack';\n\nimport { post } from '../../requests';\n\nconst version = 'v1.0.0';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  textField: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst ReviewForm: React.FC = () => {\n  const [contents, setContents] = useState<string>('');\n  const [score, setScore] = useState<number>(0);\n  const classes = useStyles();\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleSubmit = (): void => {\n    if (score) {\n      post('/feedback', { contents, score, version }).then(() => {\n        enqueueSnackbar('Your feedback has been submitted!', {\n          variant: 'success'\n        });\n        history.push('/feed');\n      });\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setContents(event.target?.value || '');\n  };\n\n  const handleChangeRating = (event: React.ChangeEvent<Record<string, unknown>>, newScore: number | null): void => {\n    setScore(newScore || 0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Rating value={score} onChange={handleChangeRating} size=\"large\" />\n      <TextField\n        value={contents}\n        onChange={handleChange}\n        label=\"Feedback\"\n        variant=\"outlined\"\n        className={classes.textField}\n        rows={4}\n        multiline\n      />\n      <div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={handleSubmit}\n        >\n          submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewForm;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Typography,\n  Divider,\n  Grid,\n  Button,\n  Link,\n  useMediaQuery\n} from '@material-ui/core/';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport { Rating } from '@material-ui/lab';\nimport { Feedback } from 'which-types';\n\nimport ReviewCard from '../../components/ReviewCard/ReviewCard';\nimport Image from '../../components/Image/Image';\nimport ReviewForm from './ReviewForm';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useFeedback } from '../../hooks/APIClient';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflow: 'hidden',\n    padding: theme.spacing(0, 2)\n  },\n  logo: {\n    width: theme.spacing(20),\n    height: theme.spacing(20)\n  },\n  score: {\n    fontWeight: 'bold'\n  },\n  signup: {\n    marginLeft: theme.spacing(2)\n  },\n  reviews: {\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(0, 10)\n    }\n  }\n}));\n\nconst Home: React.FC = () => {\n  const { data: feedbacks } = useFeedback();\n  const classes = useStyles();\n  const history = useHistory();\n  const { isAuthenticated, user } = useAuth();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const rating = feedbacks?.length ? feedbacks.reduce(\n    (acc: number, feedback: Feedback) => acc + feedback.score,\n    0\n  ) / feedbacks.length : 0;\n\n  const handleLetsGo = () => {\n    history.push('/feed');\n  };\n\n  const handleSignUp = () => {\n    history.push('/registration');\n  };\n\n  const GithubLink = <Link href=\"https://github.com/which-ecosystem\">GitHub</Link>;\n  const TypescriptLink = <Link href=\"https://www.typescriptlang.org/\">Typescript</Link>;\n  const ReactLink = <Link href=\"https://reactjs.org/\">React</Link>;\n  const FeathersLink = <Link href=\"https://feathersjs.com\">Feathers</Link>;\n  const MUILink = <Link href=\"https://material-ui.com\">Material-UI</Link>;\n  const EmailLink = <Link href=\"mailto: eug-vs@keemail.me\">eug-vs@keemail.me</Link>;\n\n  const Reviews = (\n    <div className={classes.reviews}>\n      {feedbacks?.map((feedback: Feedback) => <ReviewCard feedback={feedback} />)}\n    </div>\n  );\n\n  const FeedbackSection = feedbacks && feedbacks.findIndex(\n    (feedback: Feedback) => feedback.author._id === user?._id\n  ) >= 0 ? (\n    <p>\n      You have already left feedback for this version.\n      If you have more to say, please open GitHub issue or contact us directly via email: {EmailLink}.\n      Alternatively, you can just wait for another application patch to come out.\n    </p>\n    ) : (\n      <>\n        <p>\n          Here you can share your thougts about Which with us!\n          Note that you can ony leave feedback once per application version (there will be plenty of them later).\n        </p>\n        {isAuthenticated ? <ReviewForm /> : (\n          <>\n            <p> You must be authorized to leave feedback.</p>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={handleSignUp}\n            >\n              sign in\n            </Button>\n          </>\n        )}\n      </>\n    );\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={4}>\n          <Grid container direction=\"column\" spacing={1} alignItems=\"center\">\n            <Grid item>\n              <Image src={`${process.env.PUBLIC_URL}/which-logo-512.png`} alt=\"logo\" className={classes.logo} />\n            </Grid>\n            <Grid item>\n              {rating !== 0 && <Rating value={rating} readOnly size=\"large\" />}\n            </Grid>\n            <Grid item>\n              {rating !== 0 && (\n                <Typography variant=\"h5\" className={classes.score}>\n                  User score: {rating.toFixed(1)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n          {isMobile || Reviews}\n        </Grid>\n        <Grid item xs={12} md={5}>\n          <Grid container direction=\"column\" spacing={6}>\n            <Grid item>\n              <Typography variant=\"h4\"> Which one to choose? </Typography>\n              <Divider />\n              <Typography>\n                <p>\n                  Have you ever found yourself stuck between two options, not being able to choose any?\n                  This is exactly the problem we are going to solve!\n                </p>\n                <p>Share your minor everyday uncertainties with the whole world and see what others think!</p>\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={handleLetsGo}>\n                  {'let\\'s go!'}\n                </Button>\n                {!isAuthenticated && (\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"large\"\n                    className={classes.signup}\n                    onClick={handleSignUp}\n                  >\n                    sign up\n                  </Button>\n                )}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h4\"> About the project </Typography>\n              <Divider />\n              <Typography>\n                <p>\n                  The project is written in {TypescriptLink} and features {ReactLink}, {FeathersLink}, and {MUILink}.\n                  It is currently open-source and you can visit our {GithubLink} (make sure to star our repositories)!\n                </p>\n                <p>\n                  We encourage any developer to check it out. Feel free to open issues and create Pull Requests!\n                </p>\n                <p>\n                  All the development process is being tracked on the KanBan board (thanks GitHub).\n                  You can always check it to see what is the current state of the project.\n                </p>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  startIcon={<TrendingUpIcon />}\n                  href=\"https://github.com/orgs/which-ecosystem/projects/1\"\n                >\n                  track our progress\n                </Button>\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h4\"> Leave feedback </Typography>\n              <Divider />\n              <Typography>\n                {FeedbackSection}\n              </Typography>\n            </Grid>\n            {isMobile && (\n              <Grid item>\n                {Reviews}\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n\n"],"sourceRoot":""}