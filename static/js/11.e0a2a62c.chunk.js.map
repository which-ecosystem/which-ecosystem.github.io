{"version":3,"sources":["components/AttachLink/Modal.tsx","components/AttachLink/AttachLink.tsx","components/FileUpload/FileUpload.tsx","containers/PollCreation/ImageInput.tsx","hooks/useS3Preupload.tsx","containers/PollCreation/PollCreation.tsx"],"names":["Modal","setIsOpen","isOpen","callback","useState","url","setUrl","handleClose","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","id","label","type","fullWidth","autoComplete","onChange","event","target","value","DialogActions","Button","onClick","color","result","startsWith","match","fileId","disabled","length","AttachLink","children","handleOpen","defaultButton","variant","startIcon","child","React","Children","toArray","isValidElement","cloneElement","FileUpload","useFilePicker","files","HiddenFileInput","useEffect","file","utils","loadFile","then","size","accept","multiple","useStyles","makeStyles","root","display","justifyContent","flexDirection","alignItems","width","clearIcon","opacity","fontSize","media","height","darkOverlay","backgroundColor","position","top","left","transitionDuration","invisible","icon","ImageInput","progress","classes","childrenCallback","fileUrl","Upload","className","Typography","Media","CardActionArea","undefined","Boolean","CardMedia","image","CircularProgress","Check","CancelOutlined","setFile","setProgress","isReady","useMemo","setValue","useCallback","File","handleUploadProgress","progressEvent","Math","round","loaded","total","resolve","a","config","headers","onUploadProgress","get","response","data","uploadUrl","axios","put","uri","slice","indexOf","theme","marginBottom","spacing","images","PollCreation","history","useHistory","enqueueSnackbar","useSnackbar","user","useAuth","updateFeed","useFeed","mutate","useS3Preupload","setLeft","progressLeft","resolveLeft","isLeftReady","setRight","progressRight","resolveRight","isRightReady","handleClick","Promise","all","leftUrl","rightUrl","contents","right","post","push","Container","maxWidth","disableGutters","Card","UserStrip","info","Divider","LinearProgress"],"mappings":"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","file":"static/js/11.e0a2a62c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\n\ninterface PropTypes {\n  isOpen: boolean;\n  setIsOpen: (value: boolean) => void;\n  callback: (url: string) => void;\n}\n\nconst Modal: React.FC<PropTypes> = ({ setIsOpen, isOpen, callback }) => {\n  const [url, setUrl] = useState<string>('');\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  const handleSubmit = () => {\n    let result = url;\n    if (url.startsWith('https://www.instagram.com/')) {\n      const match = url.match('/p/(.*)/');\n      const id = match && match[1];\n      result = `https://www.instagram.com/p/${id}/media/?size=l`;\n    } else if (url.startsWith('https://drive.google.com/')) {\n      const match = url.match('/d/(.*)/');\n      const fileId = match && match[1];\n      result = `https://drive.google.com/uc?export=view&id=${fileId}`;\n    }\n    callback(result || '');\n    handleClose();\n  };\n\n  const handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setUrl(event.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog open={isOpen} onClose={handleClose}>\n        <DialogTitle>Upload via link</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Provide a valid URL to your image:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Image URL\"\n            type=\"text\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={handleChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\" disabled={!url.length}>\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport LinkIcon from '@material-ui/icons/Link';\nimport Modal from './Modal';\n\ninterface PropTypes {\n  callback: (url: string) => void;\n}\n\nconst AttachLink: React.FC<PropTypes> = ({ callback, children }) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const handleOpen = (): void => {\n    setIsOpen(true);\n  };\n\n  const defaultButton = (\n    <Button\n      onClick={handleOpen}\n      variant=\"outlined\"\n      color=\"primary\"\n      startIcon={<LinkIcon />}\n    >\n      Attach a link\n    </Button>\n  );\n\n  const child = children && React.Children.toArray(children)[0];\n\n  return (\n    <>\n      <Modal callback={callback} isOpen={isOpen} setIsOpen={setIsOpen} />\n      {\n        React.isValidElement(child)\n          ? React.cloneElement(child, { onClick: handleOpen })\n          : defaultButton\n      }\n    </>\n  );\n};\n\nexport default AttachLink;\n","import React, { useEffect } from 'react';\nimport { useFilePicker, utils } from 'react-sage';\nimport Button from '@material-ui/core/Button';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\n\ninterface PropTypes {\n  callback: (fileUrl: string, file: File) => void;\n}\n\n\nconst FileUpload: React.FC<PropTypes> = ({ callback, children }) => {\n  const { files, onClick, HiddenFileInput } = useFilePicker();\n\n  useEffect(() => {\n    if (files?.length) {\n      const file = files[0];\n      utils.loadFile(file).then(url => callback(url, file));\n    }\n  }, [files, callback]);\n\n  const child = children && React.Children.toArray(children)[0];\n\n  const defaultButton = (\n    <Button\n      onClick={onClick}\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"large\"\n      startIcon={<CloudUpload />}\n    >\n      Upload\n    </Button>\n  );\n\n  return (\n    <>\n      <HiddenFileInput accept=\".jpg, .jpeg, .png, .gif\" multiple={false} />\n      {\n        React.isValidElement(child)\n          ? React.cloneElement(child, { onClick })\n          : defaultButton\n      }\n    </>\n  );\n};\n\nexport default FileUpload;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  CardActionArea,\n  CardMedia,\n  Typography,\n  CircularProgress\n} from '@material-ui/core';\nimport { Check, CancelOutlined } from '@material-ui/icons';\n\nimport AttachLink from '../../components/AttachLink/AttachLink';\nimport FileUpload from '../../components/FileUpload/FileUpload';\n\ninterface PropTypes {\n  callback: (file?: File | string) => void;\n  progress?: number;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '50%'\n  },\n  clearIcon: {\n    opacity: '.5',\n    fontSize: 50\n  },\n  media: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  darkOverlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.45)',\n    color: 'white',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    transitionDuration: '0.5s'\n  },\n  invisible: {\n    backgroundColor: 'rgba(0, 0, 0, 0)'\n  },\n  icon: {\n    color: 'white'\n  }\n});\n\n\nconst ImageInput: React.FC<PropTypes> = ({ callback, progress }) => {\n  const classes = useStyles();\n  const [url, setUrl] = useState<string>();\n\n  const handleClear = (): void => {\n    setUrl(undefined);\n    callback(undefined);\n  };\n\n  const childrenCallback = (fileUrl: string, file?: File) => {\n    setUrl(fileUrl);\n    callback(file || fileUrl);\n  };\n\n  const Upload = (\n    <div className={classes.root}>\n      <FileUpload callback={childrenCallback} />\n      <Typography variant=\"h6\"> or </Typography>\n      <AttachLink callback={childrenCallback} />\n    </div>\n  );\n\n  const Media = (\n    <CardActionArea onClick={handleClear} className={classes.root} disabled={Boolean(progress)}>\n      <CardMedia image={url} className={classes.media}>\n        <div className={`${classes.media} ${classes.darkOverlay} ${progress === 100 && classes.invisible}`}>\n          {\n            progress\n              ? progress < 100\n                ? <CircularProgress variant=\"static\" value={progress} className={classes.icon} />\n                : <Check className={classes.icon} fontSize=\"large\" />\n              : <CancelOutlined className={classes.icon} fontSize=\"large\" />\n          }\n        </div>\n      </CardMedia>\n    </CardActionArea>\n  );\n\n  return url ? Media : Upload;\n};\n\nexport default ImageInput;\n","import { useState, useCallback, useMemo } from 'react';\nimport axios from 'axios';\nimport { get } from '../requests';\n\n\ninterface ProgressEvent {\n  loaded: number;\n  total: number;\n}\n\ninterface Hook {\n  setValue: (value: File | string | undefined) => void;\n  isReady: boolean;\n  resolve: () => Promise<string>;\n  progress: number;\n}\n\nexport default (): Hook => {\n  const [url, setUrl] = useState<string>();\n  const [file, setFile] = useState<File>();\n  const [progress, setProgress] = useState<number>(0);\n\n  const isReady = useMemo(() => Boolean(file || url), [file, url]);\n\n  const setValue: Hook['setValue'] = useCallback(value => {\n    if (value instanceof File) {\n      setFile(value);\n      setUrl(undefined);\n    } else {\n      setUrl(value);\n      setFile(undefined);\n    }\n  }, [setUrl, setFile]);\n\n  const handleUploadProgress = useCallback((progressEvent: ProgressEvent): void => {\n    setProgress(Math.round((progressEvent.loaded * 100) / progressEvent.total));\n  }, [setProgress]);\n\n  const resolve = useCallback(async (): Promise<string> => {\n    if (file) {\n      const config = {\n        headers: { 'Content-Type': 'image/png' },\n        onUploadProgress: handleUploadProgress\n      };\n\n      return get('/files')\n        .then(response => response.data)\n        .then(uploadUrl => axios.put(uploadUrl, file, config))\n        .then(response => {\n          const uri = response.config.url;\n          return uri ? uri.slice(0, uri.indexOf('?')) : '';\n        });\n    }\n    setProgress(100);\n    return url || '';\n  }, [file, handleUploadProgress, url]);\n\n  return {\n    setValue,\n    isReady,\n    resolve,\n    progress\n  };\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Card,\n  Divider,\n  Container,\n  LinearProgress\n} from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\n\nimport ImageInput from './ImageInput';\nimport UserStrip from '../../components/UserStrip/UserStrip';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useFeed } from '../../hooks/APIClient';\nimport useS3Preupload from '../../hooks/useS3Preupload';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(4)\n  },\n  images: {\n    height: theme.spacing(50),\n    display: 'flex'\n  }\n}));\n\n\nconst PollCreation: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n  const { mutate: updateFeed } = useFeed();\n  const {\n    setValue: setLeft,\n    progress: progressLeft,\n    resolve: resolveLeft,\n    isReady: isLeftReady\n  } = useS3Preupload();\n  const {\n    setValue: setRight,\n    progress: progressRight,\n    resolve: resolveRight,\n    isReady: isRightReady\n  } = useS3Preupload();\n\n  const handleClick = async () => {\n    if (isLeftReady && isRightReady) {\n      const [leftUrl, rightUrl] = await Promise.all([resolveLeft(), resolveRight()]);\n\n      const contents = {\n        left: { url: leftUrl },\n        right: { url: rightUrl }\n      };\n\n      post('/polls/', { contents }).then(() => {\n        updateFeed();\n        enqueueSnackbar('Your poll has been successfully created!', {\n          variant: 'success'\n        });\n      });\n\n      history.push('/feed');\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      <Card className={classes.root}>\n        {user && <UserStrip user={user} info=\"\" />}\n        <Divider />\n        <div className={classes.images}>\n          <ImageInput callback={setLeft} progress={progressLeft} />\n          <ImageInput callback={setRight} progress={progressRight} />\n        </div>\n        {\n          progressLeft || progressRight\n            ? <LinearProgress color=\"primary\" />\n            : (\n              <Button\n                color=\"primary\"\n                disabled={!(isLeftReady && isRightReady)}\n                variant=\"contained\"\n                onClick={handleClick}\n                fullWidth\n              >\n                Submit\n              </Button>\n            )\n        }\n      </Card>\n    </Container>\n  );\n};\n\nexport default PollCreation;\n"],"sourceRoot":""}