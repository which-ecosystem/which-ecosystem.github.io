{"version":3,"sources":["components/PollCard/PercentageBar.tsx","components/PollCard/PollCard.tsx","components/PollsList/PollsList.tsx","containers/Feed/PollSubmissionImage.tsx","containers/Feed/PollSubmission.tsx","containers/Feed/Feed.tsx"],"names":["useStyles","makeStyles","root","position","color","top","fontSize","textShadow","display","alignItems","left","right","PercentageBar","value","which","like","classes","className","DATE_FORMAT","month","day","year","hour","minute","theme","images","height","spacing","imagesBlock","rateLine","width","backgroundColor","palette","primary","light","transitionDuration","highlight","main","fillRateLine","PollCard","leftPercentage","rightPercentage","poll","setPoll","author","contents","vote","enqueueSnackbar","useSnackbar","isAuthenticated","useAuth","date","Date","createdAt","toLocaleString","handleVote","variant","newVote","pollId","_id","newPoll","votes","authorId","post","Math","round","dominant","Card","UserStrip","user","info","CardActionArea","onDoubleClick","CardMedia","image","url","style","PollsList","polls","mutate","RenderItem","index","key","length","newPolls","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","ref","autoHeight","onScroll","rowCount","rowHeight","rowRenderer","containerStyle","pointerEvents","overscanRowCount","justifyContent","flexDirection","clearIcon","opacity","media","text","textAlign","PollSubmissionImage","file","setFile","useFilePicker","files","onClick","HiddenFileInput","useState","setUrl","isMediaHover","setIsMediaHover","useEffect","chosenFile","utils","loadFile","then","result","Upload","Typography","accept","multiple","Media","onMouseEnter","onMouseLeave","undefined","marginBottom","PollSubmission","addPoll","expanded","setExpanded","setLeft","setRight","readyToSubmit","uploadImage","headers","get","response","data","uploadUrl","axios","put","config","slice","indexOf","handleClick","a","Promise","all","leftUrl","rightUrl","ClickAwayListener","onClickAway","Collapse","in","timeout","unmountOnExit","Divider","Button","disabled","fullWidth","Feed","useFeed","Container","maxWidth","disableGutters"],"mappings":"4MAUMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,WACVC,MAAO,QACPC,IAAK,MACLC,SAAU,GACVC,WAAY,gBACZC,QAAS,OACTC,WAAY,UAEdC,KAAM,CACJA,KAAM,IAERC,MAAO,CACLA,MAAO,MAgBIC,EAZ4B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACpDC,EAAUhB,IAEhB,OACE,yBAAKiB,UAAS,UAAKD,EAAQd,KAAb,YAAqBc,EAAQF,KACxCC,GAAQ,kBAAC,IAAD,MADX,UAEMF,EAFN,O,wBCZEK,EAAc,CAClBC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,OAAQ,WAGJvB,EAAYC,aAAW,SAAAuB,GAAK,MAAK,CACrCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,KAExBC,YAAa,CACXpB,QAAS,QAEXqB,SAAU,CACR1B,SAAU,WACV2B,MAAO,OACPJ,OAAQF,EAAMG,QAAQ,GACtBI,gBAAiBP,EAAMQ,QAAQC,QAAQC,MACvCC,mBAAoB,QAEtBC,UAAW,CACTL,gBAAgB,GAAD,OAAKP,EAAMQ,QAAQC,QAAQI,KAA3B,gBAEjBC,aAAc,CACZZ,OAAQF,EAAMG,QAAQ,GACtBI,gBAAiBP,EAAMQ,QAAQC,QAAQC,MACvCC,mBAAoB,YAiFTI,EA7EuB,SAAC,GAAuB,IAmCxDC,EACAC,EApCmCC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvC3B,EAAUhB,IACR4C,EAA4CF,EAA5CE,OAFmD,EAEPF,EAApCG,SAAYnC,EAF+B,EAE/BA,KAAMC,EAFyB,EAEzBA,MAASmC,EAASJ,EAATI,KACnCC,EAAoBC,cAApBD,gBACAE,EAAoBC,cAApBD,gBACFE,EAAe,IAAIC,KAAKV,EAAKW,WAAWC,eAAe,UAAWpC,GAElEqC,EAAa,SAACzC,GAClB,GAAKmC,EAIE,GAAIH,EACTC,EAAgB,sCAAuC,CACrDS,QAAS,cAEN,CACL,IAAMC,EAAW,CAAE3C,QAAO4C,OAAQhB,EAAKiB,KACjCC,EAAO,eAAQlB,GACrBkB,EAAQf,SAAS/B,GAAO+C,OAAS,EACjCD,EAAQd,KAAR,aACEa,IAAK,GACLG,SAAU,GACVT,UAAW,IAAID,MACZK,GAELd,EAAQiB,GAERG,YAAK,SAAUN,QAnBfV,EAAgB,2CAA4C,CAC1DS,QAAS,WA4BX9C,EAAKmD,OAASlD,EAAMkD,MAEtBpB,EAAkB,KADlBD,EAAiBwB,KAAKC,MAAavD,EAAKmD,OAASnD,EAAKmD,MAAQlD,EAAMkD,OAAxC,OAG5BrB,EAAiB,EACjBC,EAAkB,GAGpB,IAAMyB,EAAkBxD,EAAKmD,OAASlD,EAAMkD,MAAQ,OAAS,QAE7D,OACE,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,KAAMzB,EAAQ0B,KAAMnB,IAC/B,yBAAKlC,UAAWD,EAAQY,aACtB,kBAAC2C,EAAA,EAAD,CAAgBC,cApBH,kBAAMjB,EAAW,UAqB5B,kBAACkB,EAAA,EAAD,CACExD,UAAWD,EAAQS,OACnBiD,MAAOhE,EAAKiE,MAEd,kBAAC,EAAD,CAAe9D,MAAO2B,EAAgB1B,MAAM,OAAOC,KAAsB,UAAZ,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMhC,UAEjE,kBAACyD,EAAA,EAAD,CAAgBC,cA1BF,kBAAMjB,EAAW,WA2B7B,kBAACkB,EAAA,EAAD,CACExD,UAAWD,EAAQS,OACnBiD,MAAO/D,EAAMgE,MAEf,kBAAC,EAAD,CAAe9D,MAAO4B,EAAiB3B,MAAM,QAAQC,KAAsB,WAAZ,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMhC,WAGrE,yBAAKG,UAAS,UAAKD,EAAQa,SAAb,YAAsC,UAAbqC,EAAuBlD,EAAQoB,UAAY,KAChF,yBACEnB,UAAS,UAAKD,EAAQsB,aAAb,YAA0C,SAAb4B,EAAsBlD,EAAQoB,UAAY,IAChFwC,MAAO,CAAE9C,MAAM,GAAD,OAAKU,EAAL,WClDTqC,IAtDwB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACzCC,EAAwC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOL,EAAiB,EAAjBA,MAAOM,EAAU,EAAVA,IACvDxC,EAAOoC,EAAMG,GAWnB,OAEE,yBAAKC,IAAG,UAAKA,EAAL,YAAYxC,EAAKiB,IAAjB,YAAwBmB,EAAMK,QAAUP,MAAOA,GACrD,kBAAC,EAAD,CAAUlC,KAAMA,EAAMC,QAZV,SAACiB,GACf,IAAMwB,EAAQ,YAAON,GACrBM,EAASH,GAASrB,EAGlBmB,EAAO,IAAI,GACXA,EAAOK,GAAU,QAWrB,OACE,kBAAC,IAAD,MACG,gBACC1D,EADD,EACCA,OACA2D,EAFD,EAECA,YACAC,EAHD,EAGCA,cACAC,EAJD,EAICA,cACAC,EALD,EAKCA,UALD,OAOC,kBAAC,IAAD,CAAWC,eAAa,IACrB,gBAAG3D,EAAH,EAAGA,MAAH,OACC,yBAAK4D,IAAKJ,GACR,kBAAC,IAAD,CACEK,YAAU,EACVjE,OAAQA,EACR2D,YAAaA,EACbO,SAAUL,EACVM,SAAUf,EAAMK,OAChBW,UAAW,IACXC,YAAaf,EACbQ,UAAWA,EACX1D,MAAOA,EACPkE,eAAgB,CAAEC,cAAe,QACjCC,iBAAkB,a,8QClD5BlG,EAAYC,YAAW,CAC3BC,KAAM,CACJM,QAAS,OACT2F,eAAgB,SAChBC,cAAe,SACf3F,WAAY,UAEd4F,UAAW,CACTC,QAAS,KACThG,SAAU,IAEZiG,MAAO,CACL7E,OAAQ,OACRI,MAAO,OACPtB,QAAS,OACT2F,eAAgB,SAChB1F,WAAY,UAEd+F,KAAM,CACJC,UAAW,YA+DAC,EA1DkC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClD5F,EAAUhB,IADsD,EAE1B6G,0BAApCC,EAF8D,EAE9DA,MAAOC,EAFuD,EAEvDA,QAASC,EAF8C,EAE9CA,gBAF8C,EAGhDC,qBAHgD,mBAG/DtC,EAH+D,KAG1DuC,EAH0D,OAI9BD,oBAAS,GAJqB,mBAI/DE,EAJ+D,KAIjDC,EAJiD,KActEC,qBAAU,WACR,UAAIP,QAAJ,IAAIA,OAAJ,EAAIA,EAAO3B,OAAQ,CACjB,IAAMmC,EAAaR,EAAM,GACzBF,EAAQU,GACRC,QAAMC,SAASF,GAAYG,MAAK,SAAAC,GAAM,OAAIR,EAAOQ,SAElD,CAACZ,EAAOF,IAGX,IAOMe,EACJ,oCACE,kBAAC,IAAD,CAAiBrH,SAAS,QAAQF,MAAM,YACxC,kBAACwH,EAAA,EAAD,CAAYpE,QAAQ,KAAKvC,UAAWD,EAAQwF,MAA5C,qBACA,kBAACQ,EAAD,CAAiBa,OAAO,0BAA0BC,UAAU,KAI1DC,EACJ,kBAACtD,EAAA,EAAD,CACEC,MAAOC,EACP1D,UAAWD,EAAQuF,MACnByB,aApCqB,WACvBZ,GAAgB,IAoCda,aAjCqB,WACvBb,GAAgB,KAkCbD,GAAgB,kBAAC,IAAD,CAAoBlG,UAAWD,EAAQqF,aAI5D,OACE,oCACE,kBAAC9B,EAAA,EAAD,CAAgBwC,QA5BA,WACdJ,EACFC,OAAQsB,GACHnB,KAyBiC9F,UAAWD,EAAQd,MACtDyG,EAAQhC,GAAOoD,EAASJ,K,wBClE3B3H,EAAYC,aAAW,SAAAuB,GAAK,MAAK,CACrCtB,KAAM,CACJiI,aAAc3G,EAAMG,QAAQ,IAE9BF,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,IACtBnB,QAAS,YAyEE4H,EArE6B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvCrH,EAAUhB,IAD2C,EAE3BiH,oBAAS,GAFkB,mBAEpDqB,EAFoD,KAE1CC,EAF0C,OAGnCtB,qBAHmC,mBAGpDvG,EAHoD,KAG9C8H,EAH8C,OAIjCvB,qBAJiC,mBAIpDtG,EAJoD,KAI7C8H,EAJ6C,KAKnD1F,EAAoBC,cAApBD,gBACAsB,EAASnB,cAATmB,KAEFqE,EAAgBhI,GAAQC,EAMxBgI,EAAc,SAAChC,GACnB,IAAMiC,EAAU,CAAE,eAAgB,aAClC,OAAOC,YAAI,UACRpB,MAAK,SAAAqB,GAAQ,OAAIA,EAASC,QAC1BtB,MAAK,SAAAuB,GAAS,OAAIC,IAAMC,IAAIF,EAAWrC,EAAM,CAAEiC,eAC/CnB,MAAK,SAAAqB,GAAa,IACCnE,EAAUmE,EAApBK,OAAUxE,IAClB,OAAOA,GAAOA,EAAIyE,MAAM,EAAGzE,EAAI0E,QAAQ,QAAU,OAIjDC,EAAW,uCAAG,oCAAAC,EAAA,0DACdjB,IAAYI,EADE,gCAEkBc,QAAQC,IAAI,CAACd,EAAYjI,GAAOiI,EAAYhI,KAF9D,mCAET+I,EAFS,KAEAC,EAFA,KAIV9G,EAAW,CACfnC,KAAM,CAAEiE,IAAK+E,GACb/I,MAAO,CAAEgE,IAAKgF,IAGhB5F,YAAK,UAAW,CAAElB,aAAY4E,MAAK,SAAAqB,GACjCT,EAAQS,EAASC,MACjBhG,EAAgB,2CAA4C,CAC1DS,QAAS,eAZG,OAgBlB+E,GAAaD,GAhBK,4CAAH,qDAmBjB,OACE,kBAACsB,EAAA,EAAD,CAAmBC,YAnCG,WACtBtB,GAAY,KAmCV,kBAACpE,EAAA,EAAD,CAAMlD,UAAWD,EAAQd,MACvB,kBAAC4J,EAAA,EAAD,CAAUC,GAAIzB,EAAU0B,QAAQ,OAAOC,eAAa,GACjD5F,GAAQ,kBAACD,EAAA,EAAD,CAAWC,KAAMA,EAAMC,KAAK,KACrC,kBAAC4F,EAAA,EAAD,MACA,yBAAKjJ,UAAWD,EAAQS,QACtB,kBAAC,EAAD,CAAqBkF,KAAMjG,EAAMkG,QAAS4B,IAC1C,kBAAC,EAAD,CAAqB7B,KAAMhG,EAAOiG,QAAS6B,MAG/C,kBAAC0B,EAAA,EAAD,CACE/J,MAAM,UACNgK,SAAU9B,IAAaI,EACvBlF,QAAS8E,EAAW,YAAc,WAClCvB,QAASuC,EACTe,WAAS,GAER/B,EAAW,SAAW,oB,QCrElBgC,UAhBQ,WAAO,IAAD,EACKC,cAAlBzF,EADa,EACnBiE,KAAahE,EADM,EACNA,OACb9B,EAAoBC,cAApBD,gBAMR,OACE,kBAACuH,EAAA,EAAD,CAAWC,SAAS,KAAKC,gBAAc,GACpCzH,GAAmB,kBAAC,EAAD,CAAgBoF,QANxB,SAAC3F,GACfqC,EAAO,CAACrC,GAAF,mBAAWoC,KAAQ,MAMvB,kBAACD,EAAA,EAAD,CAAWC,MAAOA,EAAOC,OAAQA","file":"static/js/8.8bd24ab7.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LikeIcon from '@material-ui/icons/Favorite';\n\ninterface PropTypes {\n  value: number;\n  which: 'left' | 'right';\n  like: boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    color: 'white',\n    top: '86%',\n    fontSize: 20,\n    textShadow: '0 0 3px black',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  left: {\n    left: 30\n  },\n  right: {\n    right: 30\n  }\n});\n\nconst PercentageBar: React.FC<PropTypes> = ({ value, which, like }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={`${classes.root} ${classes[which]}`}>\n      {like && <LikeIcon />}\n      {`${value}%`}\n    </div>\n  );\n};\n\n\nexport default PercentageBar;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardActionArea,\n  CardMedia\n} from '@material-ui/core/';\nimport { Which, Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\n\nimport PercentageBar from './PercentageBar';\nimport UserStrip from '../UserStrip/UserStrip';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes {\n  poll: Poll;\n  setPoll: (poll: Poll) => void;\n}\n\nconst DATE_FORMAT = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nconst useStyles = makeStyles(theme => ({\n  images: {\n    height: theme.spacing(50)\n  },\n  imagesBlock: {\n    display: 'flex'\n  },\n  rateLine: {\n    position: 'relative',\n    width: '100%',\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  highlight: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  fillRateLine: {\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  }\n}));\n\nconst PollCard: React.FC<PropTypes> = ({ poll, setPoll }) => {\n  const classes = useStyles();\n  const { author, contents: { left, right }, vote } = poll;\n  const { enqueueSnackbar } = useSnackbar();\n  const { isAuthenticated } = useAuth();\n  const date: string = new Date(poll.createdAt).toLocaleString('default', DATE_FORMAT);\n\n  const handleVote = (which: Which) => {\n    if (!isAuthenticated) {\n      enqueueSnackbar('Unauthorized users can not vote in polls', {\n        variant: 'error'\n      });\n    } else if (vote) {\n      enqueueSnackbar('You have already voted in this poll', {\n        variant: 'error'\n      });\n    } else {\n      const newVote = ({ which, pollId: poll._id });\n      const newPoll = { ...poll };\n      newPoll.contents[which].votes += 1;\n      newPoll.vote = {\n        _id: '',\n        authorId: '',\n        createdAt: new Date(),\n        ...newVote\n      };\n      setPoll(newPoll);\n\n      post('votes/', newVote);\n    }\n  };\n\n  const handleLeft = () => handleVote('left');\n  const handleRight = () => handleVote('right');\n\n  let leftPercentage;\n  let rightPercentage;\n\n  if (left.votes || right.votes) {\n    leftPercentage = Math.round(100 * (left.votes / (left.votes + right.votes)));\n    rightPercentage = 100 - leftPercentage;\n  } else {\n    leftPercentage = 0;\n    rightPercentage = 0;\n  }\n\n  const dominant: Which = left.votes >= right.votes ? 'left' : 'right';\n\n  return (\n    <Card>\n      <UserStrip user={author} info={date} />\n      <div className={classes.imagesBlock}>\n        <CardActionArea onDoubleClick={handleLeft}>\n          <CardMedia\n            className={classes.images}\n            image={left.url}\n          />\n          <PercentageBar value={leftPercentage} which=\"left\" like={vote?.which === 'left'} />\n        </CardActionArea>\n        <CardActionArea onDoubleClick={handleRight}>\n          <CardMedia\n            className={classes.images}\n            image={right.url}\n          />\n          <PercentageBar value={rightPercentage} which=\"right\" like={vote?.which === 'right'} />\n        </CardActionArea>\n      </div>\n      <div className={`${classes.rateLine} ${dominant === 'right' ? classes.highlight : ''}`}>\n        <div\n          className={`${classes.fillRateLine} ${dominant === 'left' ? classes.highlight : ''}`}\n          style={{ width: `${leftPercentage}%` }}\n        />\n      </div>\n    </Card>\n  );\n};\n\nexport default PollCard;\n","import React from 'react';\nimport { Poll } from 'which-types';\nimport { WindowScroller, AutoSizer, List } from 'react-virtualized';\nimport PollCard from '../PollCard/PollCard';\n\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n}\n\ninterface RenderPropTypes {\n  index: number;\n  key: string;\n  style: React.CSSProperties;\n}\n\n\nconst PollsList: React.FC<PropTypes> = ({ polls, mutate }) => {\n  const RenderItem: React.FC<RenderPropTypes> = ({ index, style, key }) => {\n    const poll = polls[index];\n\n    const setPoll = (newPoll: Poll) => {\n      const newPolls = [...polls];\n      newPolls[index] = newPoll;\n\n      // Force-update list-size so everything re-renders\n      mutate([], false);\n      mutate(newPolls, false);\n    };\n\n    return (\n      // To re-render on list resize, add this info to key\n      <div key={`${key}-${poll._id}-${polls.length}`} style={style}>\n        <PollCard poll={poll} setPoll={setPoll} />\n      </div>\n    );\n  };\n\n  return (\n    <WindowScroller>\n      {({\n        height,\n        isScrolling,\n        registerChild,\n        onChildScroll,\n        scrollTop\n      }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <div ref={registerChild}>\n              <List\n                autoHeight\n                height={height}\n                isScrolling={isScrolling}\n                onScroll={onChildScroll}\n                rowCount={polls.length}\n                rowHeight={550}\n                rowRenderer={RenderItem}\n                scrollTop={scrollTop}\n                width={width}\n                containerStyle={{ pointerEvents: 'auto' }}\n                overscanRowCount={1}\n              />\n            </div>\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  );\n};\n\nexport default PollsList;\n\n","import React, { useState, useEffect } from 'react';\nimport { useFilePicker, utils } from 'react-sage';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { CardActionArea, CardMedia, Typography } from '@material-ui/core';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\n\ninterface PropTypes {\n  file: File | undefined;\n  setFile: (file: File | undefined) => void;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  clearIcon: {\n    opacity: '.5',\n    fontSize: 50\n  },\n  media: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center'\n  }\n});\n\n\nconst PollSubmissionImage: React.FC<PropTypes> = ({ file, setFile }) => {\n  const classes = useStyles();\n  const { files, onClick, HiddenFileInput } = useFilePicker();\n  const [url, setUrl] = useState<string>();\n  const [isMediaHover, setIsMediaHover] = useState(false);\n\n  const handleMouseEnter = (): void => {\n    setIsMediaHover(true);\n  };\n\n  const handleMouseLeave = (): void => {\n    setIsMediaHover(false);\n  };\n\n  useEffect(() => {\n    if (files?.length) {\n      const chosenFile = files[0];\n      setFile(chosenFile);\n      utils.loadFile(chosenFile).then(result => setUrl(result));\n    }\n  }, [files, setFile]);\n\n\n  const handleClick = () => {\n    if (file) {\n      setFile(undefined);\n    } else onClick();\n  };\n\n\n  const Upload = (\n    <>\n      <CloudUploadIcon fontSize=\"large\" color=\"primary\" />\n      <Typography variant=\"h5\" className={classes.text}> Upload an image </Typography>\n      <HiddenFileInput accept=\".jpg, .jpeg, .png, .gif\" multiple={false} />\n    </>\n  );\n\n  const Media = (\n    <CardMedia\n      image={url}\n      className={classes.media}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {isMediaHover && <CancelOutlinedIcon className={classes.clearIcon} />}\n    </CardMedia>\n  );\n\n  return (\n    <>\n      <CardActionArea onClick={handleClick} className={classes.root}>\n        {file ? (url && Media) : Upload}\n      </CardActionArea>\n    </>\n  );\n};\n\nexport default PollSubmissionImage;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport {\n  Button,\n  Card,\n  ClickAwayListener,\n  Divider\n} from '@material-ui/core';\nimport { Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\nimport axios from 'axios';\n\nimport PollSubmissionImage from './PollSubmissionImage';\nimport UserStrip from '../../components/UserStrip/UserStrip';\nimport { get, post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes{\n  addPoll: (poll: Poll) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(4)\n  },\n  images: {\n    height: theme.spacing(50),\n    display: 'flex'\n  }\n}));\n\nconst PollSubmission: React.FC<PropTypes> = ({ addPoll }) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const [left, setLeft] = useState<File>();\n  const [right, setRight] = useState<File>();\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n\n  const readyToSubmit = left && right;\n\n  const handleClickAway = () => {\n    setExpanded(false);\n  };\n\n  const uploadImage = (file?: File) => {\n    const headers = { 'Content-Type': 'image/png' };\n    return get('/files')\n      .then(response => response.data)\n      .then(uploadUrl => axios.put(uploadUrl, file, { headers }))\n      .then(response => {\n        const { config: { url } } = response;\n        return url && url.slice(0, url.indexOf('.png') + 4);\n      });\n  };\n\n  const handleClick = async () => {\n    if (expanded && readyToSubmit) {\n      const [leftUrl, rightUrl] = await Promise.all([uploadImage(left), uploadImage(right)]);\n\n      const contents = {\n        left: { url: leftUrl },\n        right: { url: rightUrl }\n      };\n\n      post('/polls/', { contents }).then(response => {\n        addPoll(response.data);\n        enqueueSnackbar('Your poll has been successfully created!', {\n          variant: 'success'\n        });\n      });\n    }\n    setExpanded(!expanded);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <Card className={classes.root}>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          {user && <UserStrip user={user} info=\"\" />}\n          <Divider />\n          <div className={classes.images}>\n            <PollSubmissionImage file={left} setFile={setLeft} />\n            <PollSubmissionImage file={right} setFile={setRight} />\n          </div>\n        </Collapse>\n        <Button\n          color=\"primary\"\n          disabled={expanded && !readyToSubmit}\n          variant={expanded ? 'contained' : 'outlined'}\n          onClick={handleClick}\n          fullWidth\n        >\n          {expanded ? 'Submit' : 'Create a Poll'}\n        </Button>\n      </Card>\n    </ClickAwayListener>\n  );\n};\n\nexport default PollSubmission;\n","import React from 'react';\nimport { Poll } from 'which-types';\nimport { Container } from '@material-ui/core/';\n\nimport PollsList from '../../components/PollsList/PollsList';\nimport PollSubmission from './PollSubmission';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useFeed } from '../../hooks/APIClient';\n\nconst Feed: React.FC = () => {\n  const { data: polls, mutate } = useFeed();\n  const { isAuthenticated } = useAuth();\n\n  const addPoll = (poll: Poll): void => {\n    mutate([poll, ...polls], true);\n  };\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      {isAuthenticated && <PollSubmission addPoll={addPoll} />}\n      <PollsList polls={polls} mutate={mutate} />\n    </Container>\n  );\n};\n\nexport default Feed;\n\n"],"sourceRoot":""}