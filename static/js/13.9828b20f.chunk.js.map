{"version":3,"sources":["containers/PollCreation/PollCreationImage.tsx","containers/PollCreation/PollCreation.tsx"],"names":["useStyles","makeStyles","root","display","justifyContent","flexDirection","alignItems","clearIcon","opacity","fontSize","media","height","width","text","textAlign","PollCreationImage","file","setFile","classes","useFilePicker","files","onClick","HiddenFileInput","useState","url","setUrl","isMediaHover","setIsMediaHover","useEffect","length","chosenFile","utils","loadFile","then","result","Upload","color","Typography","variant","className","accept","multiple","Media","CardMedia","image","onMouseEnter","onMouseLeave","CardActionArea","undefined","theme","marginBottom","spacing","images","PollCreation","addPoll","left","setLeft","right","setRight","enqueueSnackbar","useSnackbar","user","useAuth","readyToSubmit","uploadImage","headers","get","response","data","uploadUrl","axios","put","config","slice","indexOf","handleClick","a","Promise","all","leftUrl","rightUrl","contents","post","Container","maxWidth","disableGutters","Card","UserStrip","info","Divider","Button","disabled","fullWidth"],"mappings":"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","file":"static/js/13.9828b20f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFilePicker, utils } from 'react-sage';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { CardActionArea, CardMedia, Typography } from '@material-ui/core';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\n\ninterface PropTypes {\n  file: File | undefined;\n  setFile: (file: File | undefined) => void;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  clearIcon: {\n    opacity: '.5',\n    fontSize: 50\n  },\n  media: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center'\n  }\n});\n\n\nconst PollCreationImage: React.FC<PropTypes> = ({ file, setFile }) => {\n  const classes = useStyles();\n  const { files, onClick, HiddenFileInput } = useFilePicker();\n  const [url, setUrl] = useState<string>();\n  const [isMediaHover, setIsMediaHover] = useState(false);\n\n  const handleMouseEnter = (): void => {\n    setIsMediaHover(true);\n  };\n\n  const handleMouseLeave = (): void => {\n    setIsMediaHover(false);\n  };\n\n  useEffect(() => {\n    if (files?.length) {\n      const chosenFile = files[0];\n      setFile(chosenFile);\n      utils.loadFile(chosenFile).then(result => setUrl(result));\n    }\n  }, [files, setFile]);\n\n\n  const handleClick = () => {\n    if (file) {\n      setFile(undefined);\n    } else onClick();\n  };\n\n\n  const Upload = (\n    <>\n      <CloudUploadIcon fontSize=\"large\" color=\"primary\" />\n      <Typography variant=\"h5\" className={classes.text}> Upload an image </Typography>\n      <HiddenFileInput accept=\".jpg, .jpeg, .png, .gif\" multiple={false} />\n    </>\n  );\n\n  const Media = (\n    <CardMedia\n      image={url}\n      className={classes.media}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {isMediaHover && <CancelOutlinedIcon className={classes.clearIcon} />}\n    </CardMedia>\n  );\n\n  return (\n    <>\n      <CardActionArea onClick={handleClick} className={classes.root}>\n        {file ? (url && Media) : Upload}\n      </CardActionArea>\n    </>\n  );\n};\n\nexport default PollCreationImage;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Card,\n  Divider,\n  Container\n} from '@material-ui/core';\nimport { Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\nimport axios from 'axios';\n\nimport PollCreationImage from './PollCreationImage';\nimport UserStrip from '../../components/UserStrip/UserStrip';\nimport { get, post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes{\n  addPoll: (poll: Poll) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(4)\n  },\n  images: {\n    height: theme.spacing(50),\n    display: 'flex'\n  }\n}));\n\nconst PollCreation: React.FC<PropTypes> = ({ addPoll }) => {\n  const classes = useStyles();\n  const [left, setLeft] = useState<File>();\n  const [right, setRight] = useState<File>();\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n\n  const readyToSubmit = left && right;\n\n  const uploadImage = (file?: File) => {\n    const headers = { 'Content-Type': 'image/png' };\n    return get('/files')\n      .then(response => response.data)\n      .then(uploadUrl => axios.put(uploadUrl, file, { headers }))\n      .then(response => {\n        const { config: { url } } = response;\n        return url && url.slice(0, url.indexOf('.png') + 4);\n      });\n  };\n\n  const handleClick = async () => {\n    if (readyToSubmit) {\n      const [leftUrl, rightUrl] = await Promise.all([uploadImage(left), uploadImage(right)]);\n\n      const contents = {\n        left: { url: leftUrl },\n        right: { url: rightUrl }\n      };\n\n      post('/polls/', { contents }).then(response => {\n        addPoll(response.data);\n        enqueueSnackbar('Your poll has been successfully created!', {\n          variant: 'success'\n        });\n      });\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      <Card className={classes.root}>\n        {user && <UserStrip user={user} info=\"\" />}\n        <Divider />\n        <div className={classes.images}>\n          <PollCreationImage file={left} setFile={setLeft} />\n          <PollCreationImage file={right} setFile={setRight} />\n        </div>\n        <Button\n          color=\"primary\"\n          disabled={!readyToSubmit}\n          variant=\"contained\"\n          onClick={handleClick}\n          fullWidth\n        >\n          Submit\n        </Button>\n      </Card>\n    </Container>\n  );\n};\n\nexport default PollCreation;\n"],"sourceRoot":""}