{"version":3,"sources":["components/Image/Image.tsx","components/EmptyState/EmptyState.tsx","assets/noContent.svg","assets/construction.svg","components/Fab/Fab.tsx","components/PollCard/PercentageBar.tsx","components/Image/BackgroundImage.tsx","components/PollCard/PollCard.tsx","components/PollsList/RenderItem.tsx","components/PollsList/PollsList.tsx","components/AttachLink/Modal.tsx","components/AttachLink/AttachLink.tsx","containers/Profile/Highlight.tsx","containers/Profile/ProfileInfo.tsx","containers/Profile/Profile.tsx"],"names":["useStyles","makeStyles","theme","container","width","height","display","alignItems","justifyContent","success","opacity","filterBrightness","filterSaturate","loading","position","error","errorIcon","color","grey","spacing","Image","React","memo","src","alt","className","animationDuration","disableLoading","classes","useState","status","setStatus","handleLoad","useCallback","handleError","transition","useMemo","image","style","onLoad","onError","root","flexDirection","img","margin","CONTEXT","default","icon","noContentIcon","tagline","construction","constructionIcon","EmptyState","variant","message","module","exports","zIndex","breakpoints","down","right","bottom","up","Fab","hideOnScroll","history","useHistory","trigger","useScrollTrigger","appear","direction","in","onClick","push","top","fontSize","textShadow","left","PercentageBar","value","which","like","objectFit","pointerEvents","BackgroundImage","DATE_FORMAT","month","day","year","hour","minute","media","rateLine","backgroundColor","palette","primary","light","transitionDuration","highlight","main","fillRateLine","PollCard","leftPercentage","rightPercentage","poll","setPoll","author","contents","vote","enqueueSnackbar","useSnackbar","isAuthenticated","useAuth","date","Date","createdAt","toLocaleString","handleVote","newVote","pollId","_id","newPoll","votes","authorId","post","Math","round","dominant","Card","UserStrip","user","info","CardActionArea","onDoubleClick","url","RenderItem","polls","mutate","index","_key","newPolls","key","oldProps","newProps","PollsList","rowRenderer","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","ref","autoHeight","onScroll","rowCount","length","rowHeight","containerStyle","overscanRowCount","Modal","setIsOpen","isOpen","callback","setUrl","handleClose","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","id","label","type","fullWidth","autoComplete","onChange","event","target","DialogActions","Button","result","startsWith","match","fileId","disabled","AttachLink","children","handleOpen","defaultButton","startIcon","child","Children","toArray","isValidElement","cloneElement","menuButton","textAlign","menuNumber","fontWeight","menuText","Highlight","text","marginBottom","avatar","name","verified","marginLeft","profileMenu","marginTop","borderBottom","badge","borderRadius","cursor","background","avatarContainer","skeleton","ProfileInfo","savedPolls","totalVotes","setUserInfo","userInfo","dateSince","toLocaleDateString","patch","avatarUrl","then","res","data","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","Avatar","Skeleton","animation","Typography","username","Profile","useParams","useUser","useProfile","mutatePolls","isValidating","useEffect","isOwnProfile","reduce","total","current","Container","maxWidth","disableGutters","Loading"],"mappings":"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","file":"static/js/7.aa13ef0a.chunk.js","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ErrorIcon from '@material-ui/icons/BrokenImage';\nimport grey from '@material-ui/core/colors/grey';\n\ninterface PropTypes {\n  src?: string;\n  alt?: string;\n  className?: string;\n  animationDuration?: number;\n  disableLoading?: boolean;\n}\n\ntype Status = 'success' | 'loading' | 'error';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  success: {\n    opacity: '100%',\n    filterBrightness: '100%',\n    filterSaturate: '100%'\n  },\n  loading: {\n    opacity: 0,\n    filterBrightness: 0,\n    filterSaturate: '20%',\n    position: 'absolute'\n  },\n  error: {\n    display: 'none'\n  },\n  errorIcon: {\n    color: grey[300],\n    width: theme.spacing(6),\n    height: theme.spacing(6)\n  }\n}));\n\nconst Image: React.FC<PropTypes> = React.memo(({\n  src,\n  alt,\n  className,\n  animationDuration = 1000,\n  disableLoading = false\n}) => {\n  const classes = useStyles();\n  const [status, setStatus] = useState<Status>('loading');\n\n  const handleLoad = useCallback((): void => {\n    setStatus('success');\n  }, [setStatus]);\n\n  const handleError = useCallback((): void => {\n    setStatus('error');\n  }, [setStatus]);\n\n  const transition = useMemo(() => `\n    filterBrightness ${animationDuration * 0.75}ms cubic-bezier(0.4, 0.0, 0.2, 1),\n    filterSaturate ${animationDuration}ms cubic-bezier(0.4, 0.0, 0.2, 1),\n    opacity ${animationDuration / 2}ms cubic-bezier(0.4, 0.0, 0.2, 1)\n  `, [animationDuration]);\n\n  const image = (\n    <img\n      src={src}\n      alt={alt}\n      className={`${className} ${classes[status]}`}\n      style={{ transition }}\n      onLoad={handleLoad}\n      onError={handleError}\n    />\n  );\n\n  return (\n    <>\n      {src && image}\n      {\n        status !== 'success' && (\n          <div className={classes.container}>\n            {\n              (status === 'error' || !src)\n                ? <ErrorIcon className={classes.errorIcon} />\n                : (!disableLoading && <CircularProgress color=\"primary\" />)\n            }\n          </div>\n        )\n      }\n    </>\n  );\n});\n\nexport default Image;\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport noContentIcon from '../../assets/noContent.svg';\nimport constructionIcon from '../../assets/construction.svg';\n\n\ninterface PropTypes {\n  variant?: 'default' | 'construction';\n  message?: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  img: {\n    margin: theme.spacing(2),\n    width: theme.spacing(24)\n  }\n\n}));\n\nconst CONTEXT = {\n  default: {\n    icon: noContentIcon,\n    tagline: 'No content'\n  },\n  construction: {\n    icon: constructionIcon,\n    tagline: 'Coming soon'\n  }\n};\n\nconst EmptyState: React.FC<PropTypes> = ({ variant = 'default', message }) => {\n  const classes = useStyles();\n\n  const { icon, tagline } = CONTEXT[variant];\n\n  return (\n    <div className={classes.root}>\n      <img src={icon} className={classes.img} alt=\"No content\" />\n      <Typography variant=\"h5\">\n        {tagline}\n      </Typography>\n      <Typography color=\"textSecondary\">\n        <p>\n          {message}\n        </p>\n      </Typography>\n    </div>\n  );\n};\n\nexport default EmptyState;\n","module.exports = __webpack_public_path__ + \"static/media/noContent.527b7724.svg\";","module.exports = __webpack_public_path__ + \"static/media/construction.07ebb9e5.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Fab as FabBase, Slide, useScrollTrigger } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlusIcon from '@material-ui/icons/Add';\n\ninterface PropTypes {\n  hideOnScroll?: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: 1000,\n    position: 'fixed',\n\n    [theme.breakpoints.down('sm')]: {\n      right: theme.spacing(2),\n      bottom: theme.spacing(8)\n    },\n    [theme.breakpoints.up('md')]: {\n      right: theme.spacing(5),\n      bottom: theme.spacing(5)\n    }\n  }\n}));\n\nconst Fab: React.FC<PropTypes> = ({ hideOnScroll = false }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const trigger = useScrollTrigger();\n\n  const handleClick = () => {\n    history.push('/new');\n  };\n\n  return (\n    <Slide appear={false} direction=\"up\" in={(!hideOnScroll) || !trigger}>\n      <FabBase\n        onClick={handleClick}\n        className={classes.root}\n        color=\"secondary\"\n      >\n        <PlusIcon />\n      </FabBase>\n    </Slide>\n  );\n};\n\nexport default Fab;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LikeIcon from '@material-ui/icons/Favorite';\n\ninterface PropTypes {\n  value: number;\n  which: 'left' | 'right';\n  like: boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    color: 'white',\n    top: '86%',\n    fontSize: 20,\n    textShadow: '0 0 3px black',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  left: {\n    left: 30\n  },\n  right: {\n    right: 30\n  }\n});\n\nconst PercentageBar: React.FC<PropTypes> = ({ value, which, like }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={`${classes.root} ${classes[which]}`}>\n      {like && <LikeIcon />}\n      {`${value}%`}\n    </div>\n  );\n};\n\n\nexport default PercentageBar;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Image from './Image';\n\ninterface PropTypes {\n  src?: string;\n  alt?: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  },\n  image: {\n    objectFit: 'cover',\n    pointerEvents: 'none',\n    width: '100%',\n    height: '100%'\n  }\n});\n\nconst BackgroundImage: React.FC<PropTypes> = ({ src, alt }) => {\n  const classes = useStyles();\n\n  return (\n    <picture className={classes.root}>\n      <Image src={src} alt={alt} className={classes.image} />\n    </picture>\n  );\n};\n\nexport default BackgroundImage;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea } from '@material-ui/core/';\nimport { Which, Poll } from 'which-types';\nimport { useSnackbar } from 'notistack';\n\nimport PercentageBar from './PercentageBar';\nimport UserStrip from '../UserStrip/UserStrip';\nimport BackgroundImage from '../Image/BackgroundImage';\nimport { post } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface PropTypes {\n  poll: Poll;\n  setPoll: (poll: Poll) => void;\n}\n\nconst DATE_FORMAT = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nconst useStyles = makeStyles(theme => ({\n  media: {\n    display: 'flex',\n    height: theme.spacing(50)\n  },\n  rateLine: {\n    position: 'relative',\n    width: '100%',\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  },\n  highlight: {\n    backgroundColor: `${theme.palette.primary.main} !important`\n  },\n  fillRateLine: {\n    height: theme.spacing(2),\n    backgroundColor: theme.palette.primary.light,\n    transitionDuration: '0.5s'\n  }\n}));\n\nconst PollCard: React.FC<PropTypes> = React.memo(({ poll, setPoll }) => {\n  const classes = useStyles();\n  const { author, contents: { left, right }, vote } = poll;\n  const { enqueueSnackbar } = useSnackbar();\n  const { isAuthenticated } = useAuth();\n  const date: string = new Date(poll.createdAt).toLocaleString('default', DATE_FORMAT);\n\n  const handleVote = (which: Which) => {\n    if (!isAuthenticated) {\n      enqueueSnackbar('Unauthorized users can not vote in polls', {\n        variant: 'error'\n      });\n    } else if (vote) {\n      enqueueSnackbar('You have already voted in this poll', {\n        variant: 'error'\n      });\n    } else {\n      const newVote = ({ which, pollId: poll._id });\n      const newPoll = { ...poll };\n      newPoll.contents[which].votes += 1;\n      newPoll.vote = {\n        _id: '',\n        authorId: '',\n        createdAt: new Date(),\n        ...newVote\n      };\n      setPoll(newPoll);\n\n      post('votes/', newVote);\n    }\n  };\n\n  const handleLeft = () => handleVote('left');\n  const handleRight = () => handleVote('right');\n\n  let leftPercentage;\n  let rightPercentage;\n\n  if (left.votes || right.votes) {\n    leftPercentage = Math.round(100 * (left.votes / (left.votes + right.votes)));\n    rightPercentage = 100 - leftPercentage;\n  } else {\n    leftPercentage = 0;\n    rightPercentage = 0;\n  }\n\n  const dominant: Which = left.votes >= right.votes ? 'left' : 'right';\n\n  return (\n    <Card>\n      <UserStrip user={author} info={date} />\n      <div className={classes.media}>\n        <CardActionArea onDoubleClick={handleLeft} className={classes.media}>\n          <BackgroundImage src={left.url} />\n          <PercentageBar value={leftPercentage} which=\"left\" like={vote?.which === 'left'} />\n        </CardActionArea>\n        <CardActionArea onDoubleClick={handleRight} className={classes.media}>\n          <BackgroundImage src={right.url} />\n          <PercentageBar value={rightPercentage} which=\"right\" like={vote?.which === 'right'} />\n        </CardActionArea>\n      </div>\n      <div className={`${classes.rateLine} ${dominant === 'right' ? classes.highlight : ''}`}>\n        <div\n          className={`${classes.fillRateLine} ${dominant === 'left' ? classes.highlight : ''}`}\n          style={{ width: `${leftPercentage}%` }}\n        />\n      </div>\n    </Card>\n  );\n});\n\nexport default PollCard;\n","import React, { useCallback } from 'react';\nimport { Poll } from 'which-types';\nimport PollCard from '../PollCard/PollCard';\n\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n  index: number;\n  style: React.CSSProperties;\n  _key: string; // https://reactjs.org/warnings/special-props.html\n}\n\nconst compareProps = (oldProps: PropTypes, newProps: PropTypes) => {\n  if (oldProps._key !== newProps._key) return false;\n  if (oldProps.index !== newProps.index) return false;\n  if (oldProps.polls !== newProps.polls) return false;\n  // TODO: uncomment line below to listen to style updates\n  // if (JSON.stringify(oldProps.style)!== JSON.stringify(newProps.style)) return false;\n  return true;\n};\n\nconst RenderItem: React.FC<PropTypes> = React.memo(({\n  polls, mutate, index, style, _key\n}) => {\n  const poll = polls[index];\n\n  const setPoll = useCallback((newPoll: Poll) => {\n    const newPolls = [...polls];\n    newPolls[index] = newPoll;\n\n    // Force-update list-size so everything re-renders\n    mutate([], false);\n    mutate(newPolls, false);\n  }, [mutate, index, polls]);\n\n  return (\n    <div key={_key} style={style}>\n      <PollCard poll={poll} setPoll={setPoll} />\n    </div>\n  );\n}, compareProps);\n\n\nexport default RenderItem;\n\n","import React, { useCallback } from 'react';\nimport { Poll } from 'which-types';\nimport { WindowScroller, AutoSizer, List } from 'react-virtualized';\nimport RenderItem from './RenderItem';\n\ninterface PropTypes {\n  polls: Poll[];\n  mutate: (polls: Poll[], refetch: boolean) => void;\n}\n\nconst PollsList: React.FC<PropTypes> = ({ polls, mutate }) => {\n  const rowRenderer = useCallback(({ index, style, key }) => (\n    <RenderItem\n      polls={polls}\n      mutate={mutate}\n      index={index}\n      style={style}\n      key={key}\n      _key={key}\n    />\n  ), [polls, mutate]);\n\n  return (\n    <WindowScroller>\n      {({\n        height,\n        isScrolling,\n        registerChild,\n        onChildScroll,\n        scrollTop\n      }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <div ref={registerChild}>\n              <List\n                autoHeight\n                height={height}\n                isScrolling={isScrolling}\n                onScroll={onChildScroll}\n                rowCount={polls.length}\n                rowHeight={550}\n                rowRenderer={rowRenderer}\n                scrollTop={scrollTop}\n                width={width}\n                containerStyle={{ pointerEvents: 'auto' }}\n                overscanRowCount={2}\n              />\n            </div>\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  );\n};\n\nexport default PollsList;\n\n","import React, { useState } from 'react';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\n\ninterface PropTypes {\n  isOpen: boolean;\n  setIsOpen: (value: boolean) => void;\n  callback: (url: string) => void;\n}\n\nconst Modal: React.FC<PropTypes> = ({ setIsOpen, isOpen, callback }) => {\n  const [url, setUrl] = useState<string>('');\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  const handleSubmit = () => {\n    let result = url;\n    if (url.startsWith('https://www.instagram.com/')) {\n      const match = url.match('/p/(.*)/');\n      const id = match && match[1];\n      result = `https://www.instagram.com/p/${id}/media/?size=l`;\n    } else if (url.startsWith('https://drive.google.com/')) {\n      const match = url.match('/d/(.*)/');\n      const fileId = match && match[1];\n      result = `https://drive.google.com/uc?export=view&id=${fileId}`;\n    }\n    callback(result || '');\n    handleClose();\n  };\n\n  const handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setUrl(event.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog open={isOpen} onClose={handleClose}>\n        <DialogTitle>Upload via link</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Provide a valid URL to your image:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Image URL\"\n            type=\"text\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={handleChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\" disabled={!url.length}>\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport LinkIcon from '@material-ui/icons/Link';\nimport Modal from './Modal';\n\ninterface PropTypes {\n  callback: (url: string) => void;\n}\n\nconst AttachLink: React.FC<PropTypes> = ({ callback, children }) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const handleOpen = (): void => {\n    setIsOpen(true);\n  };\n\n  const defaultButton = (\n    <Button\n      onClick={handleOpen}\n      variant=\"outlined\"\n      color=\"primary\"\n      startIcon={<LinkIcon />}\n    >\n      Attach a link\n    </Button>\n  );\n\n  const child = children && React.Children.toArray(children)[0];\n\n  return (\n    <>\n      <Modal callback={callback} isOpen={isOpen} setIsOpen={setIsOpen} />\n      {\n        React.isValidElement(child)\n          ? React.cloneElement(child, { onClick: handleOpen })\n          : defaultButton\n      }\n    </>\n  );\n};\n\nexport default AttachLink;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface PropTypes {\n  text: string;\n  value: string | number;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative'\n  },\n  menuButton: {\n    width: 200,\n    height: 50,\n    textAlign: 'center'\n  },\n  menuNumber: {\n    fontWeight: 800,\n    color: 'black'\n  },\n  menuText: {\n    color: 'darkgray'\n  }\n});\n\n\nconst Highlight: React.FC<PropTypes> = ({ text, value }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.menuButton}>\n      <div className={classes.menuNumber}>{value}</div>\n      <div className={classes.menuText}>{text}</div>\n    </div>\n  );\n};\n\nexport default Highlight;\n","import React from 'react';\nimport { Badge, Typography } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { User } from 'which-types';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport VerifiedIcon from '@material-ui/icons/CheckCircleOutline';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Highlight from './Highlight';\nimport AttachLink from '../../components/AttachLink/AttachLink';\nimport Avatar from '../../components/Avatar/Avatar';\nimport { patch } from '../../requests';\nimport { useAuth } from '../../hooks/useAuth';\n\n\ninterface PropTypes {\n  savedPolls: number;\n  totalVotes: number;\n  userInfo: User | undefined;\n  setUserInfo: (userInfo: User) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(4)\n  },\n  avatar: {\n    width: 150,\n    height: 150,\n    margin: '0 auto'\n  },\n  name: {\n    margin: theme.spacing(1, 0),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  verified: {\n    marginLeft: theme.spacing(0.5),\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  },\n  profileMenu: {\n    display: 'flex',\n    width: '100%',\n    height: 50,\n    marginTop: theme.spacing(6),\n    borderBottom: '1px solid lightgray'\n  },\n  menuButton: {\n    width: 200,\n    height: 50,\n    textAlign: 'center'\n  },\n  badge: {\n    width: theme.spacing(5),\n    height: theme.spacing(5),\n    borderRadius: '50%',\n    cursor: 'pointer',\n    background: '#d3d3d3',\n    display: 'flex',\n    alignItems: 'center',\n    '& svg': {\n      margin: '0 auto'\n    }\n  },\n  avatarContainer: {\n    position: 'relative',\n    textAlign: 'center'\n  },\n  menuNumber: {\n    fontWeight: 800,\n    color: 'black'\n  },\n  menuText: {\n    color: 'darkgray'\n  },\n  skeleton: {\n    margin: '10px auto',\n    borderRadius: 2\n  }\n\n}));\n\n\nconst ProfileInfo: React.FC<PropTypes> = ({\n  savedPolls, totalVotes, setUserInfo, userInfo\n}) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const dateSince = new Date(userInfo?.createdAt || '').toLocaleDateString();\n\n  const patchAvatar = (url: string) => {\n    const id = user?._id;\n    patch(`/users/${id}`, { avatarUrl: url }).then(res => {\n      setUserInfo(res.data);\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      {\n        !userInfo\n          ? <Skeleton animation=\"wave\" variant=\"circle\" width={150} height={150} className={classes.avatar} />\n          : userInfo?._id === user?._id\n            ? (\n              <AttachLink callback={patchAvatar}>\n                <div className={classes.avatarContainer}>\n                  <Badge\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                      vertical: 'bottom',\n                      horizontal: 'right'\n                    }}\n                    badgeContent={(\n                      <div className={classes.badge}>\n                        <CameraAltIcon />\n                      </div>\n                    )}\n                  >\n                    <Avatar className={classes.avatar} user={userInfo} />\n                  </Badge>\n                </div>\n              </AttachLink>\n            )\n            : <Avatar className={classes.avatar} user={userInfo} />\n      }\n      {\n        !userInfo\n          ? <Skeleton animation=\"wave\" variant=\"rect\" width={100} height={20} className={classes.skeleton} />\n          : (\n            <Typography variant=\"h5\" className={classes.name}>\n              {userInfo?.username}\n              {userInfo?.verified && <VerifiedIcon className={classes.verified} color=\"primary\" />}\n            </Typography>\n          )\n      }\n      <div className={classes.profileMenu}>\n        {\n          !userInfo\n            ? (\n              <>\n                <Skeleton animation=\"wave\" variant=\"rect\" width={170} height={20} className={classes.skeleton} />\n                <Skeleton animation=\"wave\" variant=\"rect\" width={170} height={20} className={classes.skeleton} />\n                <Skeleton animation=\"wave\" variant=\"rect\" width={170} height={20} className={classes.skeleton} />\n              </>\n            )\n            : (\n              <>\n                <Highlight text=\"Polls\" value={savedPolls} />\n                <Highlight text=\"Since\" value={dateSince} />\n                <Highlight text=\"Total votes\" value={totalVotes} />\n              </>\n            )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React, { useEffect, useMemo } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Poll } from 'which-types';\nimport { Container } from '@material-ui/core';\n\nimport ProfileInfo from './ProfileInfo';\nimport PollsList from '../../components/PollsList/PollsList';\nimport Loading from '../../components/Loading/Loading';\nimport Fab from '../../components/Fab/Fab';\nimport EmptyState from '../../components/EmptyState/EmptyState';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useUser, useProfile } from '../../hooks/APIClient';\n\n\nconst Profile: React.FC = () => {\n  const history = useHistory();\n  const { username } = useParams();\n  const { user } = useAuth();\n\n  const { data: userInfo, mutate: setUserInfo } = useUser(username);\n  const { data: polls, mutate: mutatePolls, isValidating } = useProfile(username);\n\n  useEffect(() => {\n    if (!username) {\n      if (user) history.push(`/profile/${user.username}`);\n      else history.push('/login');\n    }\n  }, [username, history, user]);\n\n  const isOwnProfile = useMemo(() => user?.username === username, [user, username]);\n  const message = useMemo(() => {\n    return isOwnProfile\n      ? 'Create a poll and it will show up here.'\n      : 'This user has not uploaded anything yet.';\n  }, [isOwnProfile]);\n\n  const totalVotes = useMemo(() => polls?.reduce(\n    (total: number, current: Poll) => {\n      const { left, right } = current.contents;\n      return total + left.votes + right.votes;\n    }, 0\n  ) || 0, [polls]);\n\n  return (\n    <Container maxWidth=\"sm\" disableGutters>\n      <ProfileInfo\n        userInfo={userInfo}\n        setUserInfo={setUserInfo}\n        savedPolls={polls?.length || 0}\n        totalVotes={totalVotes}\n      />\n      {\n        polls\n          ? polls.length\n            ? <PollsList polls={polls} mutate={mutatePolls} />\n            : <EmptyState message={message} />\n          : isValidating && <Loading />\n      }\n      {isOwnProfile && <Fab />}\n    </Container>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}